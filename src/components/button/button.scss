@import 'resets';

$hover-neutral: $color-neutral-light-box;
$active-neutral: $color-neutral-medium-wave;

$hover-color: $color-neutral-medium-wave;
$active-color: $color-neutral-medium-silver;

$button-border-radius: 8px;

$height-tall: 56px;
$height-standard: 40px;
$height-short: 32px;

$button-size-tall: 14px;
$button-size-standard: 9px;
$button-size-short: 5px;

$button-size-tall-icon: 12px;
$button-size-standard-icon: 8px;
$button-size-short-icon: 4px;

$button-padding-left-right-icon: 16px;
$button-padding-left-right: 16px;

@mixin padding-button-top-bottom($padding, $height) {
  padding-top: $padding;
  padding-bottom: $padding;
  height: $height;
}

@mixin disable-button($background, $color: null, $border: null) {
  background: $background;
  pointer-events: none;

  @if ($color) {
    color: $color;
  }

  @if ($border) {
    border: $border;
  }

  &:hover,
  &:active {
    background: $background;

    @if ($color) {
      color: $color;
    }

    @if ($border) {
      border: $border;
    }
  }
}

@mixin inherit-color() {
  color: inherit;
  background-color: inherit;
}

@mixin hover-color() {
  &:hover {
    &:before {
      background: $hover-color;
    }
  }

  &:active {
    &:before {
      background: $active-color;
    }
  }
}

@mixin hover-neutral() {
  &:hover {
    &:before {
      background: $hover-neutral;
    }
  }

  &:active {
    &:before {
      background: $active-neutral;
    }
  }
}

.button {
  @include reset-button();
  cursor: pointer;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  height: 100%;
  overflow: hidden;
  border-radius: $button-border-radius;
  padding-left: $button-padding-left-right;
  padding-right: $button-padding-left-right;
  position: relative;
  box-sizing: border-box;

  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
  transition: all 0.5s;

  & * {
    pointer-events: none;
  }

  &:before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: transparent;
    mix-blend-mode: multiply;
  }

  &--size-tall {
    @include padding-button-top-bottom($button-size-tall, $height-tall);

    &--icon {
      @include padding-button-top-bottom($button-size-tall-icon, $height-tall);
    }
  }

  &--size-standard {
    @include padding-button-top-bottom($button-size-standard, $height-standard);

    &--icon {
      @include padding-button-top-bottom($button-size-standard-icon, $height-standard);
    }
  }

  &--size-short {
    @include padding-button-top-bottom($button-size-short, $height-short);

    &--icon {
      @include padding-button-top-bottom($button-size-short-icon, $height-standard);
    }
  }

  &--size-icon {
    &--left {
      padding-left: $button-padding-left-right-icon;
    }
    &--right {
      padding-right: $button-padding-left-right-icon;
    }
  }

  &__icon {
    @include inherit-color();
    height: 24px;
    margin-right: 4px;
  }

  &__arrow {
    @include inherit-color();
    height: 24px;
    margin-left: 2px;
  }

  &__content {
    height: 20px;
    display: flex;
    align-items: center;
  }

  &__primary {
    background: $color-primary-dark;
    color: $color-neutral-light-snow;

    @include hover-color();

    &--disabled {
      @include disable-button($color-disabled-bg, $color-disabled-text);
    }
  }

  &__secondary {
    background: transparent;
    color: $color-primary-dark;
    border: 2px solid $color-primary-dark;

    @include hover-neutral();

    &--disabled {
      @include disable-button(transparent, $color-disabled-text, 1px solid $color-disabled-text);
    }
  }

  &__tertiary {
    background: transparent;
    color: $color-primary-dark;

    @include hover-neutral();

    &--disabled {
      @include disable-button(transparent, $color-disabled-text);
    }
  }

  &__secondary--white {
    background: transparent;
    color: $color-neutral-light-snow;

    @include hover-neutral();

    &--disabled {
      @include disable-button($color-disabled-bg, $color-neutral-medium-cloud);
    }
  }

  &__ghost {
    background: transparent;
    color: $color-primary-dark;

    @include hover-neutral();

    &--disabled {
      @include disable-button(transparent, $color-disabled-text);
    }
  }

  &__delete {
    background: $color-extend-reds-lipstick;
    color: $color-neutral-light-snow;

    @include hover-color();

    &--disabled {
      @include disable-button($color-disabled-delete, $color-disabled-wrong);
    }
  }

  &__dashed {
    background: transparent;
    color: $color-primary-main;
    border: 1px dashed $color-primary-main;

    @include hover-neutral();

    &--disabled {
      @include disable-button(transparent, $color-neutral-medium-cloud, 1px dashed $color-neutral-medium-cloud);
    }
  }

  &__facebook {
    background: $color-facebook-main;
    color: $color-neutral-light-breeze;

    @include hover-color();

    &--disabled {
      @include disable-button($color-disabled-bg, $color-neutral-medium-cloud);
    }
  }

  bds-typo {
    position: relative;
  }

  bds-loading-spinner {
    width: auto;
    max-height: 100%;
    position: absolute;
  }

  .hide {
    cursor: not-allowed;
    opacity: 0;
  }
}
