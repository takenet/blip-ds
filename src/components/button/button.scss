@import 'resets';

$button-border-radius: 8px;

@mixin disable-button($color: null, $border: null) {
  opacity: 50%;
  pointer-events: none;

  @if ($color) {
    color: $color;
  }

  @if ($border) {
    border: $border;
  }

  &:hover,
  &:active {
    @if ($color) {
      color: $color;
    }

    @if ($border) {
      border: $border;
    }
  }
}

@mixin inherit-color() {
  color: inherit;
  background-color: inherit;
}

@mixin button-variant(
  $bg-color,
  $border-color,
  $text-color,
  $hover: null,
  $active: null,
  $dark: null,
  $disabled-opacity: 50%
) {
  background-color: $bg-color;
  border-color: $border-color;

  .typo_buttom,
  .icon_buttom {
    color: $text-color;
    z-index: 1;
  }

  &--disabled {
    opacity: $disabled-opacity;
    pointer-events: none;
  }

  &:hover::before {
    background-color: $hover;
    transition: background-color 0.3s ease;

    @if $dark {
      filter: brightness(0.88);
    } @else {
      opacity: 0.08;
    }
  }

  @if $active {
    &:active::before,
    &--active::before {
      @if $dark {
        filter: brightness(0.76);
      } @else {
        opacity: 0.24;
      }
    }
  }
}

@mixin button-size($height) {
  height: $height;
}

@mixin button-position($radius-top-left, $radius-top-right, $radius-bottom-left, $radius-bottom-right) {
  border-top-left-radius: $radius-top-left;
  border-top-right-radius: $radius-top-right;
  border-bottom-left-radius: $radius-bottom-left;
  border-bottom-right-radius: $radius-bottom-right;
}

@mixin button-border-radius($radius-top-left, $radius-top-right, $radius-bottom-left, $radius-bottom-right) {
  border-top-left-radius: $radius-top-left;
  border-top-right-radius: $radius-top-right;
  border-bottom-left-radius: $radius-bottom-left;
  border-bottom-right-radius: $radius-bottom-right;
}

:host {
  height: fit-content;
  position: relative;
  width: fit-content;
}

:host(.block) {
  width: 100%;
  display: flex;
}

:host(.group) {
  width: auto;
}

:host:focus-visible {
  outline: none;
}

.button {
  @include reset-button();
  cursor: pointer;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  height: 100%;
  border-radius: $button-border-radius;
  border-style: solid;
  border-left-width: 1px;
  border-top-width: 1px;
  border-right-width: 1px;
  border-bottom-width: 1px;
  position: relative;
  box-sizing: border-box;
  gap: 4px;
  padding: 0 16px;

  &__size {
    &--short {
      @include button-size(32px);
    }

    &--standard {
      @include button-size(40px);
    }

    &--medium {
      @include button-size(40px);
    }

    &--large {
      @include button-size(56px);
    }
  }

  &__only-icon--medium {
    padding: 8px;
    gap: 0;
  }

  &__only-icon--large {
    padding: 8px 16px;
    gap: 0;
  }

  &__only-icon--short {
    padding: 0px;
    width: 32px;
    gap: 0;
  }

  &--block,
  &--group {
    width: 100%;
  }

  bds-loading-spinner {
    max-height: 100%;
    position: absolute;
  }

  & * {
    pointer-events: none;
  }

  &__color {
    &--primary.button__variant--solid,
    &--primary.button__variant--primary {
      @include button-variant(
        $color-surface-primary,
        transparent,
        $color-content-bright,
        $color-surface-primary,
        $color-surface-primary,
        true
      );
    }

    &--primary.button__variant--outline,
    &--primary.button__variant--tertiary {
      @include button-variant(
        transparent,
        $color-primary,
        $color-primary,
        $color-surface-primary,
        $color-surface-primary
      );
    }

    &--primary.button__variant--text,
    &--primary.button__variant--secondary {
      @include button-variant(transparent, transparent, $color-primary, $color-primary, $color-primary);
    }

    &--content.button__variant--solid,
    &--content.button__variant--primary {
      @include button-variant(
        $color-content-default,
        transparent,
        $color-surface-0,
        $color-content-default,
        $color-content-default,
        true
      );
    }

    &--content.button__variant--outline,
    &--content.button__variant--tertiary {
      @include button-variant(
        transparent,
        $color-content-default,
        $color-content-default,
        $color-content-default,
        $color-content-default
      );
    }

    &--content.button__variant--text,
    &--content.button__variant--secondary {
      @include button-variant(
        transparent,
        transparent,
        $color-content-default,
        $color-content-default,
        $color-content-default
      );
    }

    &--negative.button__variant--solid,
    &--negative.button__variant--primary,
    &--negative.button__variant--delete {
      @include button-variant(
        $color-surface-negative,
        transparent,
        $color-content-bright,
        $color-surface-negative,
        $color-surface-negative,
        true
      );
    }

    &--negative.button__variant--outline,
    &--negative.button__variant--tertiary,
    &--negative.button__variant--delete {
      @include button-variant(
        transparent,
        $color-negative,
        $color-negative,
        $color-surface-negative,
        $color-surface-negative
      );
    }

    &--negative.button__variant--text,
    &--negative.button__variant--secondary,
    &--negative.button__variant--delete {
      @include button-variant(transparent, transparent, $color-negative, $color-negative, $color-surface-negative);
    }

    &--positive.button__variant--solid,
    &--positive.button__variant--primary {
      @include button-variant(
        $color-surface-positive,
        transparent,
        $color-content-bright,
        $color-surface-positive,
        $color-surface-positive,
        true
      );
    }

    &--positive.button__variant--outline,
    &--positive.button__variant--tertiary {
      @include button-variant(
        transparent,
        $color-positive,
        $color-positive,
        $color-surface-positive,
        $color-surface-positive
      );
    }

    &--positive.button__variant--text,
    &--positive.button__variant--secondary {
      @include button-variant(transparent, transparent, $color-positive, $color-positive, $color-surface-positive);
    }
  }

  &.button__variant--secondary {
    @include button-variant(
      transparent,
      transparent,
      $color-content-default,
      $color-content-default,
      $color-content-default
    );
  }

  &.button__variant--tertiary {
    @include button-variant(
      transparent,
      $color-content-default,
      $color-content-default,
      $color-content-default,
      $color-content-default
    );
  }

  &__group {
    width: 100%;
  }

  &__position {
    &--row {
      &--first {
        @include button-position(10px, 0, 10px, 0);
        border-left-width: 1px;
        border-top-width: 1px;
        border-bottom-width: 1px;
        border-right-width: 1px;
      }

      &--middle {
        @include button-position(0, 0, 0, 0);
        border-top-width: 1px;
        border-bottom-width: 1px;
        border-left-width: 0;
        border-right-width: 1px;
      }

      &--last {
        @include button-position(0, 10px, 0, 10px);
        border-right-width: 1px;
        border-top-width: 1px;
        border-bottom-width: 1px;
        border-left-width: 0px;
      }
    }

    &--column {
      &--first {
        @include button-position(10px, 10px, 0, 0);
        border-left-width: 1px;
        border-top-width: 1px;
        border-bottom-width: 1px;
        border-right-width: 1px;
      }

      &--middle {
        @include button-position(0, 0, 0, 0);
        border-top-width: 0px;
        border-bottom-width: 1px;
        border-left-width: 1px;
        border-right-width: 1px;
      }

      &--last {
        @include button-position(0, 0, 10px, 10px);
        border-right-width: 1px;
        border-top-width: 0px;
        border-bottom-width: 1px;
        border-left-width: 1px;
      }
    }
  }

  &__arrow {
    @include inherit-color();
    height: 24px;
    margin-left: 2px;
  }

  &__content {
    height: 20px;
    display: flex;
    align-items: center;
    z-index: 1;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
    z-index: 0;
    border-radius: $button-border-radius;
  }

  &__position {
    &--row {
      &--first::before {
        @include button-border-radius(10px, 0, 10px, 0);
      }

      &--middle::before {
        @include button-border-radius(0, 0, 0, 0);
      }

      &--last::before {
        @include button-border-radius(0, 10px, 0, 10px);
      }
    }

    &--column {
      &--first::before {
        @include button-border-radius(10px, 10px, 0, 0);
      }

      &--middle::before {
        @include button-border-radius(0, 0, 0, 0);
      }

      &--last::before {
        @include button-border-radius(0, 0, 10px, 10px);
      }
    }
  }

  .hide {
    cursor: not-allowed;
    opacity: 0;
  }
}

.focus:focus-visible {
  display: flex;
  position: absolute;
  border: 2px solid $color-focus;
  border-radius: 4px;
  width: 100%;
  height: 100%;
  top: -4px;
  left: -4px;
  padding-right: 4px;
  padding-bottom: 4px;
  outline: none;
}

.disabled {
  pointer-events: none;
}
