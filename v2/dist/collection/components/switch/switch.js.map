{"version":3,"file":"switch.js","sourceRoot":"","sources":["../../../../src/components/switch/switch.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AAG9F,IAAI,SAAS,GAAG,CAAC,CAAC;AAOlB,MAAM,OAAO,MAAM;IALnB;QAgBE;;;WAGG;QACK,SAAI,GAAgB,UAAU,CAAC;QAMvC;;WAEG;QACqC,YAAO,GAAG,KAAK,CAAC;QAExD;;WAEG;QACK,aAAQ,GAAG,KAAK,CAAC;QAEzB;;WAEG;QACK,aAAQ,GAAY,IAAI,CAAC;QA4BzB,YAAO,GAAG,GAAS,EAAE;YAC3B,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC;QAEM,mBAAc,GAAG,CAAC,KAAuB,EAAQ,EAAE;YACzD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC;QAUM,kBAAa,GAAG,GAAW,EAAE;YACnC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACnC,OAAO,kBAAkB,CAAC;YAC5B,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpC,OAAO,oBAAoB,CAAC;YAC9B,CAAC;YAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClC,OAAO,2BAA2B,CAAC;YACrC,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACnC,OAAO,6BAA6B,CAAC;YACvC,CAAC;YAED,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QAEM,gBAAW,GAAG,CAAC,EAAE,EAAE,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACnB,IAAI,EAAE,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;oBACvB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC/B,CAAC;YACH,CAAC;QACH,CAAC,CAAC;KAwBH;IA5FC,iBAAiB;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI,cAAc,SAAS,EAAE,EAAE,CAAC;IAC5D,CAAC;IAQS,cAAc,CAAC,SAAkB;QACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,SAAS;SACnB,CAAC,CAAC;IACL,CAAC;IAGD,eAAe;QACb,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAGD,QAAQ;QACN,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAUD,YAAY;QACV,OAAO,uBAAuB,IAAI,CAAC,IAAI,GAAG,CAAC;IAC7C,CAAC;IAED,kBAAkB;QAChB,OAAO,uBAAuB,IAAI,CAAC,IAAI,SAAS,CAAC;IACnD,CAAC;IA8BD,MAAM;QACJ,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAClD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAExC,OAAO,CACL,8DAAO,KAAK,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE;YACjC,4DAAK,QAAQ,EAAC,GAAG,EAAC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,KAAK,EAAC,OAAO,GAAO;YAC/E,8DACE,IAAI,EAAC,UAAU,EACf,GAAG,EAAE,IAAI,CAAC,cAAc,EACxB,EAAE,EAAE,IAAI,CAAC,QAAQ,EACjB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,eACZ,IAAI,CAAC,QAAQ,GACjB;YACT,6DAAM,KAAK,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,GAAS,CAC/D,CACT,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, State, Method, Event, EventEmitter, Watch } from '@stencil/core';\nexport type SwitchSize = 'tall' | 'standard' | 'short';\n\nlet switchIds = 0;\n\n@Component({\n  tag: 'bds-switch',\n  styleUrl: 'switch.scss',\n  shadow: true,\n})\nexport class Switch {\n  private nativeInput?: HTMLInputElement;\n  /**\n   * Component identifier.\n   */\n  @State() switchId?: string;\n  /**\n   * The refer of the control.\n   */\n  @Prop() refer!: string;\n\n  /**\n   * Size. Entered as one of the size. Can be one of:\n   * 'tall', 'standard', 'short';\n   */\n  @Prop() size?: SwitchSize = 'standard';\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name!: string;\n\n  /**\n   * If `true`, the switch is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) checked = false;\n\n  /**\n   * If `true`, the user cannot interact with the switch.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  connectedCallback(): void {\n    this.switchId = this.refer || `bds-switch-${switchIds++}`;\n  }\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter<{ checked: boolean }>;\n\n  @Watch('checked')\n  protected checkedChanged(isChecked: boolean): void {\n    this.bdsChange.emit({\n      checked: isChecked,\n    });\n  }\n\n  @Method()\n  getInputElement(): Promise<HTMLInputElement> {\n    return Promise.resolve(this.nativeInput);\n  }\n\n  @Method()\n  getValue(): Promise<boolean> {\n    return Promise.resolve(this.nativeInput.checked);\n  }\n\n  private onClick = (): void => {\n    this.checked = !this.checked;\n  };\n\n  private refNativeInput = (input: HTMLInputElement): void => {\n    this.nativeInput = input;\n  };\n\n  getSizeClass(): string {\n    return `switch switch--size-${this.size} `;\n  }\n\n  getSizeSliderClass(): string {\n    return `slider slider--size-${this.size} round `;\n  }\n\n  private getStyleState = (): string => {\n    if (this.checked && !this.disabled) {\n      return 'slider--selected';\n    }\n\n    if (!this.checked && !this.disabled) {\n      return 'slider--deselected';\n    }\n\n    if (this.checked && this.disabled) {\n      return 'slider--selected-disabled';\n    }\n\n    if (!this.checked && this.disabled) {\n      return 'slider--deselected-disabled';\n    }\n\n    return '';\n  };\n\n  private handleClick = (ev) => {\n    if (!this.disabled) {\n      if (ev.key === 'Enter') {\n        this.checked = !this.checked;\n      }\n    }\n  };\n\n  render(): HTMLElement {\n    const sizeClass = this.getSizeClass();\n    const sizeSliderClass = this.getSizeSliderClass();\n    const styleState = this.getStyleState();\n\n    return (\n      <label class={{ [sizeClass]: true }}>\n        <div tabindex=\"0\" onKeyDown={(ev) => this.handleClick(ev)} class=\"focus\"></div>\n        <input\n          type=\"checkbox\"\n          ref={this.refNativeInput}\n          id={this.switchId}\n          name={this.name}\n          onClick={this.onClick}\n          checked={this.checked}\n          disabled={this.disabled}\n          data-test={this.dataTest}\n        ></input>\n        <span class={{ [sizeSliderClass]: true, [styleState]: true }}></span>\n      </label>\n    );\n  }\n}\n"]}