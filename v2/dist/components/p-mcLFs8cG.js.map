{"file":"p-mcLFs8cG.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/switch/switch.scss?tag=bds-switch&encapsulation=shadow","src/components/switch/switch.tsx"],"sourcesContent":["@use '../../globals/helpers' as *;\n\n$switch-size-width-tall: 56px;\n$switch-size-width-standard: 42px;\n$switch-size-width-short: 32px;\n\n$switch-size-height-tall: 32px;\n$switch-size-height-standard: 24px;\n$switch-size-height-short: 18px;\n\n$switch-size-slider-tall: 24px;\n$switch-size-slider-standard: 18px;\n$switch-size-slider-short: 13.5px;\n\n$switch-size-translateX-tall: 24px;\n$switch-size-translateX-standard: 18px;\n$switch-size-translateX-short: 13.75px;\n\n$slider-size-content-tall: 4px;\n$slider-size-content-standard: 3px;\n$slider-size-content-short: 2.25px;\n\n@mixin translateX_values($value) {\n  -webkit-transform: translateX($value);\n  -ms-transform: translateX($value);\n  transform: translateX($value);\n}\n\n@mixin switch_width_height($width, $height) {\n  width: $width;\n  height: $height;\n}\n\n@mixin slider_width_height($value, $margin) {\n  position: absolute;\n  content: ' ';\n  left: $margin;\n  bottom: $margin;\n  top: $margin;\n  background-color: $color-content-bright;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 50%;\n  width: $value;\n  height: $value;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n\n  &--size-tall {\n    @include switch_width_height($switch-size-width-tall, $switch-size-height-tall);\n  }\n  &--size-standard {\n    @include switch_width_height($switch-size-width-standard, $switch-size-height-standard);\n  }\n  &--size-short {\n    @include switch_width_height($switch-size-width-short, $switch-size-height-short);\n  }\n\n  .focus:focus-visible {\n    display: flex;\n    position: absolute;\n    border: 2px solid $color-focus;\n    border-radius: 4px;\n    width: 100%;\n    height: 100%;\n    top: -4px;\n    left: -4px;\n    padding-right: 4px;\n    padding-bottom: 4px;\n    outline: none;\n  }\n}\n\n.switch input {\n  opacity: 100;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: $color-content-ghost;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 34px;\n\n  &--size-tall::before {\n    @include slider_width_height($switch-size-slider-tall, $slider-size-content-tall);\n  }\n\n  &--size-standard::before {\n    @include slider_width_height($switch-size-slider-standard, $slider-size-content-standard);\n  }\n\n  &--size-short::before {\n    @include slider_width_height($switch-size-slider-short, $slider-size-content-short);\n  }\n\n  &--deselected-disabled {\n    cursor: not-allowed;\n    background-color: $color-content-ghost;\n    opacity: 0.5;\n  }\n}\n\ninput:checked + .slider {\n  background-color: $color-surface-primary;\n\n  &--selected-disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px $color-primary-main;\n\n  &--selected-disabled {\n    box-shadow: 0 0 1px $color-neutral-medium-silver;\n  }\n\n  &--deselected-disabled {\n    box-shadow: 0 0 1px $color-neutral-medium-wave;\n  }\n}\n\ninput:checked + .slider {\n  &--size-tall::before {\n    @include translateX_values($switch-size-translateX-tall);\n  }\n\n  &--size-standard::before {\n    @include translateX_values($switch-size-translateX-standard);\n  }\n\n  &--size-short::before {\n    @include translateX_values($switch-size-translateX-short);\n  }\n}\n","import { Component, h, Prop, State, Method, Event, EventEmitter, Watch } from '@stencil/core';\nexport type SwitchSize = 'tall' | 'standard' | 'short';\n\nlet switchIds = 0;\n\n@Component({\n  tag: 'bds-switch',\n  styleUrl: 'switch.scss',\n  shadow: true,\n})\nexport class Switch {\n  private nativeInput?: HTMLInputElement;\n  /**\n   * Component identifier.\n   */\n  @State() switchId?: string;\n  /**\n   * The refer of the control.\n   */\n  @Prop() refer!: string;\n\n  /**\n   * Size. Entered as one of the size. Can be one of:\n   * 'tall', 'standard', 'short';\n   */\n  @Prop() size?: SwitchSize = 'standard';\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name!: string;\n\n  /**\n   * If `true`, the switch is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) checked = false;\n\n  /**\n   * If `true`, the user cannot interact with the switch.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  connectedCallback(): void {\n    this.switchId = this.refer || `bds-switch-${switchIds++}`;\n  }\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter<{ checked: boolean }>;\n\n  @Watch('checked')\n  protected checkedChanged(isChecked: boolean): void {\n    this.bdsChange.emit({\n      checked: isChecked,\n    });\n  }\n\n  @Method()\n  getInputElement(): Promise<HTMLInputElement> {\n    return Promise.resolve(this.nativeInput);\n  }\n\n  @Method()\n  getValue(): Promise<boolean> {\n    return Promise.resolve(this.nativeInput.checked);\n  }\n\n  private onClick = (): void => {\n    this.checked = !this.checked;\n  };\n\n  private refNativeInput = (input: HTMLInputElement): void => {\n    this.nativeInput = input;\n  };\n\n  getSizeClass(): string {\n    return `switch switch--size-${this.size} `;\n  }\n\n  getSizeSliderClass(): string {\n    return `slider slider--size-${this.size} round `;\n  }\n\n  private getStyleState = (): string => {\n    if (this.checked && !this.disabled) {\n      return 'slider--selected';\n    }\n\n    if (!this.checked && !this.disabled) {\n      return 'slider--deselected';\n    }\n\n    if (this.checked && this.disabled) {\n      return 'slider--selected-disabled';\n    }\n\n    if (!this.checked && this.disabled) {\n      return 'slider--deselected-disabled';\n    }\n\n    return '';\n  };\n\n  private handleClick = (ev) => {\n    if (!this.disabled) {\n      if (ev.key === 'Enter') {\n        this.checked = !this.checked;\n      }\n    }\n  };\n\n  render(): HTMLElement {\n    const sizeClass = this.getSizeClass();\n    const sizeSliderClass = this.getSizeSliderClass();\n    const styleState = this.getStyleState();\n\n    return (\n      <label class={{ [sizeClass]: true }}>\n        <div tabindex=\"0\" onKeyDown={(ev) => this.handleClick(ev)} class=\"focus\"></div>\n        <input\n          type=\"checkbox\"\n          ref={this.refNativeInput}\n          id={this.switchId}\n          name={this.name}\n          onClick={this.onClick}\n          checked={this.checked}\n          disabled={this.disabled}\n          data-test={this.dataTest}\n        ></input>\n        <span class={{ [sizeSliderClass]: true, [styleState]: true }}></span>\n      </label>\n    );\n  }\n}\n"],"version":3}