name: PR Storybook Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: "pr-preview-${{ github.event.pull_request.number }}"
  cancel-in-progress: true

jobs:
  deploy-storybook-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: NPM Install and build
        run: |
          npm install
          npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Storybook for PR
        run: |
          npm run storybook:build
        env:
          STORYBOOK_BASE_PATH: /blip-ds/pr-${{ github.event.pull_request.number }}

      - name: Deploy PR Preview (separate from main)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./storybook-static
          destination_dir: pr-previews/pr-${{ github.event.pull_request.number }}
          keep_files: true
          # This ensures we don't overwrite the main storybook deployment
          exclude_assets: '.github,README.md'

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://${{ github.repository_owner }}.github.io/blip-ds/pr-previews/pr-${prNumber}`;
            
            const comment = `## üìñ Storybook Preview
            
            Your Storybook preview is ready! üéâ
            
            **üîó Preview URL:** ${previewUrl}
            
            This preview will be updated automatically when you push new commits to this PR.
            
            > **Note:** This is a temporary preview that will be removed when the PR is closed.`;
            
            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('üìñ Storybook Preview')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

  cleanup-storybook-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove PR preview directory
        run: |
          if [ -d "pr-previews/pr-${{ github.event.pull_request.number }}" ]; then
            rm -rf pr-previews/pr-${{ github.event.pull_request.number }}
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "üóëÔ∏è Remove preview for PR #${{ github.event.pull_request.number }}" || exit 0
            git push
          fi

      - name: Comment PR cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            
            const comment = `## üìñ Storybook Preview - Cleaned Up
            
            The Storybook preview for this PR has been removed as the PR was closed. ‚ú®`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });