{"version":3,"names":["autocompleteCss","BdsAutocomplete","exports","class_1","hostRef","_this","this","intoView","isPressed","isOpen","text","textMultiselect","placeholderState","placeholder","isFocused","validationDanger","validationMesage","danger","success","disabled","searchOnlyTitle","label","icon","helperMessage","errorMessage","successMessage","optionsPosition","clearIconOnFocus","dataTest","loading","selectionType","selectionTitle","selectedAll","refDropdown","el","dropElement","refIconDrop","iconDropElement","refCheckAllInput","input","checkAllInput","onFocus","bdsFocus","emit","onFocusout","nativeInput","value","getText","onBlur","bdsBlur","cleanInputSelection","_a","checkedOptions","length","getTextMultiselect","onClickWrapper","toggle","focus","getTextFromOption","opt","internalOptions","internalOption","find","option","titleText","innerText","childOptions","data","valueInput","concat","handlerMultiselect","updateListChecked","undefined","resetFilterOptions","setTimeout","checked","handleCheckAll","event","detail","_i","toMark","markOff","data_1","classList","add","remove","defaultCheckedOptions","Array","from","filter","item","map","term","textContent","handler","__awaiter","bdsCancel","sent","changedInputValue","ev","target","bdsInput","filterOptions","setTimeoutFilter","getSelectedValue","prototype","isOpenChanged","positionHeightDrop","name","setDefaultPlacement","validatePositionDrop","itemSelectedChanged","bdsSelectedChange","selected","valueChanged","bdsChange","toString","childOptionSelected","handleWindow","contains","changeCheckedOptions","bdsMultiselectedChange","parseOptions","options","JSON","parse","e","changeSelectionType","typeOption","addEventListener","componentWillLoad","getScrollParent","componentDidLoad","positionValue","positionAbsoluteElement","actionElement","changedElement","y","Object","defineProperty","shadowRoot","querySelectorAll","keyPressWrapper","key","nextSibling","_b","firstElementChild","_c","previousSibling","_d","lastElementChild","cleanMultipleSelection","optionTextLowercase","toLowerCase","termLower","includes","removeAttribute","setAttribute","childOptions_1","renderIcon","h","class","input__icon","size","color","renderLabel","input__container__label","variant","bold","renderMessage","message","styles","part","theme","render","Host","select","onClick","tabindex","input__container__wrapper","input__container__text","ref","onInput","type","onKeyDown","bind","select__options","refer","onBdsChange","idx","onOptionSelected","onOptionChecked","bulkOption","status"],"sources":["src/components/autocomplete/autocomplete.scss?tag=bds-autocomplete&encapsulation=shadow","src/components/autocomplete/autocomplete.tsx"],"sourcesContent":["@import 'resets';\n@import 'mixins';\n\n$input-padding: 8px 4px 9px 12px;\n$input-padding-label: 7px 4px 8px 12px;\n$input-width: 100%;\n$select-options-box-shadow: 0px 2px 8px rgba(96, 123, 153, 0.3);\n$select-options-radius: 8px;\n$select-options-max-height: 250px;\n\n@mixin input-text {\n  font-family: $font-family;\n  font-size: $fs-14;\n  line-height: $line-hight-plus;\n}\n\n@mixin input-border($color, $boxShadow: false) {\n  border: 1px solid $color;\n  box-sizing: border-box;\n  border-radius: 8px;\n\n  @if ($boxShadow) {\n    -webkit-box-shadow: 0 0 0 2px $boxShadow;\n    box-shadow: 0 0 0 2px $boxShadow;\n  }\n}\n\n@mixin input-theme($name, $primary, $secondary, $label, $text, $border, $hover, $focus) {\n  $color-input-primary: $primary;\n  $color-input-secondary: $secondary;\n  $color-input-label: $label;\n  $color-input-text: $text;\n  $color-input-border: $border;\n  $color-input-hover: $hover;\n  $color-input-focus: $focus;\n\n  @include input-border($color-input-border);\n\n  // States\n  &:hover {\n    @include input-border($color-input-primary);\n\n    @if ($name == 'disabled') {\n      @include input-border($color-input-border);\n    }\n  }\n\n  &.input--pressed {\n    @include input-border($color-input-primary, $color-input-focus);\n    .input__icon {\n      .bds-icon {\n        color: $color-input-primary;\n      }\n    }\n  }\n\n  .input__container__label {\n    color: $color-input-label;\n\n    &--pressed {\n      bds-typo {\n        color: $color-input-primary;\n      }\n    }\n  }\n\n  .input__container__text {\n    caret-color: $color-input-primary;\n    color: $color-input-text;\n  }\n  .input__container__text:placeholder-shown {\n    color: $color-content-ghost;\n  }\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n\n  input,\n  textarea {\n    box-shadow: inherit;\n    &::placeholder {\n      color: $color-content-ghost;\n      opacity: 1;\n    }\n\n    &::-webkit-input-placeholder {\n      color: $color-content-ghost;\n      opacity: 1;\n    }\n  }\n}\n\n.input {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: $input-padding;\n  flex: 1;\n  width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n\n  .bds-icon {\n    position: relative;\n    z-index: 1;\n  }\n\n  &--state {\n    &-primary {\n      .input__icon {\n        position: relative;\n        &::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background-color: $color-hover;\n          z-index: 0;\n          border-radius: 8px;\n        }\n      }\n      @include input-theme(\n        'primary',\n        $color-primary,\n        $color-surface-1,\n        $color-content-default,\n        $color-content-default,\n        $color-border-1,\n        $color-primary,\n        $color-info\n      );\n    }\n\n    &-danger {\n      .input__icon {\n        position: relative;\n        &::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background-color: $color-surface-negative;\n          z-index: 0;\n          opacity: 50%;\n          border-radius: 8px;\n        }\n      }\n      @include input-theme(\n        'danger',\n        $color-negative,\n        $color-error,\n        $color-delete,\n        $color-content-default,\n        $color-delete,\n        $color-delete,\n        $color-error\n      );\n    }\n\n    &-success {\n      .input__icon {\n        position: relative;\n        &::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background-color: $color-surface-positive;\n          z-index: 0;\n          border-radius: 8px;\n        }\n      }\n      @include input-theme(\n        'success',\n        $color-positive,\n        $color-success,\n        $color-content-default,\n        $color-content-default,\n        $color-border-1,\n        $color-content-default,\n        $color-success\n      );\n    }\n\n    &-disabled {\n      .input__icon {\n        position: relative;\n        &::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background-color: $color-hover;\n          z-index: 0;\n          opacity: 50%;\n          border-radius: 8px;\n        }\n      }\n      opacity: 50%;\n      pointer-events: none;\n      cursor: not-allowed;\n    }\n  }\n\n  & .icon-success {\n    color: $color-positive;\n    margin-left: 4px;\n  }\n\n  &--label {\n    padding: $input-padding-label;\n  }\n\n  &__icon {\n    cursor: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n    margin-right: 8px;\n    padding: 2.5px;\n\n    &--large {\n      padding: 4px;\n    }\n  }\n\n  &__container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n\n    &__wrapper {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    &__wrapper__chips {\n      @include custom-scroll();\n      display: inline;\n      max-height: 100px;\n      overflow: auto;\n    }\n\n    &__label {\n      display: flex;\n      align-items: center;\n    }\n\n    &__text {\n      @include reset-input();\n      @include input-text();\n      @include custom-scroll();\n\n      resize: none;\n      cursor: inherit;\n    }\n    &__text::placeholder {\n      color: $color-content-ghost;\n    }\n  }\n\n  &__message {\n    display: flex;\n    align-items: baseline;\n    height: 20px;\n    margin: 3.7px 2.5px;\n    transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    color: $color-content-disable;\n    word-break: break-word;\n    height: auto;\n    min-height: 20px;\n    bds-typo {\n      margin-top: 0px;\n      align-self: self-start;\n    }\n\n    &__icon {\n      display: flex;\n      padding-right: 4px;\n      margin-top: 0px;\n      padding-top: 2px;\n    }\n\n    &--danger {\n      .bds-icon {\n        color: $color-negative;\n      }\n      .input__message__text {\n        color: $color-negative;\n      }\n    }\n    &--success {\n      .input__message__icon {\n        .bds-icon {\n          color: $color-positive;\n        }\n      }\n      .input__message__text {\n        color: $color-content-default;\n      }\n    }\n  }\n}\n\n.input__container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n\n  &__label {\n    display: flex;\n    align-items: center;\n  }\n  &__text::placeholder {\n    color: $color-content-ghost;\n  }\n}\n\n.input__container__wrapper {\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 8px;\n\n  .inside-input-left {\n    display: inline;\n  }\n}\n\n.input__container__text {\n  @include reset-input();\n  @include input-text();\n  width: 100%;\n  resize: none;\n  cursor: inherit;\n  flex-shrink: 99999;\n\n  &__chips {\n    width: auto;\n    min-width: 216px;\n    max-width: 216px;\n  }\n}\n\n:host {\n  display: block;\n}\n\n.select {\n  position: relative;\n  outline: none;\n  overflow: hidden;\n\n  &__icon {\n    color: $color-content-ghost;\n    display: flex;\n\n    bds-icon {\n      margin-left: 10px;\n    }\n  }\n\n  .icon-hidden {\n    visibility: hidden;\n  }\n\n  &__options {\n    display: grid;\n    @include custom-scroll;\n\n    background: $color-surface-0;\n    width: 100%;\n    max-height: 200px;\n    height: fit-content;\n    position: absolute;\n    left: 0;\n    border-radius: $select-options-radius;\n    box-shadow: $shadow-3;\n    overflow-y: auto;\n    z-index: 2;\n    pointer-events: none;\n    opacity: 0;\n\n    ::slotted(*) {\n      display: flex;\n      flex-flow: column;\n    }\n\n    .selection-title {\n      order: -2;\n      width: 100%;\n      padding: 8px 16px;\n      box-sizing: border-box;\n    }\n\n    .select-all {\n      order: -3;\n      padding: 8px 8px 8px 12px;\n      box-sizing: border-box;\n      display: flex;\n      gap: 8px;\n      align-items: center;\n      outline: none;\n      flex-direction: row;\n    }\n\n    .content-divisor {\n      display: block;\n      width: 100%;\n      height: 1px;\n      background-color: $color-surface-1;\n\n      .divisor {\n        display: block;\n        margin: 0 16px;\n        height: 1px;\n        background-color: $color-border-2;\n      }\n    }\n\n    .load-spinner {\n      background-color: $color-surface-1;\n      height: 200px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &--open {\n      opacity: 1;\n      pointer-events: auto;\n    }\n\n    &--position-top {\n      bottom: calc(100% + 4px);\n    }\n\n    &--position-bottom {\n      top: calc(100% + 4px);\n    }\n\n    .options-checked {\n      order: -1;\n    }\n  }\n}\n","import { Component, h, Host, State, Prop, EventEmitter, Event, Watch, Element, Listen, Method } from '@stencil/core';\nimport {\n  AutocompleteOption,\n  AutocompleteChangeEventDetail,\n  AutocompleteSelectedChangeEventDetail,\n  AutocompleteOptionsPositionType,\n  AutocompleteMultiSelectedChangeEventDetail,\n} from './autocomplete-select-interface';\nimport { SelectOptionsPositionType } from '../selects/select-interface';\nimport { getScrollParent, positionAbsoluteElement } from '../../utils/position-element';\n\nexport type SelectionType = 'single' | 'multiple';\n\n@Component({\n  tag: 'bds-autocomplete',\n  styleUrl: 'autocomplete.scss',\n  shadow: true,\n})\nexport class BdsAutocomplete {\n  private checkAllInput?: HTMLBdsCheckboxElement;\n  private nativeInput?: HTMLInputElement;\n  private dropElement?: HTMLElement;\n  private iconDropElement?: HTMLBdsIconElement;\n  private positionHeightDrop?: SelectOptionsPositionType;\n\n  @Element() el!: HTMLBdsSelectElement;\n\n  /**\n   * Conditions the element to say whether it is pressed or not, to add styles.\n   */\n  @State() intoView?: HTMLElement = null;\n\n  @State() isPressed? = false;\n\n  @State() isOpen? = false;\n\n  @State() text? = '';\n\n  @State() textMultiselect? = '';\n\n  @State() placeholderState?: string = this.placeholder;\n\n  @State() internalOptions: AutocompleteOption[];\n\n  @State() cloneOptions: AutocompleteOption[];\n\n  @State() checkedOptions: AutocompleteOption[];\n\n  @State() isFocused?: boolean = false;\n\n  /**\n   * Used to set the danger behavior by the internal validators\n   */\n  @State() validationDanger?: boolean = false;\n\n  /**\n   * Used to set the error message setted by the internal validators\n   */\n  @State() validationMesage? = '';\n\n  /**\n   * The options of the select\n   * Should be passed this way:\n   * options='[{\"value\": \"Cat\", \"label\": \"Meow\"}, {\"value\": \"Dog\", \"label\": \"Woof\"}]'\n   * Options can also be passed as child by using bds-select-option component, but passing as a child you may have some compatibility problems with Angular.\n   */\n  @Prop() options?: string | AutocompleteOption[];\n\n  /**\n   * the value of the select.\n   */\n  @Prop({ mutable: true }) value?: string | null;\n\n  /**\n   * the item selected.\n   */\n  @Prop({ mutable: true }) selected?: HTMLBdsSelectOptionElement | null;\n\n  /**\n   * Add state danger on input, use for use feedback.\n   */\n  @Prop({ reflect: true }) danger? = false;\n\n  /**\n   * Add state success on input, use for use feedback.\n   */\n  @Prop({ reflect: true, mutable: true }) success?: boolean = false;\n  /**\n   * Disabled input.\n   */\n  @Prop({ reflect: true }) disabled? = false;\n\n  /**\n   * Search only the title property\n   */\n  @Prop({ reflect: true }) searchOnlyTitle? = true;\n\n  /**\n   *  label in input, with he the input size increases.\n   */\n  @Prop() label? = '';\n\n  /**\n   * used for add icon in input left. Uses the bds-icon component.\n   */\n  @Prop({ reflect: true }) icon?: string = '';\n\n  /**\n   * Placeholder for native input element.\n   */\n  @Prop() placeholder?: string = '';\n\n  /**\n   * Indicated to pass a help the user in complex filling.\n   */\n  @Prop() helperMessage?: string = '';\n  /**\n   * Indicated to pass an feeback to user.\n   */\n  @Prop() errorMessage?: string = '';\n  /**\n   * Indicated to pass an feeback to user.\n   */\n  @Prop({ mutable: true }) successMessage?: string = '';\n  /**\n   * Set the placement of the options menu. Can be 'bottom' or 'top'.\n   */\n  @Prop() optionsPosition?: AutocompleteOptionsPositionType = 'auto';\n\n  /**\n   * If true, the X icon will appear only when component is focused.\n   */\n  @Prop() clearIconOnFocus?: boolean = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  /**\n   * Is Loading, is the prop to enable that the component is loading.\n   */\n  @Prop() loading?: boolean = false;\n\n  /**\n   * Multiselect, Prop to enable multi selections.\n   */\n  @Prop() selectionType?: SelectionType = 'single';\n\n  /**\n   * Selection Title, Prop to enable title to select.\n   */\n  @Prop() selectionTitle?: string = '';\n\n    /**\n   * Selection Title, Prop to enable title to select.\n   */\n    @Prop() selectedAll?: boolean = true;\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter<AutocompleteChangeEventDetail>;\n\n  /**\n   * Emitted when the selected value has changed.\n   */\n  @Event() bdsSelectedChange!: EventEmitter<AutocompleteSelectedChangeEventDetail>;\n\n  /**\n   * Emitted when the selected value has changed.\n   */\n  @Event() bdsMultiselectedChange!: EventEmitter<AutocompleteMultiSelectedChangeEventDetail>;\n\n  /**\n   * Emitted when the input has changed.\n   */\n  @Event() bdsInput!: EventEmitter<KeyboardEvent>;\n\n  /**\n   * Emitted when the selection is cancelled.\n   */\n  @Event() bdsCancel!: EventEmitter<AutocompleteChangeEventDetail>;\n\n  /**\n   * Emitted when the select loses focus.\n   */\n  @Event() bdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the select loses focus.\n   */\n  @Event() bdsBlur!: EventEmitter<void>;\n\n  @Watch('isOpen')\n  protected isOpenChanged(isOpen: boolean): void {\n    if (this.positionHeightDrop == 'bottom') {\n      this.iconDropElement.name = this.isOpen ? 'arrow-up' : 'arrow-down';\n    } else {\n      this.iconDropElement.name = this.isOpen ? 'arrow-down' : 'arrow-up';\n    }\n    if (isOpen)\n      if (this.optionsPosition != 'auto') {\n        this.setDefaultPlacement(this.optionsPosition);\n      } else {\n        this.validatePositionDrop();\n      }\n  }\n\n  @Watch('selected')\n  itemSelectedChanged(): void {\n    this.bdsSelectedChange.emit(this.selected);\n  }\n\n  @Watch('value')\n  protected valueChanged(): void {\n    this.bdsChange.emit({ value: this.value == null ? this.value : this.value.toString() });\n    for (const option of this.childOptions) {\n      option.selected = this.value === option.value;\n    }\n    this.selected = this.childOptionSelected;\n    this.text = this.getText();\n  }\n\n  @Listen('mousedown', { target: 'window', passive: true })\n  handleWindow(ev: Event) {\n    if (!this.el.contains(ev.target as HTMLInputElement)) {\n      this.isOpen = false;\n    }\n  }\n\n  @Watch('checkedOptions')\n  protected changeCheckedOptions() {\n    this.placeholderState =\n      this.selectionType === 'multiple'\n        ? this.checkedOptions?.length === 0 || this.checkedOptions === null\n          ? this.placeholder\n          : ''\n        : this.placeholder;\n    this.getTextMultiselect(this.checkedOptions);\n    this.bdsMultiselectedChange.emit({ value: this.checkedOptions });\n  }\n\n  @Watch('options')\n  parseOptions() {\n    if (this.options) {\n      this.resetFilterOptions();\n      try {\n        this.internalOptions = typeof this.options === 'string' ? JSON.parse(this.options) : this.options;\n      } catch (e) {\n        this.internalOptions = [];\n      }\n    }\n  }\n\n  @Watch('selectionType')\n  protected changeSelectionType() {\n    if (!this.options) {\n      for (const option of this.childOptions) {\n        if (this.selectionType === 'multiple') {\n          option.typeOption = 'checkbox';\n          option.addEventListener('optionChecked', this.handlerMultiselect);\n        } else {\n          option.typeOption = 'default';\n          option.selected = this.value === option.value;\n          option.addEventListener('optionSelected', this.handler);\n        }\n      }\n    }\n  }\n\n  componentWillLoad() {\n    this.intoView = getScrollParent(this.el);\n    this.options && this.parseOptions();\n  }\n\n  componentDidLoad() {\n    if (!this.options) {\n      for (const option of this.childOptions) {\n        if (this.selectionType === 'multiple') {\n          option.typeOption = 'checkbox';\n          option.addEventListener('optionChecked', this.handlerMultiselect);\n        } else {\n          option.typeOption = 'default';\n          option.selected = this.value === option.value;\n          option.addEventListener('optionSelected', this.handler);\n        }\n      }\n    }\n\n    this.text = this.getText();\n    if (this.optionsPosition != 'auto') {\n      this.setDefaultPlacement(this.optionsPosition);\n    } else {\n      this.validatePositionDrop();\n    }\n  }\n\n  private setDefaultPlacement(value: AutocompleteOptionsPositionType) {\n    if (value == 'bottom') {\n      this.dropElement.classList.add('select__options--position-bottom');\n      this.iconDropElement.name = 'arrow-down';\n    } else {\n      this.dropElement.classList.add('select__options--position-top');\n      this.iconDropElement.name = 'arrow-up';\n    }\n  }\n\n  private validatePositionDrop() {\n    const positionValue = positionAbsoluteElement({\n      actionElement: this.el,\n      changedElement: this.dropElement,\n      intoView: this.intoView,\n    });\n    this.positionHeightDrop = positionValue.y as SelectOptionsPositionType;\n    if (positionValue.y == 'bottom') {\n      this.dropElement.classList.add('select__options--position-bottom');\n      this.iconDropElement.name = 'arrow-down';\n    } else {\n      this.dropElement.classList.add('select__options--position-top');\n      this.iconDropElement.name = 'arrow-up';\n    }\n  }\n\n  private refDropdown = (el: HTMLElement) => {\n    this.dropElement = el;\n  };\n\n  private refIconDrop = (el: HTMLBdsIconElement) => {\n    this.iconDropElement = el;\n  };\n\n  private refCheckAllInput = (input: HTMLBdsCheckboxElement): void => {\n    this.checkAllInput = input;\n  };\n\n  private get childOptions(): HTMLBdsSelectOptionElement[] {\n    return this.options\n      ? Array.from(this.el.shadowRoot.querySelectorAll('bds-select-option'))\n      : Array.from(this.el.querySelectorAll('bds-select-option'));\n  }\n\n  private get childOptionSelected(): HTMLBdsSelectOptionElement {\n    return this.options\n      ? Array.from(this.el.shadowRoot.querySelectorAll('bds-select-option')).find((option) => option.selected)\n      : Array.from(this.el.querySelectorAll('bds-select-option')).find((option) => option.selected);\n  }\n\n  private onFocus = (): void => {\n    this.isFocused = true;\n    this.isPressed = true;\n    this.bdsFocus.emit();\n  };\n\n  private onFocusout = (): void => {\n    if (!this.isOpen) {\n      this.nativeInput.value = this.getText();\n    }\n  };\n\n  private onBlur = (): void => {\n    this.bdsBlur.emit();\n    this.isPressed = false;\n    if (!this.isOpen) {\n      this.isFocused = false;\n      this.nativeInput.value = this.getText();\n      if (this.selectionType == 'multiple') this.cleanInputSelection();\n    }\n    if (this.selectionType == 'multiple' && this.checkedOptions?.length > 0)\n      this.getTextMultiselect(this.checkedOptions);\n  };\n\n  private onClickWrapper = (): void => {\n    this.onFocus();\n    this.toggle();\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  };\n\n  private toggle = (): void => {\n    if (!this.disabled) {\n      this.isOpen = !this.isOpen;\n    }\n  };\n\n  private getTextFromOption = (opt: HTMLBdsSelectOptionElement): string => {\n    if (this.internalOptions) {\n      const internalOption = this.internalOptions.find((option) => option.value == opt?.value);\n      if (internalOption) {\n        return internalOption.label;\n      }\n    }\n    return opt?.titleText ? opt.titleText : (opt?.innerText ?? '');\n  };\n\n  private getText = (): string => {\n    const opt = this.childOptions.find((option) => option.value == this.value);\n    return this.getTextFromOption(opt);\n  };\n\n  private getTextMultiselect = (data): void => {\n    const valueInput = data?.length > 0 && `${data?.length} selecionados`;\n    this.textMultiselect = valueInput;\n  };\n\n  private handlerMultiselect = (): void => {\n    this.updateListChecked(this.childOptions);\n    this.nativeInput.value = '';\n    this.value = undefined;\n    this.resetFilterOptions();\n    if (this.childOptions.length != this.checkedOptions.length) {\n      setTimeout(() => {\n        this.checkAllInput.checked = false;\n      }, 10);\n    }\n  };\n\n  private handleCheckAll = (event: CustomEvent): void => {\n    const {\n      detail: { checked },\n    } = event;\n    for (const option of this.childOptions) {\n      if (checked) {\n        option.toMark();\n      } else {\n        option.markOff();\n      }\n    }\n    setTimeout(() => {\n      this.updateListChecked(this.childOptions);\n    }, 10);\n  };\n\n  private updateListChecked = (data: HTMLBdsSelectOptionElement[]): void => {\n    for (const option of data) {\n      option.checked ? option.classList.add('option-checked') : option.classList.remove('option-checked');\n    }\n    const defaultCheckedOptions = Array.from(data).filter((item) => item.checked == true);\n    const value = defaultCheckedOptions.map((term) => ({\n      value: term.value,\n      label: term.textContent,\n      checked: term.checked,\n    }));\n    this.checkedOptions = value;\n  };\n\n  private handler = (event: CustomEvent): void => {\n    const {\n      detail: { value },\n    } = event;\n    this.value = value;\n    this.toggle();\n  };\n\n  private keyPressWrapper(event) {\n    switch (event.key) {\n      case 'Enter':\n        this.toggle();\n        break;\n      case 'ArrowDown':\n        if (!this.disabled) {\n          this.isOpen = true;\n        }\n        if (this.childOptionSelected) {\n          this.value = (this.childOptionSelected.nextSibling as HTMLBdsSelectOptionElement)?.value;\n          return;\n        }\n        this.value = (this.el.firstElementChild as HTMLBdsSelectOptionElement)?.value;\n        break;\n      case 'ArrowUp':\n        if (this.childOptionSelected) {\n          this.value = (this.childOptionSelected.previousSibling as HTMLBdsSelectOptionElement)?.value;\n          return;\n        }\n        this.value = (this.el.lastElementChild as HTMLBdsSelectOptionElement)?.value;\n        break;\n    }\n  }\n\n  private cleanInputSelection = async () => {\n    if (!this.disabled) {\n      this.value = '';\n      this.nativeInput.value = '';\n      this.isOpen = false;\n      this.bdsCancel.emit({ value: '' });\n      await this.resetFilterOptions();\n    }\n  };\n\n  @Method()\n  async cleanMultipleSelection() {\n    if (this.selectionType === 'multiple' && this.checkedOptions?.length > 0) {\n      for (const option of this.childOptions) {\n        option.checked = false;\n        option.classList.remove('option-checked');\n      }\n      this.checkedOptions = [];\n      this.checkAllInput.checked = false;\n      this.nativeInput.value = '';\n      this.value = undefined;\n      this.resetFilterOptions();\n    } else {\n      this.cleanInputSelection();\n    }\n  };\n\n  private changedInputValue = async (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    if (input) {\n      this.value = input.value || '';\n    }\n    this.bdsInput.emit(ev as KeyboardEvent);\n    if (this.nativeInput.value) {\n      await this.filterOptions(this.nativeInput.value);\n    } else {\n      this.value = '';\n      if (this.isOpen) {\n        await this.resetFilterOptions();\n      } else {\n        this.setTimeoutFilter();\n      }\n    }\n\n    if (this.isOpen === false) {\n      this.value = this.getSelectedValue();\n      this.setTimeoutFilter();\n    }\n  };\n\n  private setTimeoutFilter(): void {\n    setTimeout(() => {\n      this.resetFilterOptions();\n    }, 500);\n  }\n\n  private async filterOptions(term: string) {\n    if (!term) {\n      await this.resetFilterOptions();\n    }\n\n    for (const option of this.childOptions) {\n      const optionTextLowercase = this.searchOnlyTitle\n        ? this.getTextFromOption(option).toLowerCase()\n        : option.textContent.toLowerCase();\n\n      const termLower = term.toLowerCase();\n\n      optionTextLowercase.includes(termLower)\n        ? option.removeAttribute('invisible')\n        : option.setAttribute('invisible', 'invisible');\n    }\n  }\n\n  private async resetFilterOptions() {\n    const childOptions = this.childOptions;\n    for (const option of childOptions) {\n      option.removeAttribute('invisible');\n    }\n  }\n\n  private getSelectedValue() {\n    return this.childOptionSelected?.value;\n  }\n\n  private renderIcon(): HTMLElement {\n    return (\n      this.icon && (\n        <div\n          class={{\n            input__icon: true,\n            'input__icon--large': !!this.label,\n          }}\n        >\n          <bds-icon size={this.label ? 'medium' : 'small'} name={this.icon} color=\"inherit\"></bds-icon>\n        </div>\n      )\n    );\n  }\n\n  private renderLabel(): HTMLElement {\n    return (\n      this.label && (\n        <label\n          class={{\n            input__container__label: true,\n            'input__container__label--pressed': this.isPressed && !this.disabled,\n          }}\n        >\n          <bds-typo variant=\"fs-12\" bold=\"bold\">\n            {this.label}\n          </bds-typo>\n        </label>\n      )\n    );\n  }\n\n  private renderMessage(): HTMLElement {\n    const icon = this.danger ? 'error' : this.success ? 'checkball' : 'info';\n    let message = this.danger ? this.errorMessage : this.success ? this.successMessage : this.helperMessage;\n\n    if (!message && this.validationDanger) message = this.validationMesage;\n\n    const styles =\n      this.danger || this.validationDanger\n        ? 'input__message input__message--danger'\n        : this.success\n          ? 'input__message input__message--success'\n          : 'input__message';\n\n    if (message) {\n      return (\n        <div class={styles} part=\"input__message\">\n          <div class=\"input__message__icon\">\n            <bds-icon size=\"x-small\" name={icon} theme=\"outline\" color=\"inherit\"></bds-icon>\n          </div>\n          <bds-typo class=\"input__message__text\" variant=\"fs-12\">\n            {message}\n          </bds-typo>\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  render(): HTMLElement {\n    return (\n      <Host aria-disabled={this.disabled ? 'true' : null}>\n        <div\n          class={{\n            input: true,\n            select: true,\n            'input--state-primary': !this.danger,\n            'input--state-danger': this.danger || this.validationDanger,\n            'input--state-success': this.success,\n            'input--state-disabled': this.disabled,\n            'input--label': !!this.label,\n            'input--pressed': this.isPressed,\n          }}\n          onClick={this.onClickWrapper}\n        >\n          {this.renderIcon()}\n          <div class=\"input__container\" tabindex=\"0\" onFocusout={this.onFocusout}>\n            {this.renderLabel()}\n            <div class={{ input__container__wrapper: true }}>\n              {this.textMultiselect?.length > 0 && (\n                <bds-typo variant=\"fs-14\" class=\"inside-input-left\">\n                  {this.textMultiselect}\n                </bds-typo>\n              )}\n              <input\n                class={{ input__container__text: true }}\n                ref={(input) => (this.nativeInput = input)}\n                disabled={this.disabled}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n                onInput={this.changedInputValue}\n                placeholder={this.placeholderState}\n                type=\"text\"\n                value={this.text}\n                data-test={this.dataTest}\n                onKeyDown={this.keyPressWrapper.bind(this)}\n              />\n            </div>\n          </div>\n          <div class=\"select__icon\">\n            <bds-icon\n              size=\"small\"\n              name=\"error\"\n              theme=\"solid\"\n              onClick={this.cleanInputSelection}\n              class={{\n                'icon-hidden': (this.clearIconOnFocus && (!this.isFocused || !this.isOpen)) || !this.value,\n              }}\n            ></bds-icon>\n            <bds-icon ref={(el) => this.refIconDrop(el)} size=\"small\" color=\"inherit\"></bds-icon>\n          </div>\n        </div>\n        {this.renderMessage()}\n        {this.loading ? (\n          <div\n            ref={(el) => this.refDropdown(el)}\n            class={{\n              select__options: true,\n              'select__options--open': this.isOpen,\n            }}\n          >\n            <bds-loading-spinner class=\"load-spinner\" size=\"small\"></bds-loading-spinner>\n          </div>\n        ) : (\n          <div\n            ref={(el) => this.refDropdown(el)}\n            class={{\n              select__options: true,\n              'select__options--open': this.isOpen,\n            }}\n          >\n            {this.selectionTitle && this.selectionType == 'multiple' && (\n              <bds-typo class=\"selection-title\" variant=\"fs-10\" bold=\"bold\">\n                {this.selectionTitle}\n              </bds-typo>\n            )}\n            {this.selectionType == 'multiple' && this.selectedAll && (\n              <bds-checkbox\n                ref={this.refCheckAllInput}\n                refer={`refer-multiselect`}\n                label={`Selecionar Todos`}\n                name=\"chack-all\"\n                class=\"select-all\"\n                onBdsChange={(ev) => this.handleCheckAll(ev)}\n              ></bds-checkbox>\n            )}\n            {this.checkedOptions?.length > 0 && (\n              <span class=\"content-divisor\">\n                <span class=\"divisor\"></span>\n              </span>\n            )}\n            {this.internalOptions ? (\n              this.internalOptions.map((option, idx) => (\n                <bds-select-option\n                  onOptionSelected={this.handler}\n                  onOptionChecked={this.handlerMultiselect}\n                  selected={this.value === option.value}\n                  value={option.value}\n                  key={idx}\n                  bulkOption={option.bulkOption}\n                  status={option.status}\n                  type-option={this.selectionType == 'multiple' ? 'checkbox' : 'default'}\n                >\n                  {option.label}\n                </bds-select-option>\n              ))\n            ) : (\n              <slot />\n            )}\n          </div>\n        )}\n      </Host>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}