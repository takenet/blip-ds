{"version":3,"names":["radioCss","radioButtonIds","Radio","constructor","hostRef","this","checked","disabled","dataTest","onClick","event","bdsClickChange","emit","stopPropagation","refNativeInput","input","nativeInput","checkedChanged","isChecked","bdsChange","getInputElement","Promise","resolve","getValue","connectedCallback","radioId","refer","handleClickKey","key","preventDefault","render","h","Host","class","htmlFor","type","ref","id","value","name","tabindex","onKeyDown","bind","label","variant","bold","tag","switchCss","switchIds","Switch","size","getStyleState","handleClick","ev","switchId","getSizeClass","getSizeSliderClass","sizeClass","sizeSliderClass","styleState"],"sources":["src/components/radio/radio.scss?tag=bds-radio&encapsulation=shadow","src/components/radio/radio.tsx","src/components/switch/switch.scss?tag=bds-switch&encapsulation=shadow","src/components/switch/switch.tsx"],"sourcesContent":["@import 'mixins';\n\n$radio-spacing-text: 8px;\n$radio-circle-width: 24px;\n$radio-circle-height: 24px;\n$radio-boder-radius: 16px;\n$radio-circle-pointer-width: 10px;\n$radio-circle-pointer-height: 10px;\n\n:host {\n  display: flex;\n}\n.radio {\n  display: flex;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  flex-wrap: nowrap;\n\n  [type='radio'] {\n    display: none;\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &__circle {\n    @include animation();\n    @include flex-align-middle();\n    width: $radio-circle-width;\n    height: $radio-circle-height;\n    flex-shrink: 0;\n    border: 2px solid $color-content-default;\n    padding: 4px;\n    border-radius: 100%;\n    box-sizing: border-box;\n    background: transparent;\n    position: relative;\n\n    &__pointer {\n      @include animation();\n      border-radius: 100%;\n      background: transparent;\n      height: $radio-circle-pointer-height;\n      width: $radio-circle-pointer-width;\n    }\n\n    .hover {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n\n    .focus:focus-visible {\n      display: flex;\n      position: absolute;\n      border: 2px solid $color-focus;\n      border-radius: 4px;\n      padding: 4px;\n      width: 100%;\n      height: 100%;\n      outline: none;\n    }\n  }\n\n  &:hover {\n    border-color: $color-content-disable;\n    .hover {\n      display: flex;\n      background-color: $color-hover;\n      position: absolute;\n      width: 36px;\n      height: 36px;\n      opacity: 1;\n      border-radius: 24px;\n      transition:\n        width 0.2s,\n        height 0.2s;\n    }\n  }\n\n  &__text {\n    @include no-select();\n    padding-left: $radio-spacing-text;\n    color: $color-content-default;\n  }\n\n  /** State Checked */\n  &__input[type='radio']:checked ~ &__circle {\n    background: transparent;\n    border-color: $color-content-default;\n\n    .radio__circle__pointer {\n      background-color: $color-primary;\n    }\n\n    &:hover {\n      border-color: $color-content-default;\n\n      .radio__circle__pointer {\n        background-color: $color-primary;\n      }\n    }\n  }\n\n  /** State Disabled */\n  &__input[type='radio']:disabled ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: transparent;\n    }\n  }\n  &__input[type='radio']:disabled:hover ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: transparent;\n    }\n  }\n  &__input[type='radio']:disabled:checked ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: $color-content-default;\n    }\n  }\n  &__input[type='radio']:disabled:checked:hover ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: $color-content-default;\n    }\n  }\n\n  &__input[type='radio']:disabled ~ &__text {\n    color: $color-content-disable;\n    cursor: not-allowed;\n  }\n  &__input[type='radio']:disabled ~ &__circle {\n    cursor: not-allowed;\n  }\n}\n","import { Component, h, Prop, Event, EventEmitter, Watch, State, Method, Host } from '@stencil/core';\n\nlet radioButtonIds = 0;\n@Component({\n  tag: 'bds-radio',\n  styleUrl: 'radio.scss',\n  shadow: true,\n})\nexport class Radio {\n  private nativeInput?: HTMLInputElement;\n\n  @State() radioId?: string;\n\n  /**\n   * Refer. Field to add refer in radio buttom.\n   */\n  @Prop() refer?: string;\n\n  /**\n   * label in radio, with he the input size increases.\n   */\n  @Prop() label?: string;\n\n  /**\n   * The value of the input.\n   */\n  @Prop() value!: string;\n\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name?: string;\n\n  /**\n   * If `true`, the checkbox is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) checked?: boolean = false;\n\n  /**\n   * If `true`, the user cannot interact with the checkbox.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter;\n\n  /**\n   * Emitted when the value has changed because of a click event.\n   */\n  @Event() bdsClickChange!: EventEmitter;\n\n  @Watch('checked')\n  protected checkedChanged(isChecked: boolean): void {\n    this.bdsChange.emit({ checked: isChecked });\n  }\n\n  @Method()\n  getInputElement(): Promise<HTMLInputElement> {\n    return Promise.resolve(this.nativeInput);\n  }\n\n  @Method()\n  getValue(): Promise<boolean> {\n    return Promise.resolve(this.nativeInput.checked);\n  }\n\n  private onClick = (event: Event): void => {\n    this.checked = true;\n    this.bdsClickChange.emit({ checked: this.checked });\n    event.stopPropagation();\n  };\n\n  private refNativeInput = (input: HTMLInputElement): void => {\n    this.nativeInput = input;\n  };\n\n  connectedCallback(): void {\n    this.radioId = this.refer || `bds-radio-${radioButtonIds++}`;\n  }\n\n  private handleClickKey(event) {\n    if ((event.key === 'Enter' || event.key === ' ') && !this.disabled) {\n      this.onClick(event);\n      event.preventDefault();\n      this.bdsClickChange.emit({ checked: this.checked });\n    }\n  }\n\n  render(): HTMLElement {\n    return (\n      <Host>\n        <label class=\"radio\" htmlFor={this.radioId}>\n          <input\n            class=\"radio__input\"\n            type=\"radio\"\n            ref={this.refNativeInput}\n            id={this.radioId}\n            onClick={this.onClick}\n            disabled={this.disabled}\n            checked={this.checked}\n            value={this.value}\n            name={this.name}\n            data-test={this.dataTest}\n          />\n          <div class=\"radio__circle\">\n            {!this.disabled ? <div class=\"focus\" tabindex=\"0\" onKeyDown={this.handleClickKey.bind(this)}></div> : ''}\n            {!this.disabled ? <div class=\"hover\"></div> : ''}\n            <div class=\"radio__circle__pointer\"></div>\n          </div>\n\n          {this.label && (\n            <bds-typo class=\"radio__text\" variant=\"fs-14\" bold={this.checked ? 'bold' : 'regular'} tag=\"span\">\n              {this.label}\n            </bds-typo>\n          )}\n\n          <slot />\n        </label>\n      </Host>\n    );\n  }\n}\n","@import 'resets';\n\n$switch-size-width-tall: 56px;\n$switch-size-width-standard: 42px;\n$switch-size-width-short: 32px;\n\n$switch-size-height-tall: 32px;\n$switch-size-height-standard: 24px;\n$switch-size-height-short: 18px;\n\n$switch-size-slider-tall: 24px;\n$switch-size-slider-standard: 18px;\n$switch-size-slider-short: 13.5px;\n\n$switch-size-translateX-tall: 24px;\n$switch-size-translateX-standard: 18px;\n$switch-size-translateX-short: 13.75px;\n\n$slider-size-content-tall: 4px;\n$slider-size-content-standard: 3px;\n$slider-size-content-short: 2.25px;\n\n@mixin translateX_values($value) {\n  -webkit-transform: translateX($value);\n  -ms-transform: translateX($value);\n  transform: translateX($value);\n}\n\n@mixin switch_width_height($width, $height) {\n  width: $width;\n  height: $height;\n}\n\n@mixin slider_width_height($value, $margin) {\n  position: absolute;\n  content: ' ';\n  left: $margin;\n  bottom: $margin;\n  top: $margin;\n  background-color: $color-content-bright;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 50%;\n  width: $value;\n  height: $value;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n\n  &--size-tall {\n    @include switch_width_height($switch-size-width-tall, $switch-size-height-tall);\n  }\n  &--size-standard {\n    @include switch_width_height($switch-size-width-standard, $switch-size-height-standard);\n  }\n  &--size-short {\n    @include switch_width_height($switch-size-width-short, $switch-size-height-short);\n  }\n\n  .focus:focus-visible {\n    display: flex;\n    position: absolute;\n    border: 2px solid $color-focus;\n    border-radius: 4px;\n    width: 100%;\n    height: 100%;\n    top: -4px;\n    left: -4px;\n    padding-right: 4px;\n    padding-bottom: 4px;\n    outline: none;\n  }\n}\n\n.switch input {\n  opacity: 100;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: $color-content-ghost;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 34px;\n\n  &--size-tall::before {\n    @include slider_width_height($switch-size-slider-tall, $slider-size-content-tall);\n  }\n\n  &--size-standard::before {\n    @include slider_width_height($switch-size-slider-standard, $slider-size-content-standard);\n  }\n\n  &--size-short::before {\n    @include slider_width_height($switch-size-slider-short, $slider-size-content-short);\n  }\n\n  &--deselected-disabled {\n    cursor: not-allowed;\n    background-color: $color-content-ghost;\n    opacity: 0.5;\n  }\n}\n\ninput:checked + .slider {\n  background-color: $color-surface-primary;\n\n  &--selected-disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px $color-primary-main;\n\n  &--selected-disabled {\n    box-shadow: 0 0 1px $color-neutral-medium-silver;\n  }\n\n  &--deselected-disabled {\n    box-shadow: 0 0 1px $color-neutral-medium-wave;\n  }\n}\n\ninput:checked + .slider {\n  &--size-tall::before {\n    @include translateX_values($switch-size-translateX-tall);\n  }\n\n  &--size-standard::before {\n    @include translateX_values($switch-size-translateX-standard);\n  }\n\n  &--size-short::before {\n    @include translateX_values($switch-size-translateX-short);\n  }\n}\n","import { Component, h, Prop, State, Method, Event, EventEmitter, Watch } from '@stencil/core';\nexport type SwitchSize = 'tall' | 'standard' | 'short';\n\nlet switchIds = 0;\n\n@Component({\n  tag: 'bds-switch',\n  styleUrl: 'switch.scss',\n  shadow: true,\n})\nexport class Switch {\n  private nativeInput?: HTMLInputElement;\n  /**\n   * Component identifier.\n   */\n  @State() switchId?: string;\n  /**\n   * The refer of the control.\n   */\n  @Prop() refer!: string;\n\n  /**\n   * Size. Entered as one of the size. Can be one of:\n   * 'tall', 'standard', 'short';\n   */\n  @Prop() size?: SwitchSize = 'standard';\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name!: string;\n\n  /**\n   * If `true`, the switch is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) checked = false;\n\n  /**\n   * If `true`, the user cannot interact with the switch.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  connectedCallback(): void {\n    this.switchId = this.refer || `bds-switch-${switchIds++}`;\n  }\n\n  @Watch('checked')\n  protected checkedChanged(isChecked: boolean): void {\n    this.bdsChange.emit({\n      checked: isChecked,\n    });\n  }\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter;\n\n  @Method()\n  getInputElement(): Promise<HTMLInputElement> {\n    return Promise.resolve(this.nativeInput);\n  }\n\n  @Method()\n  getValue(): Promise<boolean> {\n    return Promise.resolve(this.nativeInput.checked);\n  }\n\n  private onClick = (): void => {\n    this.checked = !this.checked;\n  };\n\n  private refNativeInput = (input: HTMLInputElement): void => {\n    this.nativeInput = input;\n  };\n\n  getSizeClass(): string {\n    return `switch switch--size-${this.size} `;\n  }\n\n  getSizeSliderClass(): string {\n    return `slider slider--size-${this.size} round `;\n  }\n\n  private getStyleState = (): string => {\n    if (this.checked && !this.disabled) {\n      return 'slider--selected';\n    }\n\n    if (!this.checked && !this.disabled) {\n      return 'slider--deselected';\n    }\n\n    if (this.checked && this.disabled) {\n      return 'slider--selected-disabled';\n    }\n\n    if (!this.checked && this.disabled) {\n      return 'slider--deselected-disabled';\n    }\n\n    return '';\n  };\n\n  private handleClick = (ev) => {\n    if (!this.disabled) {\n      if (ev.key === 'Enter') {\n        this.checked = !this.checked;\n      }\n    }\n  };\n\n  render(): HTMLElement {\n    const sizeClass = this.getSizeClass();\n    const sizeSliderClass = this.getSizeSliderClass();\n    const styleState = this.getStyleState();\n\n    return (\n      <label class={{ [sizeClass]: true }}>\n        <div tabindex=\"0\" onKeyDown={(ev) => this.handleClick(ev)} class=\"focus\"></div>\n        <input\n          type=\"checkbox\"\n          ref={this.refNativeInput}\n          id={this.switchId}\n          name={this.name}\n          onClick={this.onClick}\n          checked={this.checked}\n          disabled={this.disabled}\n          data-test={this.dataTest}\n        ></input>\n        <span class={{ [sizeSliderClass]: true, [styleState]: true }}></span>\n      </label>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}