{"file":"p-Cv1QWbTR.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/button/button.scss?tag=bds-button&encapsulation=shadow","src/components/button/button.tsx"],"sourcesContent":["@import 'resets';\n\n$button-border-radius: 8px;\n\n@mixin disable-button($color: null, $border: null) {\n  opacity: 50%;\n  pointer-events: none;\n\n  @if ($color) {\n    color: $color;\n  }\n\n  @if ($border) {\n    border: $border;\n  }\n\n  &:hover,\n  &:active {\n    @if ($color) {\n      color: $color;\n    }\n\n    @if ($border) {\n      border: $border;\n    }\n  }\n}\n\n@mixin inherit-color() {\n  color: inherit;\n  background-color: inherit;\n}\n\n@mixin button-variant(\n  $bg-color,\n  $border-color,\n  $text-color,\n  $hover: null,\n  $active: null,\n  $dark: null,\n  $disabled-opacity: 50%\n) {\n  background-color: $bg-color;\n  border-color: $border-color;\n\n  .typo_buttom,\n  .icon_buttom {\n    color: $text-color;\n    z-index: 1;\n  }\n\n  &--disabled {\n    opacity: $disabled-opacity;\n    pointer-events: none;\n  }\n\n  &:hover::before {\n    background-color: $hover;\n    transition: background-color 0.3s ease;\n\n    @if $dark {\n      filter: brightness(0.88);\n    } @else {\n      opacity: 0.08;\n    }\n  }\n\n  @if $active {\n    &:active::before,\n    &--active::before {\n      @if $dark {\n        filter: brightness(0.76);\n      } @else {\n        opacity: 0.24;\n      }\n    }\n  }\n}\n\n@mixin button-size($height) {\n  height: $height;\n}\n\n@mixin button-position($radius-top-left, $radius-top-right, $radius-bottom-left, $radius-bottom-right) {\n  border-top-left-radius: $radius-top-left;\n  border-top-right-radius: $radius-top-right;\n  border-bottom-left-radius: $radius-bottom-left;\n  border-bottom-right-radius: $radius-bottom-right;\n}\n\n@mixin button-border-radius($radius-top-left, $radius-top-right, $radius-bottom-left, $radius-bottom-right) {\n  border-top-left-radius: $radius-top-left;\n  border-top-right-radius: $radius-top-right;\n  border-bottom-left-radius: $radius-bottom-left;\n  border-bottom-right-radius: $radius-bottom-right;\n}\n\n:host {\n  height: fit-content;\n  position: relative;\n  width: fit-content;\n}\n\n:host(.block) {\n  width: 100%;\n  display: flex;\n}\n\n:host(.group) {\n  width: auto;\n}\n\n:host:focus-visible {\n  outline: none;\n}\n\n.button {\n  @include reset-button();\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  border-radius: $button-border-radius;\n  border-style: solid;\n  border-left-width: 1px;\n  border-top-width: 1px;\n  border-right-width: 1px;\n  border-bottom-width: 1px;\n  position: relative;\n  box-sizing: border-box;\n  gap: 4px;\n  padding: 0 16px;\n\n  &__size {\n    &--short {\n      @include button-size(32px);\n    }\n\n    &--standard {\n      @include button-size(40px);\n    }\n\n    &--medium {\n      @include button-size(40px);\n    }\n\n    &--large {\n      @include button-size(56px);\n    }\n  }\n\n  &__only-icon--medium {\n    padding: 8px;\n    gap: 0;\n  }\n\n  &__only-icon--large {\n    padding: 8px 16px;\n    gap: 0;\n  }\n\n  &__only-icon--short {\n    padding: 0px;\n    width: 32px;\n    gap: 0;\n  }\n\n  &--block,\n  &--group {\n    width: 100%;\n  }\n\n  bds-loading-spinner {\n    max-height: 100%;\n    position: absolute;\n  }\n\n  & * {\n    pointer-events: none;\n  }\n\n  &__color {\n    &--primary.button__variant--solid,\n    &--primary.button__variant--primary {\n      @include button-variant(\n        $color-surface-primary,\n        transparent,\n        $color-content-bright,\n        $color-surface-primary,\n        $color-surface-primary,\n        true\n      );\n    }\n\n    &--primary.button__variant--outline,\n    &--primary.button__variant--tertiary {\n      @include button-variant(\n        transparent,\n        $color-primary,\n        $color-primary,\n        $color-surface-primary,\n        $color-surface-primary\n      );\n    }\n\n    &--primary.button__variant--text,\n    &--primary.button__variant--secondary {\n      @include button-variant(transparent, transparent, $color-primary, $color-primary, $color-primary);\n    }\n\n    &--content.button__variant--solid,\n    &--content.button__variant--primary {\n      @include button-variant(\n        $color-content-default,\n        transparent,\n        $color-surface-0,\n        $color-content-default,\n        $color-content-default,\n        true\n      );\n    }\n\n    &--content.button__variant--outline,\n    &--content.button__variant--tertiary {\n      @include button-variant(\n        transparent,\n        $color-content-default,\n        $color-content-default,\n        $color-content-default,\n        $color-content-default\n      );\n    }\n\n    &--content.button__variant--text,\n    &--content.button__variant--secondary {\n      @include button-variant(\n        transparent,\n        transparent,\n        $color-content-default,\n        $color-content-default,\n        $color-content-default\n      );\n    }\n\n    &--negative.button__variant--solid,\n    &--negative.button__variant--primary,\n    &--negative.button__variant--delete {\n      @include button-variant(\n        $color-surface-negative,\n        transparent,\n        $color-content-bright,\n        $color-surface-negative,\n        $color-surface-negative,\n        true\n      );\n    }\n\n    &--negative.button__variant--outline,\n    &--negative.button__variant--tertiary,\n    &--negative.button__variant--delete {\n      @include button-variant(\n        transparent,\n        $color-negative,\n        $color-negative,\n        $color-surface-negative,\n        $color-surface-negative\n      );\n    }\n\n    &--negative.button__variant--text,\n    &--negative.button__variant--secondary,\n    &--negative.button__variant--delete {\n      @include button-variant(transparent, transparent, $color-negative, $color-negative, $color-surface-negative);\n    }\n\n    &--positive.button__variant--solid,\n    &--positive.button__variant--primary {\n      @include button-variant(\n        $color-surface-positive,\n        transparent,\n        $color-content-bright,\n        $color-surface-positive,\n        $color-surface-positive,\n        true\n      );\n    }\n\n    &--positive.button__variant--outline,\n    &--positive.button__variant--tertiary {\n      @include button-variant(\n        transparent,\n        $color-positive,\n        $color-positive,\n        $color-surface-positive,\n        $color-surface-positive\n      );\n    }\n\n    &--positive.button__variant--text,\n    &--positive.button__variant--secondary {\n      @include button-variant(transparent, transparent, $color-positive, $color-positive, $color-surface-positive);\n    }\n  }\n\n  &.button__variant--secondary {\n    @include button-variant(\n      transparent,\n      transparent,\n      $color-content-default,\n      $color-content-default,\n      $color-content-default\n    );\n  }\n\n  &.button__variant--tertiary {\n    @include button-variant(\n      transparent,\n      $color-content-default,\n      $color-content-default,\n      $color-content-default,\n      $color-content-default\n    );\n  }\n\n  &__group {\n    width: 100%;\n  }\n\n  &__position {\n    &--row {\n      &--first {\n        @include button-position(10px, 0, 10px, 0);\n        border-left-width: 1px;\n        border-top-width: 1px;\n        border-bottom-width: 1px;\n        border-right-width: 1px;\n      }\n\n      &--middle {\n        @include button-position(0, 0, 0, 0);\n        border-top-width: 1px;\n        border-bottom-width: 1px;\n        border-left-width: 0;\n        border-right-width: 1px;\n      }\n\n      &--last {\n        @include button-position(0, 10px, 0, 10px);\n        border-right-width: 1px;\n        border-top-width: 1px;\n        border-bottom-width: 1px;\n        border-left-width: 0px;\n      }\n    }\n\n    &--column {\n      &--first {\n        @include button-position(10px, 10px, 0, 0);\n        border-left-width: 1px;\n        border-top-width: 1px;\n        border-bottom-width: 1px;\n        border-right-width: 1px;\n      }\n\n      &--middle {\n        @include button-position(0, 0, 0, 0);\n        border-top-width: 0px;\n        border-bottom-width: 1px;\n        border-left-width: 1px;\n        border-right-width: 1px;\n      }\n\n      &--last {\n        @include button-position(0, 0, 10px, 10px);\n        border-right-width: 1px;\n        border-top-width: 0px;\n        border-bottom-width: 1px;\n        border-left-width: 1px;\n      }\n    }\n  }\n\n  &__arrow {\n    @include inherit-color();\n    height: 24px;\n    margin-left: 2px;\n  }\n\n  &__content {\n    height: 20px;\n    display: flex;\n    align-items: center;\n    z-index: 1;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    z-index: 0;\n    border-radius: $button-border-radius;\n  }\n\n  &__position {\n    &--row {\n      &--first::before {\n        @include button-border-radius(10px, 0, 10px, 0);\n      }\n\n      &--middle::before {\n        @include button-border-radius(0, 0, 0, 0);\n      }\n\n      &--last::before {\n        @include button-border-radius(0, 10px, 0, 10px);\n      }\n    }\n\n    &--column {\n      &--first::before {\n        @include button-border-radius(10px, 10px, 0, 0);\n      }\n\n      &--middle::before {\n        @include button-border-radius(0, 0, 0, 0);\n      }\n\n      &--last::before {\n        @include button-border-radius(0, 0, 10px, 10px);\n      }\n    }\n  }\n\n  .hide {\n    cursor: not-allowed;\n    opacity: 0;\n  }\n}\n\n.focus:focus-visible {\n  display: flex;\n  position: absolute;\n  border: 2px solid $color-focus;\n  border-radius: 4px;\n  width: 100%;\n  height: 100%;\n  top: -4px;\n  left: -4px;\n  padding-right: 4px;\n  padding-bottom: 4px;\n  outline: none;\n}\n\n.disabled {\n  pointer-events: none;\n}\n","import { Component, Prop, Element, Event, EventEmitter, h, Host, State, Method, Watch } from '@stencil/core';\r\nimport { LoadingSpinnerVariant } from '../loading-spinner/loading-spinner';\r\nimport { colorsVariants } from '../loading-spinner/loading-spinner';\r\n\r\nexport type ButtonSize = 'tall' | 'standard' | 'short' | 'medium' | 'large';\r\n\r\nexport type ButtonVariant =\r\n  | 'primary'\r\n  | 'secondary'\r\n  | 'tertiary'\r\n  | 'delete'\r\n  | 'secondary--white'\r\n  | 'ghost'\r\n  | 'dashed'\r\n  | 'facebook'\r\n  | 'solid'\r\n  | 'outline'\r\n  | 'text';\r\n\r\nexport type ButtonType = 'button' | 'submit' | 'reset';\r\n\r\nexport type IconType = 'icon' | 'logo' | 'emoji';\r\n\r\nexport type IconTheme = 'outline' | 'solid';\r\n\r\n@Component({\r\n  tag: 'bds-button',\r\n  styleUrl: 'button.scss',\r\n  shadow: true,\r\n})\r\nexport class Button {\r\n  @Element() el!: HTMLElement;\r\n\r\n  @State() slotText: string;\r\n  @State() active: boolean;\r\n  @State() position: string;\r\n  @State() direction: string;\r\n  @State() group = false;\r\n  @State() loadingColor: colorsVariants;\r\n  /**\r\n   * \tIf true, the base button will be disabled.\r\n   */\r\n  @Prop() block?: boolean = false;\r\n\r\n  /**\r\n   * \tIf true, the base button will be disabled.\r\n   */\r\n  @Prop() disabled?: boolean = false;\r\n\r\n  @Prop({ mutable: true }) color?: string = 'primary';\r\n  /**\r\n   * Size. Entered as one of the size. Can be one of:\r\n   * 'tall', 'standard', 'short';\r\n   */\r\n  @Prop({ mutable: true }) size?: ButtonSize = 'medium';\r\n\r\n  /**\r\n   * Variant. Entered as one of the variant. Can be one of:\r\n   * 'primary', 'secondary', 'ghost', 'dashed';\r\n   */\r\n  @Prop({ mutable: true }) variant?: ButtonVariant = 'solid';\r\n\r\n  /**\r\n   * used for add icon in input left. Uses the bds-icon component.\r\n   */\r\n  @Prop({ reflect: true }) icon?: string = null;\r\n\r\n  /**\r\n   * used for add icon in input left. Uses the bds-icon component.\r\n   */\r\n  @Prop({ reflect: true }) iconLeft?: string = null;\r\n\r\n  /**\r\n   * used for add icon in input left. Uses the bds-icon component.\r\n   */\r\n  @Prop({ reflect: true }) iconRight?: string = null;\r\n\r\n  /**\r\n   * The arrow button\r\n   */\r\n  @Prop() arrow?: boolean = false;\r\n\r\n  /**\r\n   * The type of the button. Can be one of:\r\n   * 'button', 'submit', 'reset';\r\n   */\r\n  @Prop() type: ButtonType = 'button';\r\n\r\n  /**\r\n   * The theme of the icon. Can be one of:\r\n   * 'outline', 'solid';\r\n   */\r\n  @Prop({ reflect: true }) iconTheme: IconTheme = 'outline';\r\n\r\n  /**\r\n   * The type of the icon. Can be one of:\r\n   * 'icon', 'logo', 'emoji';\r\n   */\r\n  @Prop({ reflect: true }) typeIcon: IconType = 'icon';\r\n\r\n  /**\r\n   * \tIf true, shows the loading spinner\r\n   */\r\n  @Prop() bdsLoading?: boolean = false;\r\n\r\n  /**\r\n   * \tIf not empty, Sets the color of the spinner, can be 'primary','secondary' or 'ghost'\r\n   */\r\n  @Prop() bdsLoadingVariant?: LoadingSpinnerVariant = 'primary';\r\n\r\n  /**\r\n   * \tIf not empty, Sets the color of the spinner, can be 'primary','secondary' or 'ghost'\r\n   */\r\n  @Prop() bdsLoadingColor?: colorsVariants = 'main';\r\n\r\n  /**\r\n   * Data test is the prop to specifically test the component action object.\r\n   */\r\n  @Prop() dataTest?: string = null;\r\n\r\n  /**\r\n   * Event buttom onClick.\r\n   */\r\n  @Event() bdsClick: EventEmitter;\r\n\r\n  @Method()\r\n  async isActive(value) {\r\n    this.active = value;\r\n  }\r\n\r\n  @Method()\r\n  async setPosition(position: 'first' | 'last' | 'middle') {\r\n    this.position = position;\r\n    this.position ? (this.group = true) : false;\r\n  }\r\n\r\n  @Method()\r\n  async setDirection(direction: 'row' | 'column') {\r\n    this.direction = direction;\r\n  }\r\n\r\n  @Method()\r\n  async setSize(size: ButtonSize) {\r\n    this.size = size;\r\n  }\r\n\r\n  @Method()\r\n  async setColor(color: 'primary' | 'content' | 'negative' | 'positive') {\r\n    this.color = color;\r\n  }\r\n\r\n  @Method()\r\n  async setVariant(variant: ButtonVariant) {\r\n    this.variant = variant;\r\n  }\r\n\r\n  componentDidRender() {\r\n    this.logSlotText();\r\n    this.buttonLegacy();\r\n  }\r\n\r\n  buttonLegacy() {\r\n    this.variant === 'facebook' ? this.setVariant('outline') : this.setVariant(this.variant);\r\n    this.size === 'tall'\r\n      ? this.setSize('large')\r\n      : this.size === 'standard'\r\n        ? this.setSize('medium')\r\n        : this.setSize(this.size);\r\n  }\r\n\r\n  logSlotText() {\r\n    const slot = this.el.shadowRoot.querySelector('slot');\r\n    const onlyIconElement = this.el.shadowRoot.querySelector('button') as HTMLElement;\r\n\r\n    if (slot) {\r\n      const assignedNodes = slot.assignedNodes();\r\n\r\n      let slotText = '';\r\n      assignedNodes.forEach((node) => {\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n          slotText += node.textContent;\r\n        }\r\n      });\r\n      if (slotText === '' && this.size === 'medium') {\r\n        onlyIconElement.classList.add('button__only-icon--medium');\r\n      }\r\n      if (slotText === '' && this.size === 'large') {\r\n        onlyIconElement.classList.add('button__only-icon--large');\r\n      }\r\n      if (slotText === '' && this.size === 'short') {\r\n        onlyIconElement.classList.add('button__only-icon--short');\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('bdsLoading')\r\n  renderLoadingSpinner(): HTMLBdsLoadingSpinnerElement {\r\n    if (this.variant === 'solid') {\r\n      if (['primary', 'positive', 'negative'].includes(this.color)) {\r\n        this.loadingColor = 'light';\r\n      } else if (this.color === 'content') {\r\n        this.loadingColor = 'content';\r\n      }\r\n    } else if (this.variant === 'outline' || this.variant === 'text') {\r\n      this.loadingColor = this.color === 'positive' ? 'positive' : this.color === 'negative' ? 'negative' : 'main';\r\n    }\r\n    return <bds-loading-spinner size=\"extra-small\" color={this.loadingColor}></bds-loading-spinner>;\r\n  }\r\n\r\n  private handleClick = (ev) => {\r\n    if (!this.disabled) {\r\n      if (ev.key == 'Enter') {\r\n        this.bdsClick.emit(ev);\r\n      }\r\n      if (ev.type == 'click') {\r\n        this.bdsClick.emit(ev);\r\n      }\r\n\r\n      const form = this.el.closest('form');\r\n      if (form) {\r\n        ev.preventDefault();\r\n        const fakeButton = document.createElement('button');\r\n        fakeButton.type = this.type;\r\n        fakeButton.style.display = 'none';\r\n        form.appendChild(fakeButton);\r\n        fakeButton.click();\r\n        fakeButton.remove();\r\n      }\r\n    }\r\n  };\r\n\r\n  render(): HTMLElement {\r\n    return (\r\n      <Host class={{ host: true, block: this.block, group: this.group }}>\r\n        <div tabindex=\"0\" onKeyDown={(ev) => this.handleClick(ev)} class=\"focus\"></div>\r\n        <button\r\n          onClick={(ev) => this.handleClick(ev)}\r\n          disabled={this.disabled}\r\n          tabindex=\"-1\"\r\n          aria-disabled={this.disabled ? 'true' : 'false'}\r\n          aria-live=\"assertive\"\r\n          type={this.type}\r\n          class={{\r\n            button: true,\r\n            'button--block': this.block,\r\n            'button--group': this.group,\r\n            [`button__position--${this.direction}--${this.position}`]: true,\r\n            'button--active': this.active,\r\n            [`button__variant--${this.variant === 'delete' ? 'solid' : this.variant}`]: true,\r\n            [`button__${this.variant === 'delete' ? 'solid' : this.variant}`]: true,\r\n            [`button__color--${this.variant === 'delete' ? 'negative' : this.color}`]: true,\r\n            [`button__variant--${this.variant}--disabled`]: this.disabled,\r\n            [`button__size--${this.size}`]: true,\r\n          }}\r\n          part=\"button\"\r\n          data-test={this.dataTest}\r\n        >\r\n          {this.bdsLoading ? this.renderLoadingSpinner() : ''}\r\n          {this.iconLeft || this.icon ? (\r\n            <bds-icon\r\n              class={{ icon_buttom: true, hide: this.bdsLoading }}\r\n              name={this.icon ? this.icon : this.iconLeft}\r\n              theme={this.iconTheme}\r\n              type={this.typeIcon}\r\n              color=\"inherit\"\r\n              size={'medium'}\r\n            ></bds-icon>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <bds-typo\r\n            class={{ typo_buttom: true, button__content:true, hide: this.bdsLoading }}\r\n            variant=\"fs-14\"\r\n            lineHeight=\"simple\"\r\n            bold=\"bold\"\r\n          >\r\n            <slot></slot>\r\n          </bds-typo>\r\n          {this.iconRight || this.arrow ? (\r\n            <bds-icon\r\n              class={{ icon_buttom: true, hide: this.bdsLoading }}\r\n              name={this.arrow ? 'arrow-right' : this.iconRight}\r\n              color=\"inherit\"\r\n              theme={this.iconTheme}\r\n              type={this.typeIcon}\r\n            ></bds-icon>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}