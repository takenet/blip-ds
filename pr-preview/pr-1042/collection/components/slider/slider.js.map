{"version":3,"file":"slider.js","sourceRoot":"","sources":["../../../../src/components/slider/slider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, State, Prop, EventEmitter, Event } from '@stencil/core';\nimport { typeRange, StepOption } from './slider-interface';\n\n@Component({\n  tag: 'bds-slider',\n  styleUrl: 'slider.scss',\n  shadow: true,\n})\nexport class Slider {\n  private inputSlide?: HTMLInputElement;\n  private bdsTooltip?: HTMLBdsTooltipElement;\n  private progressBar?: HTMLElement;\n\n  @State() stepArray?: StepOption[];\n  @State() internalOptions?: StepOption[];\n  @State() inputValue?: string = this.value.toString();\n\n  /**\n   * Step, property to insert steps into the input range.\n   */\n  @Prop() step?: number;\n\n  /**\n   * Min, property to set the minimum value of the range.\n   */\n  @Prop() min?: number;\n\n  /**\n   * Max, property to set the maximum value of the range.\n   */\n  @Prop() max?: number;\n\n  /**\n   * Value, prop to define value of input.\n   */\n  @Prop() value?: number = this.min ? this.min : 0;\n\n  /**\n   * Markers, Prop to enable markers.\n   */\n  @Prop() markers?: boolean = false;\n\n  /**\n   * Label, Prop to enable Label.\n   */\n  @Prop() label?: boolean = false;\n  /**\n   * Type, prop to select type of slider.\n   */\n  @Prop() type?: typeRange = 'fill';\n\n  /**\n   * Data Markers, prop to select ype of markers.\n   */\n  @Prop() dataMarkers?: string | StepOption[];\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  /**\n   * bdsChange. Event to return selected date value.\n   */\n  @Event() bdsChange?: EventEmitter;\n\n  componentWillLoad() {\n    if (this.dataMarkers) {\n      if (typeof this.dataMarkers === 'string') {\n        this.internalOptions = JSON.parse(this.dataMarkers);\n        this.stepArray = this.internalOptions;\n      } else {\n        this.internalOptions = this.dataMarkers;\n        this.stepArray = this.internalOptions;\n      }\n    } else {\n      this.stepArray = this.arrayToSteps(\n        (this.max - this.min) / this.step,\n        Number.isInteger((this.max - this.min) / this.step),\n      ) as StepOption[];\n    }\n  }\n\n  componentDidLoad() {\n    this.progressBar.style.width = `${this.valuePercent(this.inputSlide)}%`;\n  }\n  componentDidRender() {\n    if (this.internalOptions) {\n      this.inputSlide.min = '0';\n      this.inputSlide.max = `${this.internalOptions.length - 1}`;\n      this.inputSlide.step = '1';\n    } else {\n      this.inputSlide.min = this.min ? `${this.min}` : '';\n      this.inputSlide.max = this.max ? `${this.max}` : '';\n      this.inputSlide.step = this.step ? `${this.step}` : '';\n    }\n  }\n\n  componentDidUpdate() {\n    this.progressBar.style.width = `${this.valuePercent(this.inputSlide)}%`;\n    const valueName = this.emiterChange(parseInt(this.inputSlide.value));\n    this.inputValue = this.stepArray.length > 0 ? valueName.name : this.inputSlide.value;\n  }\n\n  private refInputSlide = (el: HTMLInputElement): void => {\n    this.inputSlide = el;\n  };\n\n  private refBdsTooltip = (el: HTMLBdsTooltipElement): void => {\n    this.bdsTooltip = el;\n  };\n\n  private refProgressBar = (el: HTMLElement): void => {\n    this.progressBar = el;\n  };\n\n  private valuePercent = (element: HTMLInputElement | null): number => {\n    const input = element;\n    const min = input.min ? parseInt(input.min) : 0;\n    const max = parseInt(input.max);\n    const val = parseInt(input.value);\n    const percentage = ((val - min) * 100) / (max - min);\n    return percentage;\n  };\n\n  private onInputSlide = (ev: Event): void => {\n    const input = ev.target as HTMLInputElement | null;\n    this.progressBar.style.width = `${this.valuePercent(input)}%`;\n    const valueName = this.emiterChange(parseInt(input.value));\n    this.inputValue = this.stepArray.length > 0 ? valueName.name : input.value;\n    this.bdsChange.emit(valueName);\n  };\n\n  private onInputMouseEnter = (): void => {\n    this.bdsTooltip.visible();\n    this.progressBar.classList.add(`progress-bar-hover`);\n  };\n\n  private onInputMouseLeave = (): void => {\n    this.bdsTooltip.invisible();\n    this.progressBar.classList.remove(`progress-bar-hover`);\n  };\n\n  private emiterChange = (value: number): StepOption => {\n    if (this.internalOptions) {\n      return this.stepArray[value];\n    } else {\n      return this.stepArray.find((item) => parseInt(item.name) === value);\n    }\n  };\n\n  private arrayToSteps(value: number, int: boolean): unknown {\n    const numberToCalc = int ? value + 1 : value;\n    const valueSteps = [];\n    for (let i = 0; i < numberToCalc; i++) {\n      valueSteps.push(i);\n    }\n    return valueSteps.map((term) => ({ value: term, name: term * this.step + this.min }));\n  }\n\n  render() {\n    return (\n      <Host>\n        <input\n          ref={this.refInputSlide}\n          type=\"range\"\n          class={{\n            input_slide: true,\n          }}\n          value={this.value as number}\n          onInput={this.onInputSlide}\n          onMouseEnter={this.onInputMouseEnter}\n          onMouseLeave={this.onInputMouseLeave}\n          data-test={this.dataTest}\n        />\n        <div class=\"track-bg\">\n          <div\n            class={{ [`progress-bar`]: true, [`progress-bar-liner`]: this.type !== 'no-linear' }}\n            ref={this.refProgressBar}\n          >\n            <bds-tooltip\n              ref={this.refBdsTooltip}\n              class={{ [`progress-bar-tooltip`]: true }}\n              position=\"top-center\"\n              tooltip-text={this.inputValue}\n            >\n              <div class={{ [`progress-bar-thumb`]: true }}></div>\n            </bds-tooltip>\n          </div>\n          {this.markers &&\n            this.stepArray.map((item, index) => (\n              <div key={index} class={`step`}>\n                {this.label && <bds-typo class=\"label-step\" variant=\"fs-10\">{`${item.name}`}</bds-typo>}\n              </div>\n            ))}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}