{"version":3,"file":"input-editable.js","sourceRoot":"","sources":["../../../../src/components/input-editable/input-editable.tsx"],"names":[],"mappings":"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":["import { Component, Prop, State, Event, EventEmitter, Element, h, Host } from '@stencil/core';\nimport { FontSize } from '../typo/typo';\n\nexport type SizeInputEditable = 'short' | 'standard' | 'tall';\nexport interface InputEditableEventDetail {\n  value: string;\n  oldValue: string;\n}\n\n@Component({\n  tag: 'bds-input-editable',\n  styleUrl: 'input-editable.scss',\n  shadow: true,\n})\nexport class InputEditable {\n  private nativeInput?: HTMLInputElement;\n\n  @Element() el!: HTMLBdsInputEditableElement;\n  /**\n   * Value to keep the old value of the input.\n   */\n  @State() oldValue: string;\n  /**\n   * Conditions the element to say whether it is pressed or not, to add styles.\n   */\n  @State() isEditing = false;\n\n  /**\n   * Used to block the confirm icon.\n   */\n  @State() isValid = true;\n\n  /**\n   * Used to validate it is pressed.\n   */\n  @State() isPressed? = false;\n\n  /**\n   * Used to validate it is focused.\n   */\n  @State() isFocused?: boolean = false;\n\n  /**\n   * Used to set the error message setted by the internal validators\n   */\n  @State() validationMesage? = '';\n\n  /**\n   * Used to set the danger behavior by the internal validators\n   */\n  @State() validationDanger? = false;\n\n  /**\n   * Set the component size. Can be one of:\n   * 'short' | 'standard' | 'tall';\n   */\n  @Prop() size?: SizeInputEditable = 'standard';\n\n  /**\n   * Defines whether the component will be expandable\n   */\n  @Prop() expand?: boolean = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n  /**\n   * Input Name\n   */\n  @Prop() inputName?: string = '';\n\n  /**\n   * The value of the input.\n   */\n  @Prop({ mutable: true, reflect: true }) value?: string | null = '';\n\n  /**\n   * Error message when input is required\n   */\n  @Prop() requiredErrorMessage: string;\n\n  /**\n   * If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.\n   */\n  @Prop() minlength?: number = 0;\n\n  /**\n   * Error message when the value is lower than the minlength\n   */\n  @Prop() minlengthErrorMessage: string;\n\n  /**\n   * If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.\n   */\n  @Prop() maxlength?: number;\n\n  /**\n   * Indicated to pass an feeback to user.\n   */\n  @Prop() errorMessage?: string = '';\n  /**\n   * Indicated to pass an feeback to user.\n   */\n  @Prop({ mutable: true }) successMessage?: string = '';\n  /**\n   * Indicated to pass a help to the user in complex filling.\n   */\n  @Prop() helperMessage?: string = '';\n\n  /**\n   * Placeholder for native input element.\n   */\n  @Prop() placeholder?: string = '';\n\n  /**\n   * Add state danger on input, use for use feedback. If true avoid save confirmation.\n   */\n  @Prop({ mutable: true, reflect: true }) danger?: boolean = false;\n  /**\n   * Add state success on input, use for use feedback.\n   */\n  @Prop({ reflect: true, mutable: true }) success?: boolean = false;\n  /**\n   * Data test is the prop to specifically test the component action object.\n   * dtButtonEdit is the data-test to button edit.\n   */\n  @Prop() dtButtonEdit?: string = null;\n  /**\n   * Data test is the prop to specifically test the component action object.\n   * dtButtonClose is the data-test to button close.\n   */\n  @Prop() dtButtonClose?: string = null;\n  /**\n   * Data test is the prop to specifically test the component action object.\n   * dtButtonConfirm is the data-test to button confirm.\n   */\n  @Prop() dtButtonConfirm?: string = null;\n  /**\n   * Emitted when input text confirm.\n   */\n  @Event() bdsInputEditableSave: EventEmitter<InputEditableEventDetail>;\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter<InputEditableEventDetail>;\n\n  /**\n   * Emitted when the input has changed.\n   */\n  @Event() bdsInput!: EventEmitter<KeyboardEvent>;\n\n  /**\n   * Emitted when the selection is cancelled.\n   */\n  @Event() bdsCancel!: EventEmitter<void>;\n\n  /**\n   * Emitted when the select loses focus.\n   */\n  @Event() bdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the select loses focus.\n   */\n  @Event() bdsBlur!: EventEmitter<void>;\n\n  private handleEditing = (): void => {\n    this.toggleEditing();\n  };\n\n  private toggleEditing = (): void => {\n    this.isEditing = !this.isEditing;\n  };\n\n  componentWillLoad() {\n    this.oldValue = this.value;\n  }\n\n  private handleSaveText = (): void => {\n    const newValue = this.nativeInput.value;\n    if (newValue.length > 0 && newValue.length >= this.minlength && !this.danger) {\n      this.bdsInputEditableSave.emit({ value: newValue, oldValue: this.oldValue });\n      this.oldValue = newValue;\n      this.value = newValue;\n      this.toggleEditing();\n    }\n  };\n\n  private changedInputValue = async (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    this.checkValidity();\n    if (input) {\n      if (input.value.length < Number(this.minlength)) {\n        this.isValid = false;\n      } else {\n        this.isValid = true;\n      }\n    }\n    this.bdsInput.emit(ev as KeyboardEvent);\n    this.bdsChange.emit({ value: this.nativeInput.value, oldValue: this.oldValue });\n  };\n\n  private onFocus = (): void => {\n    this.isFocused = true;\n    this.isPressed = true;\n    this.bdsFocus.emit();\n  };\n\n  private onBlur = (): void => {\n    this.onBlurValidations();\n    this.bdsBlur.emit();\n    this.isPressed = false;\n  };\n\n  private onClickWrapper = (): void => {\n    this.onFocus();\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  };\n\n  private onBlurValidations() {\n    this.requiredValidation();\n    (this.minlength || this.maxlength) && this.lengthValidation();\n    this.checkValidity();\n  }\n\n  private requiredValidation() {\n    if (this.nativeInput.validity.valueMissing) {\n      this.validationMesage = this.requiredErrorMessage;\n      this.validationDanger = true;\n    }\n  }\n\n  private lengthValidation() {\n    if (this.nativeInput.validity.tooShort) {\n      this.validationMesage = this.minlengthErrorMessage;\n      this.validationDanger = true;\n      return;\n    }\n\n    if (this.nativeInput.validity.tooLong) {\n      this.validationDanger = true;\n      return;\n    }\n  }\n\n  private checkValidity() {\n    if (this.nativeInput.validity.valid) {\n      this.validationDanger = false;\n    }\n  }\n\n  private handleKeyDownToggle(event) {\n    if (event.key == 'Enter') {\n      this.toggleEditing();\n    }\n  }\n\n  private handleKeyDownSave(event) {\n    if (event.key == 'Enter') {\n      this.handleSaveText();\n    }\n  }\n\n  getFontSizeClass(): FontSize {\n    if (this.size == 'short') {\n      return 'fs-16';\n    } else if (this.size == 'standard') {\n      return 'fs-24';\n    } else if (this.size == 'tall') {\n      return 'fs-40';\n    } else {\n      return 'fs-24';\n    }\n  }\n  private getExpand = (): string => {\n    if (this.expand) {\n      return 'expanded';\n    } else {\n      return 'fixed';\n    }\n  };\n  private renderMessage(): HTMLElement {\n    const icon = this.danger ? 'error' : this.success ? 'checkball' : 'info';\n    let message = this.danger ? this.errorMessage : this.success ? this.successMessage : this.helperMessage;\n\n    if (!message && this.validationDanger) message = this.validationMesage;\n\n    const styles =\n      this.danger || this.validationDanger\n        ? 'input__message input__message--danger'\n        : this.success\n          ? 'input__message input__message--success'\n          : 'input__message';\n\n    if (message) {\n      return (\n        <div class={styles} part=\"input__message\">\n          <div class=\"input__message__icon\">\n            <bds-icon size=\"x-small\" name={icon} theme=\"solid\" color=\"inherit\"></bds-icon>\n          </div>\n          <bds-typo class=\"input__message__text\" variant=\"fs-12\">\n            {message}\n          </bds-typo>\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n  render() {\n    const variant = this.getFontSizeClass();\n    const inputExpand = this.getExpand();\n    return (\n      <Host>\n        <div class=\"input__editable\">\n          <div\n            class={{ 'input__editable--static': true, 'input__editable--hidden': this.isEditing }}\n            onClick={this.handleEditing}\n            data-test={this.dtButtonEdit}\n            tabindex=\"0\"\n            onKeyDown={this.handleKeyDownToggle.bind(this)}\n          >\n            <bds-typo\n              tag=\"span\"\n              part=\"input__editable--static__typo\"\n              class=\"input__editable--static__typo\"\n              variant={variant}\n            >\n              {this.value}\n            </bds-typo>\n            <bds-icon key=\"edit-icon\" class=\"input__editable--static__icon\" name=\"edit\"></bds-icon>\n          </div>\n          <div class={{ 'input__editable--active': true, 'input__editable--hidden': !this.isEditing }}>\n            <div class={{ element_input: true, [inputExpand]: true, [this.size]: true }}>\n              <div\n                class={{\n                  input: true,\n                  select: true,\n                  'input--state-primary': !this.danger && !this.validationDanger,\n                  'input--state-danger': this.danger || this.validationDanger,\n                  'input--state-success': this.success,\n                  'input--pressed': this.isPressed,\n                }}\n                onClick={this.onClickWrapper}\n              >\n                <div class=\"input__container\">\n                  <input\n                    class={{ input__container__text: true }}\n                    ref={(input) => (this.nativeInput = input)}\n                    minLength={this.minlength}\n                    maxLength={this.maxlength}\n                    name={this.inputName}\n                    onBlur={this.onBlur}\n                    onFocus={this.onFocus}\n                    onInput={this.changedInputValue}\n                    placeholder={this.placeholder}\n                    value={this.value}\n                    required={true}\n                    part=\"input\"\n                    data-test={this.dataTest}\n                  ></input>\n                </div>\n                {this.success && <bds-icon class=\"icon-success\" name=\"checkball\" theme=\"solid\" size=\"xxx-small\" />}\n              </div>\n              {this.renderMessage()}\n            </div>\n            <div class=\"input__editable--active__icon\">\n              <bds-icon\n                key=\"error-icon\"\n                class=\"input__editable--active__icon--error\"\n                theme=\"solid\"\n                name=\"error\"\n                onClick={this.handleEditing}\n                tabindex=\"0\"\n                onKeyDown={this.handleKeyDownToggle.bind(this)}\n                dataTest={this.dtButtonClose}\n              ></bds-icon>\n              <bds-icon\n                key=\"checkball-icon\"\n                class={{\n                  'input__editable--active__icon--checkball': true,\n                  'input__editable--active__icon--checkball--error': !this.isValid,\n                }}\n                theme=\"solid\"\n                name=\"checkball\"\n                onClick={this.handleSaveText}\n                tabindex=\"0\"\n                onKeyDown={this.handleKeyDownSave.bind(this)}\n                dataTest={this.dtButtonConfirm}\n              ></bds-icon>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}