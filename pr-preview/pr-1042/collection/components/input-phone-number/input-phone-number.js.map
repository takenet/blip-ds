{"version":3,"file":"input-phone-number.js","sourceRoot":"","sources":["../../../../src/components/input-phone-number/input-phone-number.tsx"],"names":[],"mappings":"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":["import { Component, h, State, Prop, EventEmitter, Event, Method, Watch, Element, Listen, Host } from '@stencil/core';\nimport { Option } from '../selects/select-interface';\nimport { numberValidation } from '../../utils/validations';\nimport * as countriesDefault from './countries.json';\nimport * as countriesPtBR from './countries-pt_BR.json';\nimport * as countriesEnUS from './countries-en_US.json';\nimport * as countriesEsES from './countries-es_ES.json';\n\nexport type languages = 'pt_BR' | 'es_ES' | 'en_US';\n@Component({\n  tag: 'bds-input-phone-number',\n  styleUrl: 'input-phone-number.scss',\n  shadow: true,\n})\nexport class InputPhoneNumber {\n  private nativeInput?: HTMLInputElement;\n\n  @Element() el!: HTMLBdsSelectElement;\n\n  @State() isOpen? = false;\n  @State() selectedCountry: string;\n  @State() isoCode: string;\n  @State() validationDanger? = false;\n  @State() validationMesage? = '';\n  @State() isPressed? = false;\n\n  /**\n   * Lista de opções do select.\n   */\n  @Prop() options?: Array<Option> = [];\n\n  /**\n   * Valor do input de telefone.\n   */\n  @Prop() text? = '';\n\n  /**\n   * Valor do select.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Prop({ mutable: true }) value?: string | null = '+55';\n\n  /**\n   * Habilita o estado \"danger\" no input.\n   */\n  @Prop({ mutable: true, reflect: true }) danger? = false;\n  /**\n   * Habilita o estado \"success\" no input.\n   */\n  @Prop({ reflect: true, mutable: true }) success?: boolean = false;\n  /**\n   * Desabilita o input.\n   */\n  @Prop({ reflect: true }) disabled? = false;\n\n  /**\n   * Se `true`, o valor do input será obrigatório.\n   */\n  @Prop() required: boolean;\n\n  /**\n   * Mensagem de ajuda para o usuário.\n   */\n  @Prop() helperMessage?: string = '';\n  /**\n   * Mensagem de erro a ser exibida.\n   */\n  @Prop({ mutable: true }) errorMessage?: string = '';\n  /**\n   * Mensagem de sucesso a ser exibida.\n   */\n  @Prop({ mutable: true }) successMessage?: string = '';\n  /**\n   * Mensagem de erro para campo obrigatório.\n   */\n  @Prop() requiredErrorMessage: string;\n  /**\n   * Mensagem de erro para validação numérica.\n   */\n  @Prop() numberErrorMessage: string;\n\n  /**\n   * Data-test para identificar o componente.\n   */\n  @Prop() dataTest?: string = null;\n  /**\n   * Data-test para o botão de seleção de bandeira.\n   */\n  @Prop() dtSelectFlag?: string = null;\n\n  /**\n   * Evento disparado quando o valor é alterado.\n   */\n  @Event({ bubbles: true, composed: true }) bdsPhoneNumberChange!: EventEmitter;\n  /**\n   * Evento disparado quando o input sofre alteração.\n   */\n  @Event() bdsInput!: EventEmitter<KeyboardEvent>;\n  /**\n   * Evento disparado quando a seleção é cancelada.\n   */\n  @Event() bdsCancel!: EventEmitter<void>;\n  /**\n   * Evento disparado quando o select ganha foco.\n   */\n  @Event() bdsFocus!: EventEmitter<void>;\n  /**\n   * Evento disparado quando o select perde o foco.\n   */\n  @Event() bdsBlur!: EventEmitter<void>;\n\n  /**\n   * Label do input.\n   */\n  @Prop() label? = 'Phone number';\n  /**\n   * Ícone à esquerda do input.\n   */\n  @Prop({ reflect: true }) icon?: string = '';\n  /**\n   * Valores possíveis: \"pt_BR\", \"en_US\", \"es_ES\".\n   * Se nenhum for informado, utiliza o arquivo padrão (countries.json).\n   */\n  @Prop({ mutable: true }) language?: languages = 'pt_BR';\n\n  private countries: any = {};\n\n  @Method()\n  async removeFocus(): Promise<void> {\n    this.onBlur();\n  }\n\n  @Watch('value')\n  valueChanged(): void {\n    for (const option of this.childOptions) {\n      option.selected = this.value === option.value;\n    }\n  }\n\n  @Listen('mousedown', { target: 'window', passive: true })\n  handleWindow(ev: Event) {\n    if (!this.el.contains(ev.target as HTMLInputElement)) {\n      this.isOpen = false;\n    }\n  }\n\n  @Watch('language')\n  languageChanged() {\n    this.updateCountries();\n  }\n\n  private updateCountries() {\n    switch (this.language) {\n      case 'pt_BR':\n        this.countries = countriesPtBR['default'];\n        break;\n      case 'en_US':\n        this.countries = countriesEnUS['default'];\n        break;\n      case 'es_ES':\n        this.countries = countriesEsES['default'];\n        break;\n      default:\n        this.countries = countriesDefault['default'];\n        break;\n    }\n\n    const flagsNames = Object.keys(this.countries);\n  \n    const countryIndex = Object.values(this.countries).findIndex((country: any) => country.code === this.value);\n  \n    if (countryIndex !== -1) {\n      this.selectedCountry = flagsNames[countryIndex];\n    } else {\n      this.selectedCountry = this.selectedCountry || flagsNames[0];\n    }\n    this.isoCode = this.isoCode || flagsNames[0];\n  }\n\n  componentWillRender() {\n    this.updateCountries();\n  }\n\n  private get childOptions(): HTMLBdsSelectOptionElement[] {\n    return Array.from(this.el.querySelectorAll('bds-select-option'));\n  }\n\n  private refNativeInput = (el: HTMLInputElement): void => {\n    this.nativeInput = el;\n  };\n\n  private onClickWrapper = (): void => {\n    this.onFocus();\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  };\n\n  private onFocus = (): void => {\n    this.bdsFocus.emit();\n    this.isPressed = true;\n  };\n\n  private onBlur = (): void => {\n    this.bdsBlur.emit();\n    this.isPressed = false;\n  };\n\n  private changedInputValue = async (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    this.checkValidity();\n    if (input) {\n      this.text = input.value || '';\n      this.numberValidation();\n    }\n    this.bdsInput.emit(ev as KeyboardEvent);\n  };\n\n  @Watch('text')\n  protected handleInputChange(): void {\n    this.bdsPhoneNumberChange.emit({\n      value: this.text,\n      code: this.value,\n      isoCode: this.isoCode,\n      country: this.selectedCountry,\n    });\n  }\n\n  private numberValidation() {\n    if (numberValidation(this.nativeInput.value)) {\n      this.validationMesage = this.numberErrorMessage;\n      this.validationDanger = true;\n    } else {\n      this.validationDanger = false;\n    }\n  }\n\n  private toggle = (): void => {\n    if (!this.disabled) {\n      this.isOpen = !this.isOpen;\n    }\n  };\n\n  private handleKeyDown(event) {\n    if (event.key == 'Enter') {\n      this.toggle();\n    }\n  }\n\n  private handler = (event: CustomEvent): void => {\n    const { value } = event.detail;\n    this.value = value.code;\n    this.selectedCountry = value.flag;\n    this.isoCode = value.isoCode;\n    this.bdsPhoneNumberChange.emit({\n      value: this.text,\n      code: this.value,\n      isoCode: this.isoCode,\n      country: this.selectedCountry,\n    });\n    this.toggle();\n  };\n\n  @Method()\n  async changeCountry(code, isoCode, flag) {\n    this.value = code;\n    this.selectedCountry = flag;\n    this.isoCode = isoCode;\n    this.bdsPhoneNumberChange.emit({\n      value: this.text,\n      code: this.value,\n      isoCode: this.isoCode,\n      country: this.selectedCountry,\n    });\n  }\n\n  private keyPressWrapper = (event: KeyboardEvent): void => {\n    const isSelectElement = (event.target as Element).localName === 'bds-select';\n    const isInputElement = (event.target as Element).localName === 'input';\n\n    if (event.key === 'Enter' && !this.isOpen && (isSelectElement || isInputElement)) {\n      this.toggle();\n    }\n  };\n\n  private checkValidity() {\n    if (this.nativeInput.validity.valid) {\n      this.validationDanger = false;\n    }\n  }\n\n  private renderIcon(): HTMLElement {\n    return (\n      this.icon && (\n        <div\n          class={{\n            input__icon: true,\n            'input__icon--large': !!this.label,\n          }}\n        >\n          <bds-icon size={this.label ? 'medium' : 'small'} name={this.icon} color=\"inherit\"></bds-icon>\n        </div>\n      )\n    );\n  }\n\n  private renderLabel(): HTMLElement {\n    return (\n      this.label && (\n        <label\n          class={{\n            input__container__label: true,\n            'input__container__label--pressed': this.isPressed && !this.disabled,\n          }}\n        >\n          <bds-typo variant=\"fs-12\" bold=\"bold\">\n            {this.label}\n          </bds-typo>\n        </label>\n      )\n    );\n  }\n\n  private renderMessage(): HTMLElement {\n    const icon = this.danger ? 'error' : this.success ? 'checkball' : 'info';\n    let message = this.danger ? this.errorMessage : this.success ? this.successMessage : this.helperMessage;\n\n    if (!message && this.validationDanger) message = this.validationMesage;\n\n    const styles =\n      this.danger || this.validationDanger\n        ? 'input__message input__message--danger'\n        : this.success\n          ? 'input__message input__message--success'\n          : 'input__message';\n\n    return message ? (\n      <div class={styles} part=\"input__message\">\n        <div class=\"input__message__icon\">\n          <bds-icon size=\"x-small\" name={icon} theme=\"outline\" color=\"inherit\"></bds-icon>\n        </div>\n        <bds-typo class=\"input__message__text\" variant=\"fs-12\">\n          {message}\n        </bds-typo>\n      </div>\n    ) : null;\n  }\n\n  render(): HTMLElement {\n    const isPressed = this.isPressed && !this.disabled;\n    const iconArrow = this.isOpen ? 'arrow-up' : 'arrow-down';\n    const flagsNames = Object.keys(this.countries);\n\n    return (\n      <Host aria-disabled={this.disabled ? 'true' : null}>\n        <div class={{ element_input: true }} aria-disabled={this.disabled ? 'true' : null}>\n          <div\n            class={{\n              input: true,\n              'input--state-primary': !this.danger && !this.validationDanger,\n              'input--state-danger': this.danger || this.validationDanger,\n              'input--state-success': this.success,\n              'input--state-disabled': this.disabled,\n              'input--label': !!this.label,\n              'input--pressed': isPressed,\n            }}\n            onClick={this.onClickWrapper}\n            onKeyDown={this.keyPressWrapper}\n            part=\"input-container\"\n          >\n            {this.renderIcon()}\n            <div\n              onClick={this.toggle}\n              onKeyDown={this.handleKeyDown.bind(this)}\n              data-test={this.dtSelectFlag}\n              class=\"input__icon\"\n              tabindex=\"0\"\n            >\n              <bds-icon size=\"medium\" theme=\"solid\" name={this.selectedCountry} color=\"primary\"></bds-icon>\n              <bds-icon size=\"x-small\" name={iconArrow}></bds-icon>\n            </div>\n            <div class=\"input__container\">\n              {this.renderLabel()}\n              <div class={{ input__container__wrapper: true }}>\n                <div class=\"input__container__country-code\">\n                  <bds-typo no-wrap=\"true\" variant=\"fs-14\">\n                    {this.value}\n                  </bds-typo>\n                </div>\n                <input\n                  class={{ input__container__text: true }}\n                  type=\"phonenumber\"\n                  required={this.required}\n                  pattern=\"/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/\"\n                  ref={this.refNativeInput}\n                  onInput={this.changedInputValue}\n                  onFocus={this.onFocus}\n                  onBlur={this.onBlur}\n                  value={this.text}\n                  disabled={this.disabled}\n                  data-test={this.dataTest}\n                  {...{ maxlength: this.value === '+55' ? 25 : null }}\n                ></input>\n              </div>\n            </div>\n            {this.success && <bds-icon class=\"icon-success\" name=\"check\" theme=\"outline\" size=\"xxx-small\" />}\n            <slot name=\"input-right\" />\n          </div>\n          {this.renderMessage()}\n        </div>\n        <div\n          class={{\n            'select-phone-number__options': true,\n            'select-phone-number__options--open': this.isOpen,\n          }}\n        >\n          {this.isOpen &&\n            flagsNames.map((flag) => (\n              <bds-select-option\n                key={flag}\n                onOptionSelected={this.handler}\n                selected={flag === this.selectedCountry}\n                value={{ code: this.countries[flag].code, isoCode: this.countries[flag].isoCode, flag }}\n                status={this.countries[flag].isoCode}\n              >\n                {this.countries[flag].name} {this.countries[flag].code}\n              </bds-select-option>\n            ))}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}