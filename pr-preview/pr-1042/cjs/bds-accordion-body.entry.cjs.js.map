{"version":3,"file":"bds-accordion-body.entry.cjs.js","sources":["src/components/accordion/accordion.scss?tag=bds-accordion-body&encapsulation=shadow","src/components/accordion/accordion-body.tsx"],"sourcesContent":["@import 'resets';\n@import 'mixins';\n\n.accordion_header {\n  display: flex;\n  grid-auto-flow: column;\n  gap: 24px;\n  justify-content: start;\n  align-items: center;\n  padding: 24px;\n  padding-right: 56px;\n  position: relative;\n  color: $color-content-default;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    z-index: 0;\n  }\n\n  slot {\n    display: flex;\n    width: 100%;\n    flex-shrink: 99999;\n  }\n\n  & * {\n    position: relative;\n    z-index: 1;\n  }\n\n  &:hover {\n    &::before {\n      background-color: $color-content-default;\n      opacity: 0.08;\n    }\n  }\n\n  & .accButton {\n    position: absolute;\n    right: 24px;\n    top: calc(50% - 16px);\n    border-radius: 8px;\n    contain: inherit;\n    -webkit-transition:\n      height 0.5s,\n      all 0.3s;\n    -moz-transition:\n      height 0.5s,\n      all 0.3s;\n    transition:\n      height 0.5s,\n      all 0.3s;\n    z-index: 1;\n\n    &__isopen {\n      transform: rotate(180deg);\n    }\n\n    &::before {\n      content: '';\n      position: absolute;\n      inset: -4px;\n      border: 2px solid transparent;\n      border-radius: 4px;\n    }\n\n    &:focus-visible {\n      outline: none;\n\n      &::before {\n        border-color: $color-focus;\n      }\n    }\n\n    &:hover {\n      background-color: $color-surface-1;\n    }\n    &:active {\n      background-color: $color-surface-1;\n    }\n  }\n}\n\n.accordion_body {\n  height: 0;\n  overflow: hidden;\n  border-bottom: none;\n  -webkit-transition: height 0.5s;\n  -moz-transition: height 0.5s;\n  transition: height 0.5s;\n  @include custom-scroll;\n\n  &_isOpen {\n    overflow: overlay;\n  }\n\n  &_divisor {\n    border-bottom: 1px solid $color-border-1;\n  }\n\n  & .container {\n    padding: 8px 24px 48px;\n    position: relative;\n    color: $color-content-default;\n  }\n}\n","import { Component, State, h, Method, Prop, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'bds-accordion-body',\n  styleUrl: 'accordion.scss',\n  shadow: true,\n})\nexport class AccordionBody {\n  private container?: HTMLElement = null;\n\n  @State() isOpen?: boolean = false;\n  @State() isOpenAftAnimation?: boolean = false;\n  @State() heightContainer?: number;\n  @State() numberElement?: number = null;\n  @State() hasDivisor?: boolean = true;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  @Method()\n  async toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  @Method()\n  async open() {\n    this.isOpen = true;\n  }\n\n  @Method()\n  async close() {\n    this.isOpen = false;\n  }\n\n  @Method()\n  async divisor(valor) {\n    this.hasDivisor = valor;\n  }\n\n  @Watch('isOpen')\n  isOpenChanged(): void {\n    this.heightContainer = this.isOpen ? this.container.offsetHeight : 0;\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.isOpenAftAnimation = !this.isOpenAftAnimation;\n      }, 500);\n    } else {\n      this.isOpenAftAnimation = !this.isOpenAftAnimation;\n    }\n  }\n\n  private refContainer = (el: HTMLElement): void => {\n    this.container = el;\n  };\n\n  render() {\n    return (\n      <div\n        class={{\n          accordion_body: true,\n          accordion_body_divisor: this.hasDivisor,\n          accordion_body_isOpen: this.isOpenAftAnimation,\n        }}\n        style={{ height: `${this.heightContainer}px` }}\n        data-test={this.dataTest}\n      >\n        <div class=\"container\" ref={(el) => this.refContainer(el)}>\n          <slot></slot>\n        </div>\n      </div>\n    );\n  }\n}\n"],"names":["h"],"mappings":";;;;AAAA,MAAM,YAAY,GAAG,4lEAA4lE;;MCOpmE,aAAa,GAAA,MAAA;AAL1B,IAAA,WAAA,CAAA,OAAA,EAAA;;AAMU,QAAA,IAAS,CAAA,SAAA,GAAiB,IAAI;AAE7B,QAAA,IAAM,CAAA,MAAA,GAAa,KAAK;AACxB,QAAA,IAAkB,CAAA,kBAAA,GAAa,KAAK;AAEpC,QAAA,IAAa,CAAA,aAAA,GAAY,IAAI;AAC7B,QAAA,IAAU,CAAA,UAAA,GAAa,IAAI;AAEpC;;AAEG;AACK,QAAA,IAAQ,CAAA,QAAA,GAAY,IAAI;AAkCxB,QAAA,IAAA,CAAA,YAAY,GAAG,CAAC,EAAe,KAAU;AAC/C,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE;AACrB,SAAC;AAmBF;AApDC,IAAA,MAAM,MAAM,GAAA;AACV,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM;;AAI5B,IAAA,MAAM,IAAI,GAAA;AACR,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI;;AAIpB,IAAA,MAAM,KAAK,GAAA;AACT,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK;;IAIrB,MAAM,OAAO,CAAC,KAAK,EAAA;AACjB,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK;;IAIzB,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,CAAC;AACpE,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,MAAK;AACd,gBAAA,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB;aACnD,EAAE,GAAG,CAAC;;aACF;AACL,YAAA,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB;;;IAQtD,MAAM,GAAA;QACJ,QACEA,OACE,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,IAAI;gBACpB,sBAAsB,EAAE,IAAI,CAAC,UAAU;gBACvC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB;AAC/C,aAAA,EACD,KAAK,EAAE,EAAE,MAAM,EAAE,CAAA,EAAG,IAAI,CAAC,eAAe,CAAA,EAAA,CAAI,EAAE,EACnC,WAAA,EAAA,IAAI,CAAC,QAAQ,EAAA,EAExBA,OAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,WAAW,EAAC,GAAG,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAA,EACvDA,OAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACT,CACF;;;;;;;;;;"}