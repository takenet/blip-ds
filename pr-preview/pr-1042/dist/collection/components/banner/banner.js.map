{"version":3,"file":"banner.js","sourceRoot":"","sources":["../../../../src/components/banner/banner.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Host,\n  h,\n  ComponentInterface,\n  Prop,\n  State,\n  Method,\n  Event,\n  EventEmitter,\n  Element,\n} from '@stencil/core';\n\nexport type BannerVariant = 'system' | 'warning' | 'info' | 'error' | 'success';\nexport type BannerAlign = 'left' | 'right' | 'center';\nexport type ButtonClose = 'true' | 'false';\nexport type Link = 'true' | 'false';\nexport type Context = 'inside' | 'outside';\n@Component({\n  tag: 'bds-banner',\n  styleUrl: 'banner.scss',\n  shadow: true,\n})\nexport class Banner implements ComponentInterface {\n  @Element() el: HTMLBdsBannerElement;\n  @State() visible = true;\n  /**\n   * Set the banner aligment, it can be one of: 'center', 'right' or 'left'.\n   */\n  @Prop() bannerAlign?: BannerAlign = 'center';\n  /**\n   * Set if show up the close button.\n   */\n  @Prop() buttonClose?: ButtonClose = 'false';\n  /**\n   * Set if the banner is external or internal.\n   */\n  @Prop() context?: Context = 'outside';\n  /**\n   * Set the banner varient, it can be 'system' or 'warning'.\n   */\n  @Prop() variant?: BannerVariant = 'system';\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   * dtButtonClose is the data-test to button close.\n   */\n  @Prop() dtButtonClose?: string = null;\n  /**\n   * Emitted when the banner is closed.\n   */\n  @Event() bdsBannerClose!: EventEmitter<void>;\n  @Method()\n  async toggle() {\n    this.visible = !this.visible;\n  }\n\n  private _buttonClickHandler = () => {\n    this.bdsBannerClose.emit();\n    this.visible = false;\n  };\n\n  render() {\n    return (\n      <Host class={{ banner: true, 'banner--hide': !this.visible }}>\n        <div\n          class={{\n            banner__holder: true,\n            [`banner__holder--align--${this.bannerAlign}`]: true,\n            [`banner__holder--${this.variant}`]: true,\n            [`banner__holder--context--${this.context}`]: true,\n          }}\n        >\n          <div\n            class={{\n              banner__content: true,\n            }}\n          >\n            {this.variant === 'warning' && (\n              <bds-icon class=\"icon_left\" theme=\"outline\" size=\"medium\" name=\"warning\"></bds-icon>\n            )}\n            {this.variant === 'system' && (\n              <bds-icon class=\"icon_left\" theme=\"outline\" size=\"medium\" name=\"info\"></bds-icon>\n            )}\n            {this.variant === 'info' && (\n              <bds-icon class=\"icon_left\" theme=\"outline\" size=\"medium\" name=\"message-ballon\"></bds-icon>\n            )}\n            {this.variant === 'error' && (\n              <bds-icon class=\"icon_left\" theme=\"outline\" size=\"medium\" name=\"error\"></bds-icon>\n            )}\n            {this.variant === 'success' && (\n              <bds-icon class=\"icon_left\" theme=\"outline\" size=\"medium\" name=\"checkball\"></bds-icon>\n            )}\n            <div class=\"slot\">\n              <slot></slot>\n            </div>\n          </div>\n          <div\n            class={{\n              banner__action: true,\n            }}\n          >\n            {this.buttonClose === 'true' && (\n              <div class=\"close\" onClick={() => this._buttonClickHandler()}>\n                <bds-button-icon\n                  dataTest={this.dtButtonClose}\n                  icon=\"close\"\n                  size=\"short\"\n                  variant=\"secondary\"\n                ></bds-button-icon>\n              </div>\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}