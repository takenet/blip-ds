{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../../../src/components/menu/menu.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAsB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AACxH,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;AAShF,MAAM,OAAO,OAAO;IALpB;QAQW,eAAU,GAAiB,IAAI,CAAC;QAChC,aAAQ,GAAiB,IAAI,CAAC;QAC9B,oBAAe,GAAY,CAAC,CAAC;QAC7B,qBAAgB,GAAY,CAAC,CAAC;QACvC;;WAEG;QACK,SAAI,GAAY,IAAI,CAAC;QAC7B;;WAEG;QACK,aAAQ,GAAkB,OAAO,CAAC;QAC1C;;WAEG;QAKI,SAAI,GAAa,KAAK,CAAC;QA+BtB,mBAAc,GAAG,CAAC,EAAe,EAAQ,EAAE;YACjD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACxB,CAAC,CAAC;QAEM,uBAAkB,GAAG,CAAC,KAAK,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC,CAAC;KAyBH;IAxDC,iBAAiB;QACf,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAGD,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAGS,QAAQ;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,aAAa,GAAG,eAAe,CAAC;gBACpC,aAAa,EAAE,IAAI,CAAC,UAAU;gBAC9B,cAAc,EAAE,IAAI,CAAC,WAAW;gBAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,GAAG,CAAC;YACzC,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC,IAAI,CAAC;QAC7C,CAAC;IACH,CAAC;IAWD,MAAM;QACJ,MAAM,YAAY,GAAG;YACnB,GAAG,EAAE,GAAG,IAAI,CAAC,eAAe,IAAI;YAChC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,IAAI;SACnC,CAAC;QAEF,OAAO,CACL,EAAC,IAAI;YACH,4DACE,GAAG,EAAE,IAAI,CAAC,cAAc,EACxB,KAAK,EAAE;oBACL,IAAI,EAAE,IAAI;oBACV,CAAC,SAAS,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI;oBAChC,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,IAAI;iBAC1B,EACD,KAAK,EAAE,YAAY;gBAEnB,8DAAa,CACT;YACL,IAAI,CAAC,IAAI,IAAI,4DAAK,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAQ,CAC5F,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, ComponentInterface, h, State, Method, Prop, Event, EventEmitter, Watch } from '@stencil/core';\nimport { getScrollParent, positionElement } from '../../utils/position-element';\n\nexport type menuPosition = 'bottom' | 'right';\n\n@Component({\n  tag: 'bds-menu',\n  styleUrl: 'menu.scss',\n  shadow: true,\n})\nexport class BdsMenu implements ComponentInterface {\n  private menuElement?: HTMLElement;\n\n  @State() refElement?: HTMLElement = null;\n  @State() intoView?: HTMLElement = null;\n  @State() menupositionTop?: number = 0;\n  @State() menupositionLeft?: number = 0;\n  /**\n   * Menu. Used to link the minus with the action button.\n   */\n  @Prop() menu?: string = null;\n  /**\n   * Position. Used to position the Menu. Either on the left or on the bottom.\n   */\n  @Prop() position?: menuPosition = 'right';\n  /**\n   * Open. Used to open/close the menu.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  })\n  public open?: boolean = false;\n\n  /**\n   * bdsToggle. Event to return selected date value.\n   */\n  @Event() bdsToggle?: EventEmitter<{ value?: boolean }>;\n\n  componentWillLoad() {\n    this.refElement = document.getElementById(this.menu);\n    this.intoView = getScrollParent(this.refElement);\n  }\n\n  @Method()\n  async toggle() {\n    this.open = !this.open;\n  }\n\n  @Watch('open')\n  protected openMenu() {\n    this.bdsToggle.emit({ value: this.open });\n    if (this.open) {\n      const positionValue = positionElement({\n        actionElement: this.refElement,\n        changedElement: this.menuElement,\n        intoView: this.intoView,\n      });\n      this.menupositionTop = positionValue.top;\n      this.menupositionLeft = positionValue.left;\n    }\n  }\n\n  private refMenuElement = (el: HTMLElement): void => {\n    this.menuElement = el;\n  };\n\n  private onClickCloseButtom = (event) => {\n    this.open = false;\n    event.stopPropagation();\n  };\n\n  render() {\n    const menuPosition = {\n      top: `${this.menupositionTop}px`,\n      left: `${this.menupositionLeft}px`,\n    };\n\n    return (\n      <Host>\n        <div\n          ref={this.refMenuElement}\n          class={{\n            menu: true,\n            [`menu__${this.position}`]: true,\n            [`menu__open`]: this.open,\n          }}\n          style={menuPosition}\n        >\n          <slot></slot>\n        </div>\n        {this.open && <div class={{ outzone: true }} onClick={(ev) => this.onClickCloseButtom(ev)}></div>}\n      </Host>\n    );\n  }\n}\n"]}