{"version":3,"file":"tab-item.js","sourceRoot":"","sources":["../../../../../src/components/tabs/tab-item/tab-item.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAO7F,MAAM,OAAO,UAAU;IALvB;QAME;;WAEG;QAC4C,kBAAa,GAAY,IAAI,CAAC;QAC7E;;WAEG;QACK,UAAK,GAAY,IAAI,CAAC;QAC9B;;WAEG;QACK,SAAI,GAAY,IAAI,CAAC;QAC7B;;WAEG;QACK,iBAAY,GAAY,MAAM,CAAC;QACvC;;WAEG;QACK,cAAS,GAAY,SAAS,CAAC;QACvC;;WAEG;QACK,UAAK,GAAa,KAAK,CAAC;QAChC;;WAEG;QACK,eAAU,GAAY,QAAQ,CAAC;QACvC;;WAEG;QACK,eAAU,GAAY,QAAQ,CAAC;QACvC;;WAEG;QACK,cAAS,GAAY,IAAI,CAAC;QAClC;;WAEG;QACK,mBAAc,GAAa,KAAK,CAAC;QACzC;;WAEG;QACK,kBAAa,GAAY,MAAM,CAAC;QACxC;;WAEG;QACK,gBAAW,GAAY,IAAI,CAAC;QACpC;;WAEG;QACqC,YAAO,GAAa,KAAK,CAAC;QAClE;;WAEG;QAC4C,SAAI,GAAa,KAAK,CAAC;QACtE;;WAEG;QACK,aAAQ,GAAY,IAAI,CAAC;KAwBlC;IArBC,KAAK,CAAC,YAAY,CAAC,MAAM;QACvB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC9B,CAAC;IAID,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE;YACrE,4DAAK,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,eAAa,IAAI,CAAC,QAAQ;gBACtD,4DAAK,KAAK,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,wBAAwB,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE;oBAC3E,8DAAa,CACT,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, Prop, Method, Watch, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'bds-tab-item',\n  styleUrl: 'tab-item.scss',\n  shadow: true,\n})\nexport class BdsTabItem {\n  /**\n   * Use to set number of tabItem.\n   */\n  @Prop({ mutable: true, reflect: true }) public numberElement?: number = null;\n  /**\n   * The text to be shown at the Tab item.\n   */\n  @Prop() label?: string = null;\n  /**\n   * The icon to be shown at the Tab item.\n   */\n  @Prop() icon?: string = null;\n  /**\n   * The position of the icon at the Tab item ('left', 'right').\n   */\n  @Prop() iconPosition?: string = 'left';\n  /**\n   * The theme of the icon at the Tab item ('solid', 'outline', 'emoji', 'logos').\n   */\n  @Prop() iconTheme?: string = 'outline';\n  /**\n   * The shape of the badge to be shown at the Tab item ('circle', 'square', 'triangle', 'triangle-reverse', 'polygon').\n   */\n  @Prop() badge?: boolean = false;\n  /**\n   * The shape of the badge to be shown at the Tab item ('circle', 'square', 'triangle', 'triangle-reverse', 'polygon').\n   */\n  @Prop() badgeShape?: string = 'circle';\n  /**\n   * The color of the badge to be shown at the Tab item.\n   */\n  @Prop() badgeColor?: string = 'system';\n  /**\n   * The icon to be shown inside the badge at the Tab item ('system', 'danger', 'warning', 'success', 'neutral')\n   */\n  @Prop() badgeIcon?: string = null;\n  /**\n   * The animation of the badge to be shown at the Tab item.\n   */\n  @Prop() badgeAnimation?: boolean = false;\n  /**\n   * The animation of the badge to be shown at the Tab item.\n   */\n  @Prop() badgePosition?: string = 'left';\n  /**\n   * The number to be shown inside the badge at the Tab item.\n   */\n  @Prop() badgeNumber?: number = null;\n  /**\n   * Prop for disable the especific tab.\n   */\n  @Prop({ mutable: true, reflect: true }) disable?: boolean = false;\n  /**\n   * Used to open/close the Tab item.\n   */\n  @Prop({ mutable: true, reflect: true }) public open?: boolean = false;\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  @Method()\n  async reciveNumber(number) {\n    this.numberElement = number;\n  }\n  @Event() tabDisabled: EventEmitter;\n\n  @Watch('disable')\n  disableChanged(): void {\n    this.tabDisabled.emit({ item: this.numberElement, disable: this.disable });\n  }\n\n  render(): HTMLElement {\n    return (\n      <Host class={{ [`is-open`]: this.disable === true ? false : this.open }}>\n        <div class={{ tab_item: true }} data-test={this.dataTest}>\n          <div class={{ tab_item_content: true, [`tab_item_content--open`]: this.open }}>\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}