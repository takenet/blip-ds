{"version":3,"file":"tab.js","sourceRoot":"","sources":["../../../../../../src/components/tabs/tab (depreciated)/tab/tab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAoC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAMjH,MAAM,OAAO,GAAG;IAJhB;QAeE;;WAEG;QACK,WAAM,GAAG,KAAK,CAAC;QAEvB;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;KAmC3B;IA1BC,eAAe,CAAC,KAAkB;QAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,OAAO;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QAChD,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE;gBACL,SAAS,EAAE,IAAI;gBACf,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,QAAQ;aACrC,EACD,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;YAEhC,4DAAK,KAAK,EAAC,eAAe;gBACxB,iEAAU,OAAO,EAAC,OAAO,EAAC,IAAI,EAAE,IAAI,IACjC,IAAI,CAAC,KAAK,CACF,CACP,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, ComponentInterface, EventEmitter, Event, h, Prop, Host, Listen, State } from '@stencil/core';\n\n@Component({\n  tag: 'bds-tab',\n  styleUrl: 'tab.scss',\n})\nexport class Tab implements ComponentInterface {\n  /**\n   * Specifies the Tab group. Used to link it to the TabPanel.\n   */\n  @Prop() group!: string;\n\n  /**\n   * The text to be shown at the Tab\n   */\n  @Prop() label!: string;\n\n  /**\n   * Prop to control externally if a tab will be active by default\n   */\n  @Prop() active = false;\n\n  /**\n   * State to control if a tab is current active\n   */\n  @State() isActive = false;\n\n  /**\n   * Event to emmit when the active tab should be updated\n   */\n  @Event() bdsTabChange: EventEmitter<string>;\n\n  @Listen('bdsTabChange', { target: 'body' })\n  @Listen('bdsTabInit', { target: 'body' })\n  handleTabChange(event: CustomEvent) {\n    this.isActive = event.detail == this.group;\n  }\n\n  async onClick() {\n    this.bdsTabChange.emit(this.group);\n  }\n\n  render(): HTMLElement {\n    const bold = this.isActive ? 'bold' : 'regular';\n    return (\n      <Host\n        class={{\n          'bds-tab': true,\n          ['bds-tab--selected']: this.isActive,\n        }}\n        onClick={this.onClick.bind(this)}\n      >\n        <div class=\"bds-tab__text\">\n          <bds-typo variant=\"fs-16\" bold={bold}>\n            {this.label}\n          </bds-typo>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}