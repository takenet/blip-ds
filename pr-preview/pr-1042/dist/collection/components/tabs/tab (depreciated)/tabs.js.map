{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../../src/components/tabs/tab (depreciated)/tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { ScrollDirection, Display, Overflow } from './tabs-interface';\nimport { Component, Element, h, Host, Event, EventEmitter, Listen, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'bds-tabs',\n  styleUrl: 'tabs.scss',\n})\nexport class Tabs {\n  tabsHeaderChildElement: HTMLElement;\n  leftButtonChildElement: HTMLElement;\n  rightButtonChildElement: HTMLElement;\n\n  readonly SCROLL_BEHAVIOR = 'smooth';\n\n  @Element() el!: HTMLElement;\n\n  @Event() scrollButtonClick: EventEmitter<Overflow>;\n\n  @Event() bdsTabInit: EventEmitter;\n\n  @Prop() align: 'left' | 'center' | 'right' = 'center';\n\n  @Listen('scrollButtonClick')\n  onScrollButtonClick(event: CustomEvent<Overflow>) {\n    event.preventDefault();\n\n    const options: ScrollToOptions = {\n      behavior: this.SCROLL_BEHAVIOR,\n      top: 0,\n      left: event.detail.distance,\n    };\n    options.left ??= this.getDistance(options, event);\n    this.tabsHeaderChildElement.scrollTo(options);\n  }\n\n  @Listen('bdsTabChange', { target: 'body' })\n  onSelectedTab(event: CustomEvent) {\n    this.handleButtonOverlay(event.detail);\n  }\n\n  componentDidLoad() {\n    this.getChildElements();\n    this.attachEvents();\n    this.setLeftButtonVisibility(false);\n    this.setRightButtonVisibility(true);\n    this.handleActiveTab();\n  }\n\n  private handleActiveTab() {\n    const tabs = Array.from(this.tabsHeaderChildElement.getElementsByTagName('bds-tab'));\n    const activeTab = tabs.find((tab) => tab.active);\n    if (activeTab) {\n      this.bdsTabInit.emit(activeTab.group);\n    } else {\n      const [firstTab] = tabs;\n      this.bdsTabInit.emit(firstTab.group);\n    }\n  }\n\n  private getChildElements() {\n    this.tabsHeaderChildElement = this.el.querySelector('.bds-tabs__header');\n    this.leftButtonChildElement = this.el.querySelector('#bds-tabs-button-left');\n    this.rightButtonChildElement = this.el.querySelector('#bds-tabs-button-right');\n  }\n\n  private attachEvents() {\n    window.onresize = this.handleHeaderResize;\n    this.tabsHeaderChildElement.onscroll = () =>\n      this.updateButtonsVisibility(this.tabsHeaderChildElement.scrollWidth > this.tabsHeaderChildElement.clientWidth);\n  }\n\n  private handleHeaderResize = () => {\n    if (this.tabsHeaderChildElement.offsetWidth < this.tabsHeaderChildElement.scrollWidth) {\n      this.updateButtonsVisibility(true);\n    } else {\n      this.updateButtonsVisibility(false);\n    }\n  };\n\n  private updateButtonsVisibility = (isScrollable: boolean) => {\n    this.setLeftButtonVisibility(isScrollable);\n    this.setRightButtonVisibility(isScrollable);\n  };\n\n  private handleScrollButtonClick = (direction: ScrollDirection) => {\n    this.scrollButtonClick.emit({ direction });\n  };\n\n  private setRightButtonVisibility(isScrollable: boolean) {\n    if (\n      isScrollable &&\n      this.tabsHeaderChildElement.scrollWidth >\n        Math.ceil(this.tabsHeaderChildElement.scrollLeft + this.tabsHeaderChildElement.clientWidth)\n    ) {\n      this.rightButtonChildElement.style.display = Display.BLOCK;\n    } else {\n      this.rightButtonChildElement.style.display = Display.NONE;\n    }\n  }\n\n  private setLeftButtonVisibility(isScrollable: boolean) {\n    this.leftButtonChildElement.style.display =\n      this.tabsHeaderChildElement.scrollLeft > 0 && isScrollable ? Display.BLOCK : Display.NONE;\n  }\n\n  private handleButtonOverlay(group: string) {\n    const tab = Array.from(this.tabsHeaderChildElement.getElementsByTagName('bds-tab')).find((header) => {\n      return header.group == group;\n    });\n\n    const buttons = [this.leftButtonChildElement, this.rightButtonChildElement];\n    buttons.forEach((button) => {\n      if (this.isButtonOverlappingTab(button, tab)) {\n        const distance = this.getAdjutScrollDistance(button, tab);\n        this.scrollButtonClick.emit({ distance: distance });\n      }\n    });\n  }\n\n  private isButtonOverlappingTab(button: HTMLElement, tab: HTMLElement) {\n    const tabRect = tab.getBoundingClientRect();\n    const buttonRect = button.getBoundingClientRect();\n\n    return this.elementIsOverlapping(buttonRect, tabRect);\n  }\n\n  private elementIsOverlapping(element: DOMRect, overlaidElement: DOMRect): boolean {\n    const elementStart = element.x;\n    const elementEnd = element.x + element.width;\n\n    const comparatorStart = overlaidElement.x;\n    const comparatorEnd = overlaidElement.x + overlaidElement.width;\n\n    return (\n      (elementStart >= comparatorStart && elementStart <= comparatorEnd) ||\n      (elementEnd >= comparatorStart && elementEnd <= comparatorEnd)\n    );\n  }\n\n  private getAdjutScrollDistance(button: HTMLElement, tab: HTMLElement) {\n    const direction = button.id == 'bds-tabs-button-left' ? ScrollDirection.LEFT : ScrollDirection.RIGHT;\n\n    const distanceDifference = tab.clientWidth + parseInt(getComputedStyle(tab).marginRight) - button.offsetWidth;\n\n    if (direction == ScrollDirection.RIGHT) {\n      return tab.parentElement.scrollLeft + distanceDifference;\n    } else {\n      return tab.parentElement.scrollLeft - distanceDifference;\n    }\n  }\n\n  private getDistance(options: ScrollToOptions, event: CustomEvent<Overflow>): number {\n    return event.detail.direction == ScrollDirection.RIGHT\n      ? (options.left = this.tabsHeaderChildElement.scrollLeft + this.tabsHeaderChildElement.clientWidth)\n      : (options.left = this.tabsHeaderChildElement.scrollLeft - this.tabsHeaderChildElement.clientWidth);\n  }\n\n  render(): HTMLElement {\n    return (\n      <Host\n        class={{\n          'bds-tabs': true,\n          [`bds-tabs--${this.align}`]: true,\n        }}\n      >\n        <div class=\"bds-tabs__header-button-container\">\n          <bds-button-icon\n            class=\"bds-tabs__header-button\"\n            icon=\"arrow-left\"\n            size=\"short\"\n            id=\"bds-tabs-button-left\"\n            onClick={() => this.handleScrollButtonClick(ScrollDirection.LEFT)}\n            variant=\"secondary\"\n          ></bds-button-icon>\n        </div>\n\n        <div class=\"bds-tabs__header\">\n          <slot />\n        </div>\n\n        <div class=\"bds-tabs__header-button-container\">\n          <bds-button-icon\n            class=\"bds-tabs__header-button\"\n            icon=\"arrow-right\"\n            size=\"short\"\n            id=\"bds-tabs-button-right\"\n            onClick={() => this.handleScrollButtonClick(ScrollDirection.RIGHT)}\n            variant=\"secondary\"\n          ></bds-button-icon>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}