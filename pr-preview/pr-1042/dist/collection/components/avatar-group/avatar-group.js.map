{"version":3,"file":"avatar-group.js","sourceRoot":"","sources":["../../../../src/components/avatar-group/avatar-group.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AAWrF,MAAM,OAAO,WAAW;IALxB;QAQE;;;WAGG;QACK,SAAI,GAAgB,UAAU,CAAC;QAuC/B,kBAAa,GAAG,CAAC,MAAc,EAAU,EAAE;YACjD,MAAM,MAAM,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YACjE,OAAO,MAAM,CAAC,MAAM,CAAW,CAAC;QAClC,CAAC,CAAC;KAgDH;IAxEC,gBAAgB,CAAC,CAAC;QAChB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAEO,cAAc,CAAC,KAAK;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClE,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAClC,CAAC;IACH,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,CAAC;gBACH,IAAI,CAAC,aAAa,GAAG,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YAC5F,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAKD,iBAAiB;QACf,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IACtD,CAAC;IACD,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,MAAM;YAChB,4DACE,KAAK,EAAE;oBACL,aAAa,EAAE,IAAI;oBACnB,CAAC,wBAAwB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI;oBAC3C,CAAC,yBAAyB,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI;iBACjD,EACD,QAAQ,EAAC,GAAG,EACZ,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAEvC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CACpB,IAAI,CAAC,aAAa;iBACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;iBACX,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CACpB,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACtD,kBACE,GAAG,EAAE,CAAC,EACN,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAC,SAAS,EACf,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GACjB,CACf,CAAC,CAAC,CAAC,CACF,kBACE,GAAG,EAAE,CAAC,EACN,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAC5B,IAAI,EAAE,IAAI,CAAC,IAAI,GACH,CACf,CACF,CACJ,CAAC,CAAC,CAAC,CACF,eAAQ,CACT,CACG;YACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAK,KAAK,EAAC,OAAO,EAAC,QAAQ,EAAC,GAAG,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,GAAQ,CAAC,CAAC,CAAC,EAAE,CAC3F,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, State, Prop, EventEmitter, Event } from '@stencil/core';\nimport { AvatarDataList } from './avatar-group-interface';\nimport { colors } from '../avatar/avatar';\n\nexport type avatarSize = 'extra-small' | 'small' | 'standard';\n\n@Component({\n  tag: 'bds-avatar-group',\n  styleUrl: 'avatar-group.scss',\n  shadow: true,\n})\nexport class AvatarGroup {\n  @State() internalUsers: AvatarDataList[];\n  @State() leftoversUsers: number;\n  /**\n   * Size. Entered as one of the size. Can be one of:\n   * 'extra-small', 'small', 'standard', 'large', 'extra-large'.\n   */\n  @Prop() size?: avatarSize = 'standard';\n  /**\n  * The users of the select\n  * Should be passed this way:\n  * users='[\n      {\"id\": \"1\", \"name\": \"Michael Scott\", \"thumbnail\": \"https://gcdn.pbrd.co/images/9Kt8iMvR10Lf.jpg?o=1\"},\n      {\"id\": \"2\", \"name\": \"Dwight Schrute\", \"thumbnail\": \"https://gcdn.pbrd.co/images/XAlbTPDwjZ2d.jpg?o=1\"},\n      {\"id\": \"3\", \"name\": \"Jim Halpert\", \"thumbnail\": \"https://gcdn.pbrd.co/images/tK0Ygb0KAHUm.jpg?o=1\"},\n      {\"id\": \"4\", \"name\": \"Pam Beesly\", \"thumbnail\": \"https://gcdn.pbrd.co/images/8NZSnCGfB9BD.jpg?o=1\"},\n      {\"id\": \"5\", \"name\": \"Ryan Howard\", \"thumbnail\": \"https://gcdn.pbrd.co/images/6wwIWI1EzzVq.jpg?o=1\"},\n      {\"id\": \"6\", \"name\": \"Andy Bernard\", \"thumbnail\": \"https://gcdn.pbrd.co/images/5dPYFWixftY4.jpg?o=1\"}\n    ]'\n  * users can also be passed as child by using bds-avatar-group component, but passing as a child you may have some compatibility problems with Angular.\n  */\n  @Prop() users?: string | AvatarDataList[];\n  @Prop() canClick?: boolean;\n  @Event() bdsClickAvatarGroup: EventEmitter;\n\n  handleClickGroup(e) {\n    e.preventDefault();\n    this.bdsClickAvatarGroup.emit(e);\n  }\n\n  private handleClickKey(event) {\n    if ((event.key === 'Enter' || event.key === ' ') && this.canClick) {\n      event.preventDefault();\n      this.bdsClickAvatarGroup.emit();\n    }\n  }\n\n  parseUsers() {\n    if (this.users) {\n      try {\n        this.internalUsers = typeof this.users === 'string' ? JSON.parse(this.users) : this.users;\n      } catch (e) {\n        this.internalUsers = [];\n      }\n    }\n  }\n  private avatarBgColor = (number: number): colors => {\n    const colors = ['system', 'success', 'warning', 'error', 'info'];\n    return colors[number] as colors;\n  };\n  componentWillLoad() {\n    this.users && this.parseUsers();\n    this.leftoversUsers = this.internalUsers.length - 5;\n  }\n  render() {\n    return (\n      <Host class=\"host\">\n        <div\n          class={{\n            avatar__group: true,\n            [`avatar__group__size--${this.size}`]: true,\n            [`avatar__group__click--${this.canClick}`]: true,\n          }}\n          tabindex=\"0\"\n          onClick={(e) => this.handleClickGroup(e)}\n        >\n          {this.internalUsers ? (\n            this.internalUsers\n              .slice(0, 6)\n              .map((user, i, row) =>\n                i + 1 === row.length && this.internalUsers.length > 5 ? (\n                  <bds-avatar\n                    key={i}\n                    name={user.name}\n                    color=\"surface\"\n                    size={this.size}\n                    ellipsis={this.leftoversUsers}\n                  ></bds-avatar>\n                ) : (\n                  <bds-avatar\n                    key={i}\n                    id={user.id}\n                    name={user.name}\n                    thumbnail={user.thumbnail}\n                    color={this.avatarBgColor(i)}\n                    size={this.size}\n                  ></bds-avatar>\n                ),\n              )\n          ) : (\n            <slot />\n          )}\n        </div>\n        {this.canClick ? <div class=\"focus\" tabindex=\"0\" onClick={() => this.handleClickKey}></div> : ''}\n      </Host>\n    );\n  }\n}\n"]}