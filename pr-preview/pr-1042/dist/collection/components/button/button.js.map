{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/components/button/button.tsx"],"names":[],"mappings":"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":["import { Component, Prop, Element, Event, EventEmitter, h, Host, State, Method, Watch, Listen } from '@stencil/core';\r\nimport { LoadingSpinnerVariant } from '../loading-spinner/loading-spinner';\r\nimport { colorsVariants } from '../loading-spinner/loading-spinner';\r\n\r\nexport type ButtonSize = 'tall' | 'standard' | 'short' | 'medium' | 'large';\r\n\r\nexport type ButtonVariant =\r\n  | 'primary'\r\n  | 'secondary'\r\n  | 'tertiary'\r\n  | 'delete'\r\n  | 'secondary--white'\r\n  | 'ghost'\r\n  | 'dashed'\r\n  | 'facebook'\r\n  | 'solid'\r\n  | 'outline'\r\n  | 'text';\r\n\r\nexport type ButtonType = 'button' | 'submit' | 'reset';\r\n\r\nexport type IconType = 'icon' | 'logo' | 'emoji';\r\n\r\nexport type IconTheme = 'outline' | 'solid';\r\n\r\nexport type ButtonJustifyContent = 'center' | 'space-between';\r\n\r\n@Component({\r\n  tag: 'bds-button',\r\n  styleUrl: 'button.scss',\r\n  shadow: true,\r\n})\r\nexport class Button {\r\n  @Element() el!: HTMLElement;\r\n\r\n  @State() slotText: string;\r\n  @State() active: boolean;\r\n  @State() position: string;\r\n  @State() direction: string;\r\n  @State() group = false;\r\n  @State() loadingColor: colorsVariants;\r\n  /**\r\n   * \tIf true, the base button will be disabled.\r\n   */\r\n  @Prop() block?: boolean = false;\r\n\r\n  /**\r\n   * \tIf true, the button will occupy 100% width with centered content.\r\n   */\r\n  @Prop() fullWidth?: boolean = false;\r\n\r\n  /**\r\n   * \tControls the horizontal alignment of button content.\r\n   * \t'center' - content is centered (default)\r\n   * \t'space-between' - left content aligned left, right content aligned right\r\n   */\r\n  @Prop() justifyContent?: ButtonJustifyContent = 'center';\r\n\r\n  /**\r\n   * \tIf true, groups the left icon with the label when justifyContent is 'space-between'.\r\n   * \tThis keeps the left icon and text together as a single visual unit on the left side.\r\n   */\r\n  @Prop() groupIcon?: boolean = false;\r\n\r\n  /**\r\n   * \tIf true, the base button will be disabled.\r\n   */\r\n  @Prop() disabled?: boolean = false;\r\n\r\n  @Prop({ mutable: true }) color?: string = 'primary';\r\n  /**\r\n   * Size. Entered as one of the size. Can be one of:\r\n   * 'tall', 'standard', 'short';\r\n   */\r\n  @Prop({ mutable: true }) size?: ButtonSize = 'medium';\r\n\r\n  /**\r\n   * Variant. Entered as one of the variant. Can be one of:\r\n   * 'primary', 'secondary', 'ghost', 'dashed';\r\n   */\r\n  @Prop({ mutable: true }) variant?: ButtonVariant = 'solid';\r\n\r\n  /**\r\n   * used for add icon in input left. Uses the bds-icon component.\r\n   */\r\n  @Prop({ reflect: true }) icon?: string = null;\r\n\r\n  /**\r\n   * used for add icon in input left. Uses the bds-icon component.\r\n   */\r\n  @Prop({ reflect: true }) iconLeft?: string = null;\r\n\r\n  /**\r\n   * used for add icon in input left. Uses the bds-icon component.\r\n   */\r\n  @Prop({ reflect: true }) iconRight?: string = null;\r\n\r\n  /**\r\n   * The arrow button\r\n   */\r\n  @Prop() arrow?: boolean = false;\r\n\r\n  /**\r\n   * The type of the button. Can be one of:\r\n   * 'button', 'submit', 'reset';\r\n   */\r\n  @Prop() type: ButtonType = 'button';\r\n\r\n  /**\r\n   * The theme of the icon. Can be one of:\r\n   * 'outline', 'solid';\r\n   */\r\n  @Prop({ reflect: true }) iconTheme: IconTheme = 'outline';\r\n\r\n  /**\r\n   * The type of the icon. Can be one of:\r\n   * 'icon', 'logo', 'emoji';\r\n   */\r\n  @Prop({ reflect: true }) typeIcon: IconType = 'icon';\r\n\r\n  /**\r\n   * \tIf true, shows the loading spinner\r\n   */\r\n  @Prop() bdsLoading?: boolean = false;\r\n\r\n  /**\r\n   * \tIf not empty, Sets the color of the spinner, can be 'primary','secondary' or 'ghost'\r\n   */\r\n  @Prop() bdsLoadingVariant?: LoadingSpinnerVariant = 'primary';\r\n\r\n  /**\r\n   * \tIf not empty, Sets the color of the spinner, can be 'primary','secondary' or 'ghost'\r\n   */\r\n  @Prop() bdsLoadingColor?: colorsVariants = 'main';\r\n\r\n  /**\r\n   * Data test is the prop to specifically test the component action object.\r\n   */\r\n  @Prop() dataTest?: string = null;\r\n\r\n  /**\r\n   * Event buttom onClick.\r\n   */\r\n  @Event() bdsClick: EventEmitter<PointerEvent|KeyboardEvent>;\r\n\r\n  @Method()\r\n  async isActive(value) {\r\n    this.active = value;\r\n  }\r\n\r\n  @Method()\r\n  async setPosition(position: 'first' | 'last' | 'middle') {\r\n    this.position = position;\r\n    this.position ? (this.group = true) : false;\r\n  }\r\n\r\n  @Method()\r\n  async setDirection(direction: 'row' | 'column') {\r\n    this.direction = direction;\r\n  }\r\n\r\n  @Method()\r\n  async setSize(size: ButtonSize) {\r\n    this.size = size;\r\n  }\r\n\r\n  @Method()\r\n  async setColor(color: 'primary' | 'content' | 'negative' | 'positive') {\r\n    this.color = color;\r\n  }\r\n\r\n  @Method()\r\n  async setVariant(variant: ButtonVariant) {\r\n    this.variant = variant;\r\n  }\r\n\r\n  componentDidRender() {\r\n    this.logSlotText();\r\n    this.buttonLegacy();\r\n  }\r\n\r\n  buttonLegacy() {\r\n    this.variant === 'facebook' ? this.setVariant('outline') : this.setVariant(this.variant);\r\n    this.size === 'tall'\r\n      ? this.setSize('large')\r\n      : this.size === 'standard'\r\n        ? this.setSize('medium')\r\n        : this.setSize(this.size);\r\n  }\r\n\r\n  logSlotText() {\r\n    const slot = this.el.shadowRoot.querySelector('slot');\r\n    const onlyIconElement = this.el.shadowRoot.querySelector('button') as HTMLElement;\r\n\r\n    if (slot) {\r\n      const assignedNodes = slot.assignedNodes();\r\n\r\n      let slotText = '';\r\n      assignedNodes.forEach((node) => {\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n          slotText += node.textContent;\r\n        }\r\n      });\r\n      if (slotText === '' && this.size === 'medium') {\r\n        onlyIconElement.classList.add('button__only-icon--medium');\r\n      }\r\n      if (slotText === '' && this.size === 'large') {\r\n        onlyIconElement.classList.add('button__only-icon--large');\r\n      }\r\n      if (slotText === '' && this.size === 'short') {\r\n        onlyIconElement.classList.add('button__only-icon--short');\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('bdsLoading')\r\n  renderLoadingSpinner(): HTMLBdsLoadingSpinnerElement {\r\n    if (this.variant === 'solid') {\r\n      if (['primary', 'positive', 'negative'].includes(this.color)) {\r\n        this.loadingColor = 'light';\r\n      } else if (this.color === 'content') {\r\n        this.loadingColor = 'content';\r\n      }\r\n    } else if (this.variant === 'outline' || this.variant === 'text') {\r\n      this.loadingColor = this.color === 'positive' ? 'positive' : this.color === 'negative' ? 'negative' : 'main';\r\n    }\r\n    return <bds-loading-spinner size=\"extra-small\" color={this.loadingColor}></bds-loading-spinner>;\r\n  }\r\n\r\n  @Listen('click', { capture: true })\r\n  handleClick(ev: PointerEvent | KeyboardEvent): void {\r\n    if (!this.disabled) {\r\n      this.bdsClick.emit(ev);\r\n\r\n      const form = this.el.closest('form');\r\n      if (form) {\r\n        ev.preventDefault();\r\n        const fakeButton = document.createElement('button');\r\n        fakeButton.type = this.type;\r\n        fakeButton.style.display = 'none';\r\n        form.appendChild(fakeButton);\r\n        fakeButton.click();\r\n        fakeButton.remove();\r\n      }\r\n    }\r\n  };\r\n\r\n  render(): HTMLElement {\r\n    return (\r\n      <Host class={{ host: true, block: this.block || this.fullWidth, group: this.group }}>\r\n        <div tabindex=\"0\" onKeyDown={(ev) => this.handleClick(ev)} class=\"focus\"></div>\r\n        <button\r\n          onClick={(ev) => this.handleClick(ev)}\r\n          disabled={this.disabled}\r\n          tabindex=\"-1\"\r\n          aria-disabled={this.disabled ? 'true' : 'false'}\r\n          aria-live=\"assertive\"\r\n          type={this.type}\r\n          class={{\r\n            button: true,\r\n            'button--block': this.block,\r\n            'button--full-width': this.fullWidth,\r\n            'button--group': this.group,\r\n            [`button__justify-content--${this.justifyContent}`]: true,\r\n            [`button__position--${this.direction}--${this.position}`]: true,\r\n            'button--active': this.active,\r\n            [`button__variant--${this.variant === 'delete' ? 'solid' : this.variant}`]: true,\r\n            [`button__${this.variant === 'delete' ? 'solid' : this.variant}`]: true,\r\n            [`button__color--${this.variant === 'delete' ? 'negative' : this.color}`]: true,\r\n            [`button__variant--${this.variant}--disabled`]: this.disabled,\r\n            [`button__size--${this.size}`]: true,\r\n          }}\r\n          part=\"button\"\r\n          data-test={this.dataTest}\r\n        >\r\n          {this.bdsLoading ? this.renderLoadingSpinner() : ''}\r\n          {this.groupIcon && (this.iconLeft || this.icon) ? (\r\n            <div class=\"button__group-content\">\r\n              <bds-icon\r\n                class={{ icon_buttom: true, hide: this.bdsLoading }}\r\n                name={this.icon ? this.icon : this.iconLeft}\r\n                theme={this.iconTheme}\r\n                type={this.typeIcon}\r\n                color=\"inherit\"\r\n                size={'medium'}\r\n              ></bds-icon>\r\n              <bds-typo\r\n                class={{ typo_buttom: true, button__content:true, hide: this.bdsLoading }}\r\n                variant=\"fs-14\"\r\n                lineHeight=\"simple\"\r\n                bold=\"bold\"\r\n              >\r\n                <slot></slot>\r\n              </bds-typo>\r\n            </div>\r\n          ) : (\r\n            [\r\n              this.iconLeft || this.icon ? (\r\n                <bds-icon\r\n                  class={{ icon_buttom: true, hide: this.bdsLoading }}\r\n                  name={this.icon ? this.icon : this.iconLeft}\r\n                  theme={this.iconTheme}\r\n                  type={this.typeIcon}\r\n                  color=\"inherit\"\r\n                  size={'medium'}\r\n                ></bds-icon>\r\n              ) : null,\r\n              <bds-typo\r\n                class={{ typo_buttom: true, button__content:true, hide: this.bdsLoading }}\r\n                variant=\"fs-14\"\r\n                lineHeight=\"simple\"\r\n                bold=\"bold\"\r\n              >\r\n                <slot></slot>\r\n              </bds-typo>\r\n            ]\r\n          )}\r\n          {this.iconRight || this.arrow ? (\r\n            <bds-icon\r\n              class={{ icon_buttom: true, hide: this.bdsLoading }}\r\n              name={this.arrow ? 'arrow-right' : this.iconRight}\r\n              color=\"inherit\"\r\n              theme={this.iconTheme}\r\n              type={this.typeIcon}\r\n            ></bds-icon>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}