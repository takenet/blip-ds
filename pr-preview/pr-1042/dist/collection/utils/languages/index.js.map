{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/utils/languages/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { ptTerms, ptMonths, ptDays, ptMessages } from './pt_BR';\nimport { esTerms, esMonths, esDays, esMessages } from './es_ES';\nimport { enTerms, enMonths, enDays, enMessages } from './en_US';\n\nexport type languages = 'pt_BR' | 'es_ES' | 'en_US';\n\nexport const termTranslate = (lang: languages, string: string): string => {\n  let tranlate;\n  switch (lang) {\n    case 'pt_BR':\n      tranlate = ptTerms.map((term) => term[string]);\n      break;\n    case 'es_ES':\n      tranlate = esTerms.map((term) => term[string]);\n      break;\n    case 'en_US':\n      tranlate = enTerms.map((term) => term[string]);\n      break;\n    default:\n      tranlate = ptTerms.map((term) => term[string]);\n  }\n  return tranlate;\n};\n\nexport const monthTranslate = (lang: languages, string: string): string => {\n  let tranlate;\n  switch (lang) {\n    case 'pt_BR':\n      tranlate = ptMonths.map((term) => term[string]);\n      break;\n    case 'es_ES':\n      tranlate = esMonths.map((term) => term[string]);\n      break;\n    case 'en_US':\n      tranlate = enMonths.map((term) => term[string]);\n      break;\n    default:\n      tranlate = ptMonths.map((term) => term[string]);\n  }\n  return tranlate;\n};\n\nexport const dayTranslate = (lang: languages, string: string): string => {\n  let tranlate;\n  switch (lang) {\n    case 'pt_BR':\n      tranlate = ptDays.map((term) => term[string]);\n      break;\n    case 'es_ES':\n      tranlate = esDays.map((term) => term[string]);\n      break;\n    case 'en_US':\n      tranlate = enDays.map((term) => term[string]);\n      break;\n    default:\n      tranlate = ptDays.map((term) => term[string]);\n  }\n  return tranlate;\n};\n\nexport const messageTranslate = (lang: languages, string: string): string => {\n  let tranlate;\n  switch (lang) {\n    case 'pt_BR':\n      tranlate = ptMessages.map((term) => term[string]);\n      break;\n    case 'es_ES':\n      tranlate = esMessages.map((term) => term[string]);\n      break;\n    case 'en_US':\n      tranlate = enMessages.map((term) => term[string]);\n      break;\n    default:\n      tranlate = ptMessages.map((term) => term[string]);\n  }\n  return tranlate;\n};\n"]}