{"file":"bds-table-cell.entry.cjs.js","mappings":";;;;AAAA,MAAM,YAAY,GAAG,mgCAAmgC;;MCW3gC,SAAS,GAAA,MAAA;AALtB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAOW,QAAA,IAAO,CAAA,OAAA,GAAG,KAAK;AAChB,QAAA,IAAI,CAAA,IAAA,GAAY,MAAM;AACtB,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK;AAChB,QAAA,IAAc,CAAA,cAAA,GAAmB,MAAM;AAoChD;IAlCC,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAC3BA,iBAAK,KAAK,EAAE,EAAE,IAAI,EAAC,IAAI,EAAE,WAAW,EAAC,IAAI,EAAE,UAAU,EAAC,IAAI,EAAE,CAAC,CAAA,SAAA,EAAY,IAAI,CAAC,cAAc,CAAA,CAAE,GAAE,IAAI,EAAE,EAAA,EACpGA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACJ,IACJ,IAAI,CAAC,IAAI,KAAK,MAAM,IACtBA,iBAAK,KAAK,EAAE,EAAE,IAAI,EAAC,IAAI,EAAE,UAAU,EAAC,IAAI,EAAE,CAAC,CAAA,SAAA,EAAY,IAAI,CAAC,cAAc,CAAA,CAAE,GAAE,IAAI,EAAE,EAAA,EAClFA,OAAA,CAAA,UAAA,EAAA,EAAU,OAAO,EAAC,OAAO,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,SAAS,EAAA,EAChEA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACC,CACP,IACJ,IAAI,CAAC,IAAI,KAAK,QAAQ,IACxBA,OAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,EAAE,IAAI,EAAC,IAAI,EAAE,WAAW,EAAC,IAAI,EAAE,UAAU,EAAC,IAAI,EAAE,CAAC,CAAY,SAAA,EAAA,IAAI,CAAC,cAAc,CAAE,CAAA,GAAE,IAAI,EAAE,EAAA,EACpGA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACJ,IACJ,IAAI,CAAC,IAAI,KAAK,UAAU,IAC1BA,OAAA,CAAA,IAAA,EAAA,EAAI,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAC,IAAI,EAAE,WAAW,EAAC,IAAI,EAAE,UAAU,EAAC,IAAI,EAAE,CAAC,CAAA,SAAA,EAAY,IAAI,CAAC,cAAc,CAAE,CAAA,GAAE,IAAI,EAAE,EAAA,EAC/GA,OAAQ,CAAA,MAAA,EAAA,IAAA,CAAA,CACL,KAELA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACT;;IAGH,iBAAiB,GAAA;QACf,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;QAClD,IAAI,QAAQ,IAAI,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,MAAM,EAAE;AAC/D,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI;;;IAIvB,MAAM,GAAA;AACJ,QAAA,OAAOA,OAAA,CAACC,UAAI,EAAE,EAAA,GAAA,EAAA,0CAAA,EAAA,EAAA,IAAI,CAAC,aAAa,EAAE,CAAQ;;;;;;;;","names":["h","Host"],"sources":["src/components/table/table-cell/table-cell.scss?tag=bds-table-cell&encapsulation=scoped","src/components/table/table-cell/table-cell.tsx"],"sourcesContent":["@use '../../../globals/helpers' as *;\n\n:host {\n  display: table-cell;\n  padding: 0 8px;\n  font-family: $font-family;\n  font-size: 14px;\n  vertical-align: middle;\n}\n.cell {\n  display: flex;\n  align-items: center;\n  min-height: 48px;\n  margin: 8px 0;\n  color: $color-content-default;\n  font-family: $font-family;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.dense_cell {\n  margin: 0;\n}\n\n.cell_custom {\n  gap: 8px;\n}\n\n.cell_action {\n  flex-direction: row;\n  gap: 8px;\n}\n\n.justify {\n  &--left {\n    justify-content: flex-start;\n  }\n  &--center {\n    justify-content: center;\n  }\n  &--right {\n    justify-content: flex-end;\n  }\n}\n\n:host:first-child {\n  padding-left: 16px;\n}\n\n:host:last-child {\n  padding-right: 16px;\n}","import { Component, h, Host, Prop, Element, State } from '@stencil/core';\n\nexport type IconType = 'text' | 'custom' | 'emoji' | 'collapse';\n\nexport type JustifyContent = 'left' | 'center' | 'right';\n\n@Component({\n  tag: 'bds-table-cell',\n  styleUrl: 'table-cell.scss',\n  scoped: true,\n})\nexport class TableCell {\n  @Element() private element: HTMLElement;\n  @State() isDense = false;\n  @Prop() type?: string = 'text';\n  @Prop() sortable = false;\n  @Prop() justifyContent: JustifyContent = 'left';\n\n  renderContent(): HTMLElement {\n    return this.type === 'custom' ? (\n      <div class={{ cell:true, cell_custom:true, dense_cell:true, [`justify--${this.justifyContent}`]:true }}>\n        <slot />\n      </div>\n    ) : this.type === 'text' ? (\n      <div class={{ cell:true, dense_cell:true, [`justify--${this.justifyContent}`]:true }}>\n        <bds-typo variant=\"fs-14\" bold={this.sortable ? 'bold' : 'regular'}>\n          <slot />\n        </bds-typo>\n      </div>\n    ) : this.type === 'action' ? (\n      <div class={{ cell:true, cell_action:true, dense_cell:true, [`justify--${this.justifyContent}`]:true }}>\n        <slot />\n      </div>\n    ) : this.type === 'collapse' ? (\n      <td colSpan={2} class={{ cell:true, cell_action:true, dense_cell:true, [`justify--${this.justifyContent}`]:true }}>\n        <slot />\n      </td>\n    ) : (\n      <slot />\n    );\n  }\n\n  componentWillLoad() {\n    const bdsTable = this.element.closest('bds-table');\n    if (bdsTable && bdsTable.getAttribute('dense-table') === 'true') {\n      this.isDense = true;\n    }\n  }\n\n  render(): HTMLElement {\n    return <Host>{this.renderContent()}</Host>;\n  }\n}\n"],"version":3}