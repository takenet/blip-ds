{"file":"p-DaXcfYJP.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/chip-clickable/chip-clickable.scss?tag=bds-chip-clickable&encapsulation=shadow","src/components/chip-clickable/chip-clickable.tsx"],"sourcesContent":[":host {\n  display: flex;\n  height: max-content;\n  border-radius: 4px;\n  box-sizing: border-box;\n  max-width: 100%;\n\n  .chip_clickable {\n    display: flex;\n    min-width: 32px;\n    width: fit-content;\n    height: 24px;\n    border-radius: 12px;\n    padding: 2px 6px;\n    align-items: center;\n    box-sizing: border-box;\n    justify-content: center;\n    position: relative;\n    z-index: 1; // Keep chips behind other screen components\n    flex-shrink: 0; // Prevent chips from shrinking in flex layout\n\n    &--container-text {\n      &--full {\n        width: 100%;\n      }\n      &--min {\n        width: calc(100% - 36px);\n      }\n      &--half {\n        width: calc(100% - 16px);\n      }\n    }\n\n    &--hide {\n      display: none;\n      padding: 0;\n      border: none;\n    }\n\n    .chip_focus:focus {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      padding: 2px;\n      border-radius: 4px;\n      outline: $color-focus solid 2px;\n    }\n\n    &--click {\n      cursor: pointer;\n      .chip_darker {\n        opacity: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        z-index: 1;\n        backdrop-filter: brightness(1);\n        box-sizing: border-box;\n      }\n    }\n    &--click:hover {\n      .chip_darker {\n        opacity: 1;\n        backdrop-filter: brightness(0.9);\n      }\n    }\n    &--click:active {\n      .chip_darker {\n        opacity: 1;\n        backdrop-filter: brightness(0.8);\n      }\n    }\n    &--disabled {\n      cursor: default;\n      background-color: $color-surface-3;\n      .chip_clickable--icon {\n        color: $color-content-default;\n      }\n      .chip_clickable--text {\n        color: $color-content-default;\n      }\n      .chip_clickable--close {\n        cursor: default;\n      }\n    }\n\n    &--text {\n      display: flex;\n      align-items: center;\n      height: 16px;\n      margin: 0;\n      padding: 0 2px;\n      z-index: 2;\n      font-family: $font-family;\n      line-height: 1;\n    }\n    &--icon {\n      display: flex;\n      align-items: center;\n      height: 16px;\n      padding-right: 2px;\n      z-index: 2;\n    }\n    &--close {\n      display: flex;\n      align-items: center;\n      height: 16px;\n      padding-left: 2px;\n      mix-blend-mode: hard-light;\n      opacity: 0.5;\n      z-index: 2;\n      position: relative;\n      cursor: pointer;\n\n      .close_focus:focus {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        left: -2px;\n        border-radius: 4px;\n        outline: $color-focus solid 2px;\n      }\n    }\n    &--tall {\n      height: 32px;\n      border-radius: 16px;\n      padding: 4px 8px;\n\n      .chip_clickable--text {\n        height: 20px;\n        line-height: 1.1;\n      }\n      .chip_clickable--icon {\n        height: 20px;\n        padding-right: 4px;\n      }\n      .chip_clickable--close {\n        height: 20px;\n        padding-left: 4px;\n      }\n    }\n    &--default {\n      background-color: $color-system;\n      color: $color-content-din;\n    }\n    &--info {\n      background-color: $color-info;\n      color: $color-content-din;\n    }\n    &--success {\n      background-color: $color-success;\n      color: $color-content-din;\n    }\n    &--warning {\n      background-color: $color-warning;\n      color: $color-content-din;\n    }\n    &--danger {\n      background-color: $color-error;\n      color: $color-content-din;\n    }\n    &--outline {\n      border: 1px solid $color-border-1;\n      color: $color-content-default;\n    }\n    &:focus-visible {\n      outline: none;\n    }\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, Element, State } from '@stencil/core';\n\nexport type ColorChipClickable = 'default' | 'info' | 'success' | 'warning' | 'danger' | 'outline';\nexport type Size = 'standard' | 'tall';\n\n@Component({\n  tag: 'bds-chip-clickable',\n  styleUrl: 'chip-clickable.scss',\n  shadow: true,\n})\nexport class ChipClickable {\n  @Element() private element: HTMLElement;\n  @State() visible = true;\n  /**\n   * used for add icon in left container. Uses the bds-icon component.\n   */\n  @Prop() icon?: string;\n  /**\n   * used for add avatar left container. Uses the bds-avatar component.\n   */\n  @Prop() avatar?: string;\n  /**\n   * used for change the color. Uses one of them.\n   */\n  @Prop() color?: ColorChipClickable = 'default';\n  /**\n   * used for change the size chip. Uses one of them.\n   */\n  @Prop() size?: Size = 'standard';\n  /**\n   * it makes the chip clickable.\n   */\n  @Prop() clickable?: boolean = false;\n  /**\n   * used for delete the chip.\n   */\n  @Prop() close?: boolean = false;\n  /**\n   * the chip gone stay disabled while this prop be true.\n   */\n  @Prop() disabled?: boolean = false;\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   * dtButtonClose is the data-test to button close.\n   */\n  @Prop() dtButtonClose?: string = null;\n  /**\n   *  Triggered after a mouse click on close icon, return id element. Only fired when close is true.\n   */\n  @Event() chipClickableClose: EventEmitter;\n  @Event() chipClickableClick: EventEmitter;\n\n  private handleClickKey(event) {\n    if ((event.key === 'Enter' || event.key === ' ') && !this.disabled) {\n      event.preventDefault();\n      this.chipClickableClick.emit();\n    }\n  }\n\n  private handleClick(event) {\n    if (!this.disabled) {\n      event.preventDefault();\n      this.chipClickableClick.emit();\n    }\n  }\n\n  private handleCloseChip(event) {\n    event.preventDefault();\n    this.chipClickableClose.emit({ id: this.element.id });\n  }\n\n  private handleCloseKey(event) {\n    if ((event.key === 'Enter' || event.key === ' ') && !this.disabled) {\n      event.preventDefault();\n      this.chipClickableClose.emit({ id: this.element.id });\n    }\n  }\n\n  private getSizeAvatarChip() {\n    if (this.size === 'tall') {\n      return 'extra-small';\n    } else return 'micro';\n  }\n\n  private getSizeIconChip() {\n    if (this.size === 'tall') {\n      return 'medium';\n    } else return 'x-small';\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            chip_clickable: true,\n            [`chip_clickable--${this.color}`]: true && !this.disabled,\n            [`chip_clickable--${this.size}`]: true,\n            'chip_clickable--hide': !this.visible,\n            'chip_clickable--click': this.clickable,\n            'chip_clickable--disabled': this.disabled,\n          }}\n          onClick={this.handleClick.bind(this)}\n          data-test={this.dataTest}\n        >\n          {this.clickable && !this.disabled && (\n            <div class=\"chip_focus\" onKeyDown={this.handleClickKey.bind(this)} tabindex=\"0\"></div>\n          )}\n          {this.clickable && !this.disabled && <div class=\"chip_darker\"></div>}\n          {this.icon && !this.avatar && (\n            <div class=\"chip_clickable--icon\">\n              <bds-icon size={this.getSizeIconChip()} name={this.icon}></bds-icon>\n            </div>\n          )}\n          {this.avatar && (\n            <div class=\"chip_clickable--avatar\">\n              <bds-avatar size={this.getSizeAvatarChip()} thumbnail={this.avatar}></bds-avatar>\n            </div>\n          )}\n          <div\n            class={\n              this.close && (this.icon || this.avatar)\n                ? `chip_clickable--container-text--min`\n                : !this.close && !this.icon && !this.avatar\n                  ? `chip_clickable--container-text--full`\n                  : `chip_clickable--container-text--half`\n            }\n          >\n            <bds-typo no-wrap=\"true\" class=\"chip_clickable--text\" variant=\"fs-12\" bold=\"bold\">\n              <slot></slot>\n            </bds-typo>\n          </div>\n          {this.close && (\n            <div class=\"chip_clickable--close\" data-test={this.dtButtonClose} onClick={this.handleCloseChip.bind(this)}>\n              {!this.disabled && (\n                <div class=\"close_focus\" onKeyDown={this.handleCloseKey.bind(this)} tabindex=\"0\"></div>\n              )}\n              <bds-icon size=\"x-small\" theme=\"solid\" name=\"error\"></bds-icon>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}