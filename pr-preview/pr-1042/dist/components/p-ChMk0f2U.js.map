{"file":"p-ChMk0f2U.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,gpFAAgpF;;MCQppF,KAAK,iBAAAA,kBAAA,CAAA,MAAA,KAAA,SAAAC,CAAA,CAAA;AALlB,IAAA,WAAA,GAAA;;;;AAMW,QAAA,IAAS,CAAA,SAAA,GAAG,IAAI;AAEzB;;;AAGG;AACqC,QAAA,IAAS,CAAA,SAAA,GAAoB,QAAQ;AAE7E;;AAEG;AACK,QAAA,IAAQ,CAAA,QAAA,GAAY,IAAI;AAEhC;;AAEG;AACK,QAAA,IAAM,CAAA,MAAA,GAAa,KAAK;AAChC;;AAEG;AACK,QAAA,IAAM,CAAA,MAAA,GAAY,IAAI;AAE9B;;AAEG;AACK,QAAA,IAAK,CAAA,KAAA,GAAY,IAAI;AAE7B;;AAEG;AACK,QAAA,IAAO,CAAA,OAAA,GAAqB,WAAW;AAE/C;;AAEG;AACK,QAAA,IAAW,CAAA,WAAA,GAAiB,IAAI;AAuBzC;IArBC,iBAAiB,GAAA;QACf,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;IAG3E,MAAM,GAAA;QACJ,QACE,CAAA,CAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EACH,KAAK,EAAE;gBACL,CAAC,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS;gBACvD,MAAM,EAAE,IAAI,CAAC,MAAM;AACnB,gBAAA,CAAC,MAAM,IAAI,CAAC,OAAO,CAAE,CAAA,GAAG,IAAI;AAC5B,gBAAA,CAAC,UAAU,IAAI,CAAC,WAAW,CAAE,CAAA,GAAG,IAAI;aACrC,EACD,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAA,CAAE,EAAE,KAAK,EAAE,CAAG,EAAA,IAAI,CAAC,KAAK,CAAE,CAAA,EAAE,EAAA,EAE3D,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,gBAAgB,EAAY,WAAA,EAAA,IAAI,CAAC,QAAQ,EAAA,EAClD,CAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACT,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/paper/paper.scss?tag=bds-paper&encapsulation=shadow","src/components/paper/paper.tsx"],"sourcesContent":["@use '../../global-style' as *;\n@use '../../globals/helpers' as *;\n\n:host {\n  display: block;\n  border-radius: 16px;\n}\n\n:host(.border) {\n  border: 1px solid $color-border-1;\n  margin: -1px;\n}\n\n:host(.bg-surface-0) {\n  background-color: $color-surface-0;\n}\n\n:host(.bg-surface-1) {\n  background-color: $color-surface-1;\n}\n\n:host(.bg-surface-2) {\n  background-color: $color-surface-2;\n}\n\n:host(.bg-surface-3) {\n  background-color: $color-surface-3;\n}\n\n:host(.bg-surface-4) {\n  background-color: $color-surface-4;\n}\n\n:host(.border-1) {\n  border-color: $color-border-1;\n}\n\n:host(.border-2) {\n  border-color: $color-border-2;\n}\n\n:host(.border-3) {\n  border-color: $color-border-3;\n}\n\n:host(.border-primary) {\n  border-color: $color-primary;\n}\n\n:host(.border-secondary) {\n  border-color: $color-secondary;\n}\n:host(.border-positive) {\n  border-color: $color-positive;\n}\n:host(.border-negative) {\n  border-color: $color-negative;\n}\n:host(.border-warning) {\n  border-color: $color-warning;\n}\n:host(.border-error) {\n  border-color: $color-error;\n}\n:host(.border-success) {\n  border-color: $color-success;\n}\n:host(.border-delete) {\n  border-color: $color-delete;\n}\n\n:host(.paper__elevation--none) {\n  box-shadow: none;\n}\n\n:host(.paper__elevation--static) {\n  box-shadow: $shadow-1;\n}\n\n:host(.paper__elevation--primary) {\n  box-shadow: $shadow-2;\n}\n\n:host(.paper__elevation--secondary) {\n  box-shadow: $shadow-3;\n}\n\n.paper__display {\n  display: contents;\n}\n","import { Component, ComponentInterface, Host, h, Prop, State } from '@stencil/core';\nimport { PaperElevation, PaperBackground, BorderColor } from './paper-interface';\n\n@Component({\n  tag: 'bds-paper',\n  styleUrl: 'paper.scss',\n  shadow: true,\n})\nexport class Paper implements ComponentInterface {\n  @State() hasBorder = true;\n  @State() constElevation: string;\n  /**\n   * Size. Entered as one of the size. Can be one of:\n   * 'static', 'primary', 'secondary';\n   */\n  @Prop({ mutable: true, reflect: true }) elevation?: PaperElevation = 'static';\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  /**\n   * Prop for set the border of the component.\n   */\n  @Prop() border?: boolean = false;\n  /**\n   * Prop for set the height of the component.\n   */\n  @Prop() height?: string = null;\n\n  /**\n   * Prop for set the width of the component.\n   */\n  @Prop() width?: string = null;\n\n  /**\n   * Prop for set the background color.\n   */\n  @Prop() bgColor?: PaperBackground = 'surface-1';\n\n  /**\n   * Prop for set the border color.\n   */\n  @Prop() borderColor?: BorderColor = null;\n\n  componentWillLoad() {\n    this.border === true ? (this.hasBorder = false) : (this.hasBorder = true);\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          [`paper__elevation--${this.elevation}`]: this.hasBorder,\n          border: this.border,\n          [`bg-${this.bgColor}`]: true,\n          [`border-${this.borderColor}`]: true,\n        }}\n        style={{ height: `${this.height}`, width: `${this.width}` }}\n      >\n        <div class=\"paper__display\" data-test={this.dataTest}>\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}