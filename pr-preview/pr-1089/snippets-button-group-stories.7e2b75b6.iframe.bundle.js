"use strict";(self.webpackChunkblip_ds=self.webpackChunkblip_ds||[]).push([[5648],{"./src/snippets/button-group.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CompleteButtonGroup:()=>CompleteButtonGroup,FilterButtonGroup:()=>FilterButtonGroup,InteractiveButtonGroup:()=>InteractiveButtonGroup,MultiSelectButtonGroup:()=>MultiSelectButtonGroup,SimpleButtonGroup:()=>SimpleButtonGroup,ThemeSelector:()=>ThemeSelector,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Snippets/Button Group"},SimpleButtonGroup=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-button-group",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"builder-publish-bot"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"search"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"email"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"bell"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"settings-general"})]}),InteractiveButtonGroup=()=>{const[selectedButton,setSelectedButton]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const buttonGroup=document.getElementById("button-group");return buttonGroup.addEventListener("buttonSelected",(obj=>{setSelectedButton(obj.detail)})),()=>{buttonGroup.removeEventListener("buttonSelected",(obj=>{setSelectedButton("")}))}}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-button-group",{id:"button-group",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"builder-publish-bot",id:"bot-builder-publish"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"search",id:"bot-search"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"email",id:"bot-email"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"bell",id:"bot-bell"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{"icon-left":"settings-general",id:"bot-settings"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-grid",{padding:"y-3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-typo",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("strong",{children:"Botão selecionado:"})," ",selectedButton]})})]})},DATA=[{id:1,name:"Group 1"},{id:2,name:"Group 2"},{id:3,name:"Group 3"}],CompleteButtonGroup=()=>{const[selectedGroup,setSelectedGroup]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card",{height:"fit-content",width:"500px",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-header",{align:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-title",{text:"Selecione um Grupo"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-content",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button-group",{children:DATA.map((group=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{onClick:()=>(group=>{setSelectedGroup(group)})(group.name),variant:group.name===selectedGroup?"solid":"outline",children:group.name},group.id)))})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-footer",{align:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-typo",{variant:"fs-14",children:["Grupo selecionado: ",selectedGroup]})})]})},DATAGroup=[{id:1,category:"Tecnologia",items:["Laptop","Smartphone","Tablet"]},{id:2,category:"Moda",items:["Roupas","Calçados","Acessórios"]},{id:3,category:"Esportes",items:["Bola","Raquete","Tênis"]}],FilterButtonGroup=()=>{var _DATAGroup$find;const[selectedCategory,setSelectedCategory]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),filteredItems=(null===(_DATAGroup$find=DATAGroup.find((data=>data.category===selectedCategory)))||void 0===_DATAGroup$find?void 0:_DATAGroup$find.items)||[];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card",{height:"fit-content",width:"500px",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-header",{align:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-title",{text:"Selecione uma Categoria"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card-content",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button-group",{children:DATAGroup.map((data=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{onClick:()=>setSelectedCategory(data.category),variant:data.category===selectedCategory?"solid":"outline",children:data.category},data.id)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-grid",{margin:"t-2",direction:"column",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-typo",{bold:"bold",children:["Itens da Categoria: ",selectedCategory]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("ul",{children:filteredItems.map(((item,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("li",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-typo",{children:item})},index)))})]})]})]})},THEMES=[{id:1,name:"Light Theme",class:"light"},{id:2,name:"Dark Theme",class:"dark"}],ThemeSelector=()=>{const[selectedTheme,setSelectedTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(THEMES[0].class);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const buttonGroup=document.getElementById("button-group-theme");buttonGroup&&(buttonGroup.addEventListener("buttonSelected",(event=>{console.log("Botão selecionado:",event.detail)})),buttonGroup.activateButton(0))}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card",{height:"fit-content",width:"500px",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-header",{align:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-title",{text:"Selecione um Tema"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card-content",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button-group",{id:"button-group-theme",children:THEMES.map((theme=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{onClick:()=>{return themeClass=theme.class,void setSelectedTheme(themeClass);var themeClass},variant:theme.class===selectedTheme?"solid":"outline",children:theme.name},theme.id)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-theme-provider",{theme:selectedTheme,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-paper",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-grid",{direction:"column",margin:"y-4",padding:"2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-typo",{variant:"fs-24",bold:"bold",children:"Conteúdo com tema aplicado"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-typo",{children:"Este conteúdo será estilizado conforme o tema selecionado."})]})})})]})]})},OPTIONS=[{id:1,label:"Opção A"},{id:2,label:"Opção B"},{id:3,label:"Opção C"},{id:4,label:"Opção D"}],MultiSelectButtonGroup=()=>{const[selectedOptions,setSelectedOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card",{height:"fit-content",width:"500px",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-header",{align:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-card-title",{text:"Selecione Opções Múltiplas"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("bds-card-content",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button-group",{multiple:!0,children:OPTIONS.map((option=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-button",{onClick:()=>(optionId=>{const newSelectedOptions=new Set(selectedOptions);newSelectedOptions.has(optionId)?newSelectedOptions.delete(optionId):newSelectedOptions.add(optionId),setSelectedOptions(newSelectedOptions)})(option.id),variant:selectedOptions.has(option.id)?"solid":"outline",children:option.label},option.id)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{style:{marginTop:"1rem"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-typo",{bold:"bold",children:"Opções Selecionadas:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("ul",{children:OPTIONS.filter((option=>selectedOptions.has(option.id))).map((option=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("li",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("bds-typo",{children:option.label})},option.id)))})]})]})]})};SimpleButtonGroup.parameters={...SimpleButtonGroup.parameters,docs:{...SimpleButtonGroup.parameters?.docs,source:{originalSource:'args => <bds-button-group>\n    <bds-button icon-left="builder-publish-bot"></bds-button>\n    <bds-button icon-left="search"></bds-button>\n    <bds-button icon-left="email"></bds-button>\n    <bds-button icon-left="bell"></bds-button>\n    <bds-button icon-left="settings-general"></bds-button>\n  </bds-button-group>',...SimpleButtonGroup.parameters?.docs?.source}}},InteractiveButtonGroup.parameters={...InteractiveButtonGroup.parameters,docs:{...InteractiveButtonGroup.parameters?.docs,source:{originalSource:'() => {\n  const [selectedButton, setSelectedButton] = useState(\'\');\n  useEffect(() => {\n    const buttonGroup = document.getElementById(\'button-group\');\n    buttonGroup.addEventListener(\'buttonSelected\', obj => {\n      setSelectedButton(obj.detail);\n    });\n    return () => {\n      buttonGroup.removeEventListener(\'buttonSelected\', obj => {\n        setSelectedButton(\'\');\n      });\n    };\n  }, []);\n  return <div>\n      <bds-button-group id="button-group">\n        <bds-button icon-left="builder-publish-bot" id="bot-builder-publish"></bds-button>\n        <bds-button icon-left="search" id="bot-search"></bds-button>\n        <bds-button icon-left="email" id="bot-email"></bds-button>\n        <bds-button icon-left="bell" id="bot-bell"></bds-button>\n        <bds-button icon-left="settings-general" id="bot-settings"></bds-button>\n      </bds-button-group>\n      <bds-grid padding="y-3">\n        <bds-typo>\n          <strong>Botão selecionado:</strong> {selectedButton}\n        </bds-typo>\n      </bds-grid>\n    </div>;\n}',...InteractiveButtonGroup.parameters?.docs?.source}}},CompleteButtonGroup.parameters={...CompleteButtonGroup.parameters,docs:{...CompleteButtonGroup.parameters?.docs,source:{originalSource:'() => {\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const handleGroupSelection = group => {\n    setSelectedGroup(group);\n  };\n  return <bds-card height="fit-content" width="500px">\n      <bds-card-header align="center">\n        <bds-card-title text="Selecione um Grupo"></bds-card-title>\n      </bds-card-header>\n      <bds-card-content>\n        <bds-button-group>\n          {DATA.map(group => <bds-button key={group.id} onClick={() => handleGroupSelection(group.name)} variant={group.name === selectedGroup ? \'solid\' : \'outline\'}>\n              {group.name}\n            </bds-button>)}\n        </bds-button-group>\n      </bds-card-content>\n      <bds-card-footer align="center">\n        <bds-typo variant="fs-14">Grupo selecionado: {selectedGroup}</bds-typo>\n      </bds-card-footer>\n    </bds-card>;\n}',...CompleteButtonGroup.parameters?.docs?.source}}},FilterButtonGroup.parameters={...FilterButtonGroup.parameters,docs:{...FilterButtonGroup.parameters?.docs,source:{originalSource:'() => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const filteredItems = DATAGroup.find(data => data.category === selectedCategory)?.items || [];\n  return <bds-card height="fit-content" width="500px">\n      <bds-card-header align="center">\n        <bds-card-title text="Selecione uma Categoria"></bds-card-title>\n      </bds-card-header>\n      <bds-card-content>\n        <bds-button-group>\n          {DATAGroup.map(data => <bds-button key={data.id} onClick={() => setSelectedCategory(data.category)} variant={data.category === selectedCategory ? \'solid\' : \'outline\'}>\n              {data.category}\n            </bds-button>)}\n        </bds-button-group>\n        <bds-grid margin="t-2" direction="column">\n          <bds-typo bold="bold">Itens da Categoria: {selectedCategory}</bds-typo>\n          <ul>\n            {filteredItems.map((item, index) => <li key={index}>\n                <bds-typo>{item}</bds-typo>\n              </li>)}\n          </ul>\n        </bds-grid>\n      </bds-card-content>\n    </bds-card>;\n}',...FilterButtonGroup.parameters?.docs?.source}}},ThemeSelector.parameters={...ThemeSelector.parameters,docs:{...ThemeSelector.parameters?.docs,source:{originalSource:'() => {\n  const [selectedTheme, setSelectedTheme] = useState(THEMES[0].class);\n  const applyTheme = themeClass => {\n    setSelectedTheme(themeClass);\n  };\n  useEffect(() => {\n    const buttonGroup = document.getElementById(\'button-group-theme\');\n    if (buttonGroup) {\n      buttonGroup.addEventListener(\'buttonSelected\', event => {\n        console.log(\'Botão selecionado:\', event.detail);\n      });\n      buttonGroup.activateButton(0);\n    }\n  }, []);\n  return <bds-card height="fit-content" width="500px">\n      <bds-card-header align="center">\n        <bds-card-title text="Selecione um Tema"></bds-card-title>\n      </bds-card-header>\n      <bds-card-content>\n        <bds-button-group id="button-group-theme">\n          {THEMES.map(theme => <bds-button key={theme.id} onClick={() => applyTheme(theme.class)} variant={theme.class === selectedTheme ? \'solid\' : \'outline\'}>\n              {theme.name}\n            </bds-button>)}\n        </bds-button-group>\n        <bds-theme-provider theme={selectedTheme}>\n          <bds-paper>\n            <bds-grid direction="column" margin="y-4" padding="2">\n              <bds-typo variant="fs-24" bold="bold">\n                Conteúdo com tema aplicado\n              </bds-typo>\n              <bds-typo>Este conteúdo será estilizado conforme o tema selecionado.</bds-typo>\n            </bds-grid>\n          </bds-paper>\n        </bds-theme-provider>\n      </bds-card-content>\n    </bds-card>;\n}',...ThemeSelector.parameters?.docs?.source}}},MultiSelectButtonGroup.parameters={...MultiSelectButtonGroup.parameters,docs:{...MultiSelectButtonGroup.parameters?.docs,source:{originalSource:'() => {\n  const [selectedOptions, setSelectedOptions] = useState(new Set());\n  const toggleOption = optionId => {\n    const newSelectedOptions = new Set(selectedOptions);\n    if (newSelectedOptions.has(optionId)) {\n      newSelectedOptions.delete(optionId);\n    } else {\n      newSelectedOptions.add(optionId);\n    }\n    setSelectedOptions(newSelectedOptions);\n  };\n  return <bds-card height="fit-content" width="500px">\n      <bds-card-header align="center">\n        <bds-card-title text="Selecione Opções Múltiplas"></bds-card-title>\n      </bds-card-header>\n      <bds-card-content>\n        <bds-button-group multiple={true}>\n          {OPTIONS.map(option => <bds-button key={option.id} onClick={() => toggleOption(option.id)} variant={selectedOptions.has(option.id) ? \'solid\' : \'outline\'}>\n              {option.label}\n            </bds-button>)}\n        </bds-button-group>\n        <div style={{\n        marginTop: \'1rem\'\n      }}>\n          <bds-typo bold="bold">Opções Selecionadas:</bds-typo>\n          <ul>\n            {OPTIONS.filter(option => selectedOptions.has(option.id)).map(option => <li key={option.id}>\n                <bds-typo>{option.label}</bds-typo>\n              </li>)}\n          </ul>\n        </div>\n      </bds-card-content>\n    </bds-card>;\n}',...MultiSelectButtonGroup.parameters?.docs?.source}}};const __namedExportsOrder=["SimpleButtonGroup","InteractiveButtonGroup","CompleteButtonGroup","FilterButtonGroup","ThemeSelector","MultiSelectButtonGroup"]}}]);