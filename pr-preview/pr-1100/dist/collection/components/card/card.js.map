{"version":3,"file":"card.js","sourceRoot":"","sources":["../../../../src/components/card/card.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentInterface, Host, h, Prop, Event, Element, State, EventEmitter } from '@stencil/core';\nimport { PaperBackground, BorderColor } from '../paper/paper-interface';\n\nexport type elevationType = 'primary' | 'secondary' | 'static' | 'none';\n\n@Component({\n  tag: 'bds-card',\n  styleUrl: 'card.scss',\n  shadow: true,\n})\nexport class Card implements ComponentInterface {\n  /**\n   * Prop for set the height of the component.\n   */\n  @Prop() height?: string = null;\n\n  /**\n   * Prop for set the width of the component.\n   */\n  @Prop() width?: string = 'fit-content';\n  /**\n   * If the prop is true, the component will be clickable.\n   */\n  @Prop() clickable?: boolean = false;\n  /**\n   * Prop for set the background color.\n   */\n  @Prop() bgColor?: PaperBackground = 'surface-1';\n  \n  /**\n   * Prop for set the background color.\n   */\n   @Prop() selectable?: boolean = false;\n  /**\n   * Prop for set the border color.\n   */\n  @Prop({ mutable: true }) borderColor?: BorderColor = null;\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  @State() isHovered = false;\n  @State() isPressed = false;\n  @State() elevation: elevationType = 'primary';\n\n  /**\n   * This event will be dispatch when click on the component.\n   */\n  @Event() bdsClick: EventEmitter<PointerEvent | KeyboardEvent>;\n\n  @Element() element: HTMLElement;\n\n  private cardElement: HTMLElement;\n\n  componentDidLoad() {\n    this.cardElement = this.element.shadowRoot.querySelector('.card');\n\n    if (this.cardElement && (this.clickable === true || this.selectable === true)) {\n      this.cardElement.addEventListener('mouseenter', () => {\n        this.isHovered = true;\n      });\n\n      this.cardElement.addEventListener('mouseleave', () => {\n        this.isHovered = false;\n      });\n\n      this.cardElement.addEventListener('mousedown', (event: PointerEvent) => {\n        this.isPressed = true;\n        this.bdsClick.emit(event);\n      });\n\n      document.addEventListener('mouseup', () => {\n        this.isPressed = false;\n      });\n\n      this.cardElement.addEventListener('keydown', (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          this.isPressed = true;\n          this.bdsClick.emit(event);\n        }\n      });\n\n      this.cardElement.addEventListener('keyup', (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          this.isPressed = false;\n        }\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.isPressed) {\n      this.elevation = 'static';\n    } else if (this.isHovered) {\n      this.elevation = 'secondary';\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    if (event.key == 'Enter') {\n      this.isPressed = true;\n      this.bdsClick.emit(event);\n    }\n  }\n\n  render() {\n    const styleHost = {\n      width: this.width,\n    };\n\n    return (\n      <Host style={styleHost}>\n        <bds-paper\n          border={this.clickable ? false : true}\n          elevation={this.elevation}\n          class={{\n            card: true,\n            card_hover: this.clickable,\n            card_hover_selectable: this.isHovered && this.selectable ? true : false,\n            card_hover_pressed: this.isHovered && this.selectable ? true : false\n          }}\n          height={this.height}\n          width={this.width}\n          bgColor={this.bgColor}\n          data-test={this.dataTest}\n          border-color={this.borderColor ? this.borderColor : 'border-1'}\n        >\n          <div tabindex=\"0\" class=\"focus\" onKeyDown={this.handleKeyDown.bind(this)}></div>\n          <bds-grid xxs=\"12\" direction=\"column\" gap=\"2\" padding=\"2\">\n            <slot></slot>\n          </bds-grid>\n        </bds-paper>\n      </Host>\n    );\n  }\n}\n"]}