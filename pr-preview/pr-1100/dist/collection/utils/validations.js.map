{"version":3,"file":"validations.js","sourceRoot":"","sources":["../../../src/utils/validations.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,GAAG,yCAAyC,CAAC;AAC7D,MAAM,gBAAgB,GAAG,IAAI,CAAC;AAC9B,MAAM,gBAAgB,GAAG,oCAAoC,CAAC;AAC9D,kCAAkC;AAClC,MAAM,SAAS,GAAG,+EAA+E,CAAC;AAElG,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAAY,EAAW,EAAE;IACvD,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAY,EAAW,EAAE;IACxD,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,IAAY,EAAW,EAAE;IAC5D,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,IAAY,EAAW,EAAE;IACtD,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAU,EAAE;IAC/C,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAClC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAC/C,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;IAEtD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["const emailRegex = /^\\w+([.+,-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,}$/;\nconst whitespaaceRegex = /\\S/;\nconst phoneNumberRegex = /^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/;\n// const numberRegex = /^[0-9]*$/;\nconst dateRegex = /^((0?[1-9]|[12][0-9]|3[01])[- /.](0?[1-9]|1[012])[- /.](19|20|21)?[0-9]{2})*$/;\n\nexport const emailValidation = (term: string): boolean => {\n  if (term && !emailRegex.test(term)) {\n    return true;\n  }\n};\n\nexport const numberValidation = (term: string): boolean => {\n  if (term && !phoneNumberRegex.test(term)) {\n    return true;\n  }\n};\n\nexport const whitespaceValidation = (term: string): boolean => {\n  return whitespaaceRegex.test(term);\n};\n\nexport const dateValidation = (term: string): boolean => {\n  return dateRegex.test(term);\n};\n\nexport const maskDate = (term: string): string => {\n  let value = term;\n  value = value.replace(/\\D+/g, '');\n  value = value.replace(/^(\\d{2})(\\d)/, '$1/$2');\n  value = value.replace(/^(\\d{2}\\/\\d{2})(\\d)/, '$1/$2');\n\n  return value;\n};\n"]}