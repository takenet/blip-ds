{"file":"p-DzNR1kSf.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/radio/radio.scss?tag=bds-radio&encapsulation=shadow","src/components/radio/radio.tsx"],"sourcesContent":["@use '../../globals/helpers' as *;\n\n$radio-spacing-text: 8px;\n$radio-circle-width: 24px;\n$radio-circle-height: 24px;\n$radio-border-radius: 16px;\n$radio-circle-pointer-width: 10px;\n$radio-circle-pointer-height: 10px;\n\n:host {\n  display: flex;\n}\n.radio {\n  display: flex;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  flex-wrap: nowrap;\n\n  [type='radio'] {\n    display: none;\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &__circle {\n    @include animation();\n    @include flex-align-middle();\n    width: $radio-circle-width;\n    height: $radio-circle-height;\n    flex-shrink: 0;\n    border: 2px solid $color-content-default;\n    padding: 4px;\n    border-radius: 100%;\n    box-sizing: border-box;\n    background: transparent;\n    position: relative;\n\n    &__pointer {\n      @include animation();\n      border-radius: 100%;\n      background: transparent;\n      height: $radio-circle-pointer-height;\n      width: $radio-circle-pointer-width;\n    }\n\n    .hover {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n\n    .focus:focus-visible {\n      display: flex;\n      position: absolute;\n      border: 2px solid $color-focus;\n      border-radius: 4px;\n      padding: 4px;\n      width: 100%;\n      height: 100%;\n      outline: none;\n    }\n  }\n\n  &:hover {\n    border-color: $color-content-disable;\n    .hover {\n      display: flex;\n      background-color: $color-hover;\n      position: absolute;\n      width: 36px;\n      height: 36px;\n      opacity: 1;\n      border-radius: 24px;\n      transition:\n        width 0.2s,\n        height 0.2s;\n    }\n  }\n\n  &__text {\n    @include no-select();\n    padding-left: $radio-spacing-text;\n    color: $color-content-default;\n  }\n\n  /** State Checked */\n  &__input[type='radio']:checked ~ &__circle {\n    background: transparent;\n    border-color: $color-content-default;\n\n    .radio__circle__pointer {\n      background-color: $color-primary;\n    }\n\n    &:hover {\n      border-color: $color-content-default;\n\n      .radio__circle__pointer {\n        background-color: $color-primary;\n      }\n    }\n  }\n\n  /** State Disabled */\n  &__input[type='radio']:disabled ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: transparent;\n    }\n  }\n  &__input[type='radio']:disabled:hover ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: transparent;\n    }\n  }\n  &__input[type='radio']:disabled:checked ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: $color-content-default;\n    }\n  }\n  &__input[type='radio']:disabled:checked:hover ~ &__circle {\n    border-color: $color-content-disable;\n    background-color: $color-surface-3;\n\n    .radio__circle__pointer {\n      background-color: $color-content-default;\n    }\n  }\n\n  &__input[type='radio']:disabled ~ &__text {\n    color: $color-content-disable;\n    cursor: not-allowed;\n  }\n  &__input[type='radio']:disabled ~ &__circle {\n    cursor: not-allowed;\n  }\n}\n","import { Component, h, Prop, Event, EventEmitter, Watch, State, Method, Host } from '@stencil/core';\n\nlet radioButtonIds = 0;\n@Component({\n  tag: 'bds-radio',\n  styleUrl: 'radio.scss',\n  shadow: true,\n})\nexport class Radio {\n  private nativeInput?: HTMLInputElement;\n\n  @State() radioId?: string;\n\n  /**\n   * Refer. Field to add refer in radio buttom.\n   */\n  @Prop() refer?: string;\n\n  /**\n   * label in radio, with he the input size increases.\n   */\n  @Prop() label?: string;\n\n  /**\n   * The value of the input.\n   */\n  @Prop() value!: string;\n\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name?: string;\n\n  /**\n   * If `true`, the checkbox is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) checked?: boolean = false;\n\n  /**\n   * If `true`, the user cannot interact with the checkbox.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * Data test is the prop to specifically test the component action object.\n   */\n  @Prop() dataTest?: string = null;\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() bdsChange!: EventEmitter<{ checked: boolean }>;\n\n  /**\n   * Emitted when the value has changed because of a click event.\n   */\n  @Event() bdsClickChange!: EventEmitter<{ checked: boolean }>;\n\n  @Watch('checked')\n  protected checkedChanged(isChecked: boolean): void {\n    this.bdsChange.emit({ checked: isChecked });\n  }\n\n  @Method()\n  getInputElement(): Promise<HTMLInputElement> {\n    return Promise.resolve(this.nativeInput);\n  }\n\n  @Method()\n  getValue(): Promise<boolean> {\n    return Promise.resolve(this.nativeInput.checked);\n  }\n\n  private onClick = (event: Event): void => {\n    this.checked = true;\n    this.bdsClickChange.emit({ checked: this.checked });\n    event.stopPropagation();\n  };\n\n  private refNativeInput = (input: HTMLInputElement): void => {\n    this.nativeInput = input;\n  };\n\n  connectedCallback(): void {\n    this.radioId = this.refer || `bds-radio-${radioButtonIds++}`;\n  }\n\n  private handleClickKey(event) {\n    if ((event.key === 'Enter' || event.key === ' ') && !this.disabled) {\n      this.onClick(event);\n      event.preventDefault();\n      this.bdsClickChange.emit({ checked: this.checked });\n    }\n  }\n\n  render(): HTMLElement {\n    return (\n      <Host>\n        <label class=\"radio\" htmlFor={this.radioId}>\n          <input\n            class=\"radio__input\"\n            type=\"radio\"\n            ref={this.refNativeInput}\n            id={this.radioId}\n            onClick={this.onClick}\n            disabled={this.disabled}\n            checked={this.checked}\n            value={this.value}\n            name={this.name}\n            data-test={this.dataTest}\n          />\n          <div class=\"radio__circle\">\n            {!this.disabled ? <div class=\"focus\" tabindex=\"0\" onKeyDown={this.handleClickKey.bind(this)}></div> : ''}\n            {!this.disabled ? <div class=\"hover\"></div> : ''}\n            <div class=\"radio__circle__pointer\"></div>\n          </div>\n\n          {this.label && (\n            <bds-typo class=\"radio__text\" variant=\"fs-14\" bold={this.checked ? 'bold' : 'regular'} tag=\"span\">\n              {this.label}\n            </bds-typo>\n          )}\n\n          <slot />\n        </label>\n      </Host>\n    );\n  }\n}\n"],"version":3}