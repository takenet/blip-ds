(self.webpackChunkblip_ds=self.webpackChunkblip_ds||[]).push([[7236],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext},"./src/pages/styles/config-styles.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs");const config_styles_1_namespaceObject=__webpack_require__.p+"static/media/config-styles-1.8a9caf70.jpg";function _createMdxContent(props){const _components={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{title:"Vamos Começar/Configuração de Estilo"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"configurar-estilo-no-projeto",children:"Configurar estilo no projeto"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Os tokens de cores foram definidas no Design System atráves de variáveis utilizando sass."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Para disponibilizar essas variáveis é necessário importar pelo destino indicado a seguir."}),"\n",(0,jsx_runtime.jsx)("br",{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"estilizar-um-componente-via-sass",children:"Estilizar um componente via sass"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"criar-um-scss-para-a-página",children:"Criar um scss para a página"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Verifique se o projeto possuí a biblioteca sass instalada. Caso não possua, instale rodando o seguinte comando:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{children:"npm install sass\n"})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Na pasta onde se encontra o arquivo html do que será alterado, adicionar um arquivo scss, caso não exista."}),"\n",(0,jsx_runtime.jsx)("img",{src:config_styles_1_namespaceObject,alt:"Imagem de exemplo"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"importar-as-variáveis-de-cores-no-scss",children:"Importar as variáveis de cores no scss"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"No arquivo scss, realizar a importação das variáveis:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{children:'@import "~blip-ds/dist/collection/styles/_colors.scss"\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"referenciar-as-classes-dos-elementos-no-scss",children:"Referenciar as classes dos elementos no scss"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Atraves da propiedade class ou className (em projetos React), referenciar com um valor que será usado para estilizar o elemento."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<bds-grid>\n  <bds-typo class="text1">Brand</bds-typo>\n  <bds-typo class="text2">Secondary</bds-typo>\n  <bds-typo class="text3">Success</bds-typo>\n</bds-grid>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"aplicar-a-variável-na-propriedade",children:"Aplicar a variável na propriedade"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"No arquivo SCSS, com a importação das variáveis realizadas, utilizar a propriedade de cor desejada e aplicar a variável referente a cor definida."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sass",children:'@import "~blip-ds/dist/collection/styles/_colors.scss"\n\n.text1 {\n  color: $color-brand;\n}\n.text2 {\n  color: $color-primary;\n}\n.text3 {\n  color: $color-success;\n}\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"customizando-cores-do-design-system",children:"Customizando cores do Design System"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"É possível customizar remos substituir localmente as cores. Aplicando em um css global, trocamos os valores das variáveis ou importando um novo arquivo ao css."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"arquivo-global-cssscss-no-projeto",children:"Arquivo global css/scss no projeto"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.strong,{children:"Cores"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sass",children:":root {\n    --color-brand: indique a cor escolhida;\n    --color-primary: indique a cor escolhida;\n    --color-secondary: indique a cor escolhida;\n}\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Fontes"}),"\nIndique a fonte no css global do pack para substituir a fonte do Design System (Nunito Sans)."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:'Atenção! É preciso tomar cuidado com a aplicação de classes globais como "*", essas definições conseguem aplicar estilos nas tags dos componentes. Não é recomendado a aplicação do exemplo abaixo:'}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-css",children:"* {\n  padding: 0;\n  margin: 0;\n}\n"})})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);