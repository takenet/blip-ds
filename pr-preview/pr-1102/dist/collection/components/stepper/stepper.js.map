{"version":3,"file":"stepper.js","sourceRoot":"","sources":["../../../../src/components/stepper/stepper.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAMxF,MAAM,OAAO,UAAU;IAGrB,iBAAiB;QACf,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC1C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,IAAI,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC3C,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IAEI,KAAK,CAAC,aAAa,CAAC,KAAa;QACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IACzC,CAAC;IAED;;;;;OAKG;IAEI,KAAK,CAAC,gBAAgB,CAAC,KAAa;QACzC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IAEI,KAAK,CAAC,aAAa;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC;IACtE,CAAC;IAED;;;;OAIG;IAEI,KAAK,CAAC,gBAAgB;QAC3B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;IACH,CAAC;IAED;;;;OAIG;IAEI,KAAK,CAAC,mBAAmB;QAC9B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IAED,IAAY,YAAY;QACtB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEO,UAAU;QAChB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAElD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YAClD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;gBACxC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACtD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,oBAAoB;YAC9B,8DAAQ,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, ComponentInterface, h, Element, Method, Host } from '@stencil/core';\n@Component({\n  tag: 'bds-stepper',\n  styleUrl: 'stepper.scss',\n  shadow: true,\n})\nexport class BdsStepper implements ComponentInterface {\n  @Element() el: HTMLBdsStepperElement;\n\n  connectedCallback() {\n    this.childOptions.forEach((option, index) => {\n      option.index = index;\n      if (index === this.childOptions.length - 1) {\n        option.last = true;\n      }\n    });\n  }\n\n  componentDidLoad() {\n    this.renderLine();\n  }\n\n  /**\n   * Set the active step\n   *\n   * @param index The index of the step to be set as active\n   * @returns void\n   */\n  @Method()\n  public async setActiveStep(index: number): Promise<void> {\n    this.resetActiveSteps();\n    this.childOptions[index].active = true;\n  }\n\n  /**\n   * Set the completed step\n   *\n   * @param index The index of the step to be set as completed\n   * @returns void\n   */\n  @Method()\n  public async setCompletedStep(index: number): Promise<void> {\n    this.childOptions[index].completed = true;\n  }\n\n  /**\n   * Returns the active step\n   *\n   * @returns HTMLBdsStepElement\n   */\n  @Method()\n  public async getActiveStep(): Promise<number> {\n    return this.childOptions.find((step) => step.active === true).index;\n  }\n\n  /**\n   * Reset all active steps\n   *\n   * @returns void\n   */\n  @Method()\n  public async resetActiveSteps() {\n    for (const step of this.childOptions) {\n      step.active = false;\n    }\n  }\n\n  /**\n   * Reset all completed steps\n   *\n   * @returns void\n   */\n  @Method()\n  public async resetCompletedSteps() {\n    for (const step of this.childOptions) {\n      step.completed = false;\n    }\n  }\n\n  private get childOptions(): HTMLBdsStepElement[] {\n    return Array.from(this.el.querySelectorAll('bds-step'));\n  }\n\n  private renderLine() {\n    const line = document.createElement('div');\n    line.classList.add('stepper__container__divisor');\n\n    Array.from(this.childOptions).forEach((item, idx) => {\n      if (this.childOptions.length - 1 != idx) {\n        item.insertAdjacentHTML('afterend', line.outerHTML);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host class=\"stepper__container\">\n        <slot />\n      </Host>\n    );\n  }\n}\n"]}